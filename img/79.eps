%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 21091.eps
%%Creator: Adobe Illustrator(R) 21.1
%%For: Fibie
%%CreationDate: 9/21/2017
%%BoundingBox: 0 0 527 326
%%HiResBoundingBox: 0 0 527 325.3334
%%CropBox: 0 0 527 325.3334
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.1.0 x326 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 80 8%%BeginData: 22287 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C451B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B
%1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B
%1B1B151B1B1B151B1B1B15151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B1B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B1B1B
%151B151B153D1B1B151B1B3D151B151B151B151B151B151B151B1B1B153D
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B15151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B158B611B151B151B618B151B158B611B151B153D151B151B15
%3D151B15AF158B3D1B151B151B151B151B151B153D151B151B151B153D15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B153D613D3DAF1B8B3D8B611B153D618B618B
%61673D6785616167853D153DAF61AF678567858B3D8B3D8B3D6785678B8B
%3D8B6167858B611B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B
%1B1B151B1B1B151B1B1B151B1B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B158B8561856185613D
%AF1B1B158B15613D616185858B61851561151B158B858B61AF8561618B85
%FD04618B6167618B85613D613D61151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B1B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B153D61
%613D673D673D61613D153D1B1B3D1B3D61613D3D3D613D3D3D153D3D613D
%3D61673D3D3D673DAF613D61FD043D611BFD043D1B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B15151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B153D151B151B151B
%151B151B151B151B151B151B151B3D3D151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B15FD041B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B
%151B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B153D1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B
%1B1B151B1B1B151B1B1B15151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B1B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B15151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B1515151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B
%151B151B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B
%1B1B151B1B1B151B1B1B151B156185AF8561151B1B1B151B1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B
%1B1B151B1B1B151B1B1B151B1B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B153D151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B158BFD05FF8B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B1B151B151B151B151B151B
%151B151B151B151B151B151B153D85FFFFFF853D151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B158BFD07FF8B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B15151B151B151B15
%1B151B151B151B151B151B151B151B153DA9FD05FFA91B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B153DFD09FF
%85853D151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B15FD041B151B1B1B15
%1B1B1B151B1B1B151B1B1B151B1B1BAFFD07FF851B1B1B151B1B1B151B1B
%1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B61FD0CFF3D151B
%1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B15151B151B151B151B151B151B15
%1B151B151B151B151B3DFFAF61858B1567FFFFA9FF611B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B153D85FFFFAFA9AFA9FFAF
%AFA9AFA9FFAF8B371B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B1B151B151B
%151B151B151B151B151B151B151B151B1BAFFF8B153D3D1B3DFD05FF3D1B
%151B151B151B151B151B151B151B151B151B151B151B151B153DAFFFAF3D
%153D153D1B3D153D1B1B3DFFFFFF3D1B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%15151B151B151B151B151B151B151B151B151B151B3DFFFFFF853DA9FFAF
%3D37AFFD04FFA961151B151B151B151B151B151B151B151B151B151B151B
%151561FFFF3D15FFAFFFA91B15AFA9FFA93D15FFFFFF151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B1B151B1B1B151B1B1B151B1B1B151B1B1B151B3DFFFF
%FF8B1B85FFFFFF611B6161618BFFFFFF8B151B151B1B1B151B1B1B151B1B
%1B151B1B1B151B1B1B158BFFFF15AFFD04FF1B1B85FFFFFFAF1BFFFFFF67
%151B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B151B151B151B151B151B151B151B15
%1B151B158BFFFFFF8B1561FFFFFF61153D3D85158BFFFFFF3D151B151B15
%1B151B151B151B151B151B151B151B151B61FFFF3D3DFFAFFFA91B15AFFF
%FFFF6115FFFFFF611B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B1B151B151B151B
%151B151B151B151B151B151B85FFFFFFAFAF3D8BAF8B1B3D1BFFFF8B3DFF
%FFFF611B151B151B151B151B151B151B151B151B151B151B153DFFFFAF1B
%151B1B3D151B1B3D3D3D15AFFFFFFF61151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%15151B151B151B151B151B151B151B151B151B1561FD05FF3D153D151B85
%6185FF3D1BAFFFFF61151B151B151B151B151B151B151B151B151B151B15
%1B1561FFFFFFAF858B85FFA98B618561FD04FFAF151B151B151B151B151B
%151B153D61613D1B151B151B151B151B151B151B151B151B151B151B151B
%151B151B15FD041B151B1B1B151B1B1B151B1B1B15FD041BFD05FF8B61AF
%FF8BFF3D3D1B61FD04FF3D1B1B1B151B1B1B151B151B151B1B1B151B1B1B
%151B1B1B156185AF85AFAFAF85AFAFAF85AF858B858B1B1B151B1B1B151B
%1B1B151B1BAFFD04FFAF3D151B151B1B1B151B1B1B151B1B1B151B1B1B15
%1B1B1B151B1B1B15151B151B151B151B151B151B151B151B151B151B3DFD
%0CFF8BAFFFFFFF611B151B151B151B151B15616161151B151B151B151B15
%1B151B151B151B151B151B141B151B151B151B151B151B151B151B151B15
%1B15AFFD06FFAF3D151B151B151B151B151B151B151B151B151B151B151B
%151B151B1B151B151B151B151B151B151B151B151B151B151B15FD046167
%616161676161618B61611B1B151B151B151B151B61FD05FF611B151B151B
%151B151B151B151B151B151B3D3D151B151B151B151B151B151B151B151B
%151B1561FFFFAFFD05FF8561611B151B151B151B151B151B151B151B151B
%151B151B151B15151B151B151B151B151B151B151B151B151B151B151B15
%1B1515151B141B151B1515151B151B151B151B151B151B61FD07FF611B15
%1B151B151B151B151B151B151B143D151B151B151B151B151B151B151B15
%1B151B151B8585151B3DAFFD06FF6115151B151B151B151B151B151B151B
%151B151B151B151B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B15
%1B1B1B151B153D151B1B1B151B1B1B151B1B1B151B1B1B15FD09FF618BFD
%041B151B1B1B151B151B153D3D1B151B151B151B1B1B151B1B1B151B1B1B
%153DAF8B1B3D151B3DFD07FF8561151B151B1B1B151B1B1B151B1B1B151B
%1B1B151B1B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B3D1B151B151B151B151B151B151B151B1561FD0BFFAF151B151B15
%1B151B363D3D3D363D151B3D613D1B151B151B151B151B151B153DAFFF61
%1B151B151BA9FD08FF8B151B151B151B151B151B151B151B151B151B151B
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B153D1B
%1B151B151B151B151B151B151B158BFD0DFFAF613D151B151B3D3D153D1B
%3D1561AFFFFFFFAF61151B151B151B151B151B85FFFF8B151B151B1561FD
%09FF8B151B151B151B151B151B151B151B151B151B15151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B361B151B151B151B151B
%151B151B15AFFD0AFF85FD05FFA93D151B153D151B151B1561FD07FF3D15
%1B151B151B151B15AFFFFFA93D1515153D3D3D85FFFFFF85FFFFFFA91B15
%1B151B151B151B151B151B151B151B15FD041B151B1B1B151B1B1B151B1B
%1B151B1B1B151B1B1B151B1B1B15611B1B151B1B1B151B1B1B151B1561FF
%FFAFFFAFAFFD04FF853DFFAFFFAF85FFAF1B151B3D3D151B153DFD08FFAF
%61613D151B1B1B153DAFFD04FF8B61AFFFFF853D3DAF851B1B67FFFF3D1B
%151B1B1B151B1B1B151B1B1B151B1B1B15151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B143D3D3D363D3D3D363D3D3D151B61
%FF3D61AF3D618B1B613D613D3D158BAF1B61FF3D1B153D151B151B3DFD05
%FF85AFA9FFFFFF8515151B151B158BFD0BFFAF3D1B151B85FFAF3D151B15
%1B151B151B151B151B151B151B151B1B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B1B1B153D1B1B153D3D1B158BFF1B
%61AF3DAFFD043D613D1B3D85AF1561FF8B151B3D3D151B61FFFFFFAF3D3D
%6761671B8BFFFF8561151B151B15FD0DFFAF3D3DFFFF8B151B151B151B15
%1B151B151B151B151B151B15151B151B151B151B151B151B151B151B151B
%151B151B151B151B15616161151B151B151B151B153D151B37FFA961A985
%61AF3DAF856161AF61AF618BFFFF3D1B153D141B85FD04FF8B1561FD053D
%FD04FFAF151B151B158BA9AFA9AFA9AFA9AFA9AFA9FFA9AFA961151B151B
%151B151B151B151B151B151B151B151B1B151B1B1B151B1B1B151B1B1B15
%1B1B1B151B1B1B151B1B1B3DFD05FF851B151B1B1B151B3D3D151B85FD11
%FFAF3D151B3D3D61FD05FF853D3D673D673D67FD05FFAF151B151B151B15
%3D1B1B151B3D3D153D1B3D151B151B151B1B1B151B1B1B151B1B1B151B1B
%1B151B1B151B151B151B151B151B151B151B151B151B151B151B151B3DFD
%07FF851B151B151B153D151B151B61AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%851B151B153D158BFD05FF8B1B8BFD0561FD06FF3D151B151B151B151B15
%1B153D151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B1B151B151B151B151B151B151B151B151B151B151B151B15AFFD04FFAF
%8BAFFF61613D1B151B3D3D151B151B151B151B1B1B153D151B151B1B1B15
%1B151B151B3D1B85FD05FF853D616761613D67FD06FF611B151B151B151B
%151B151B153D151B151B151B151B151B151B151B151B151B151B151B151B
%151B15151B151B151B151B151B151B151B151B151B151B151B153DAFFFFF
%AF3D1B151B3DFFFFFF151B153D141B151B141B151B151B153D141B151B15
%1B151B151B151B153D1561FD05FF8B15616185613D3DFD06FF61143D363D
%363D151B151B153D141B151B151B151B151B151B151B151B151B151B151B
%151B151B15FD041B151B1B1B151B1B1B151B1B1B151B1B1B151B1567AFFF
%FFFF1B1B3D3D3D1B3DFFFFAF613D1B61FD053D613D1B1B1B3D3D1B1B151B
%1B1B151B1B1B151B3D3D15AFFD05FF8B6167618B61AFFD06FF153D1B3D15
%3D3D3D151B1B1B3D3D1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B
%1B151B1B1B15151B151B151B151B151B151B151B151B151B151B158BFD04
%FF613D61FF3DFF3D3D61FD04FF61151B151B151B153D151B153D151B151B
%151B151B151B151B153D151B158BAFFFAFFFFFFFAFFFAFFFFFFFAFFFAFAF
%1B1B151B151B153D151B151B153D151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B1B151B151B151B151B151B151B151B151B15
%1B153DFD05FF673D61613D85613D8BFD05FF3D151B151B151B1B1B151B1B
%3D151B1B1B151B1B1B15FD041B3D1B1B151B1B1B153D1B3D153D1B1B153D
%1B1B151B1B1B151B151B3D3D151B151B3D3D151B151B151B151B151B151B
%151B151B151B151B151B151B151B15151B151B151B151B151B151B151B15
%1B151B151B3DFD05FF3D3D3D8B1B8B3D3D61FD05FF6115151B151B14350D
%2F0C2F0D2F0C2F0D2F0C2F0D2F0C2F0D2F0C2F0D2F0C2F0D2F0D2F0D2F0C
%2F0D2F0C2F0D2F0C2F0D2F141B153D141B151B153D151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B1B151B1B1B151B1B1B151B
%1B1B151B1B1B151B1561FD05FF8B3D67AF43AF613D8BFD05FFAF151B1B1B
%15355253525352535253525352535253525352535253525352535253537D
%7D7D527D7D7D525352535253525352351B1B3D3D1B1B151B3D3D151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B151B151B151B15
%1B151B151B151B151B151B151B15FD05FFAF3D153D3D3D153DFD06FF851B
%151B151B2E539AC39AC39AC39AC39AC39AC39AC39AC39AC39AC39AC39AC3
%9BC3A1C4A1C3A1C39BC39AC39AC39AC39A520C1B153D151B151B153D151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B1B151B15
%1B151B151B151B151B151B151B151B151B61FD06FF671B3D1B67FD07FF3D
%151B151B152F76C3C3C3BDC3C3C3BDC3C3C3BDC3C3C3BDC3C3C3BDC3C3C3
%BDC3C3C4C3C3C3CAFD04C3BDC3C3C3BDC3762F151B3D1B151B151B153D15
%1B151B151B151B151B151B151B151B151B151B151B151B151B15151B151B
%151B151B151B151B151B151B151B151B151B3DAFA9AFA9AFA9AF85AFA9FF
%A9AFA9AF853D151B151B151B0C76BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3
%BCC3BCC3BCC3BCC3BDC3C3C3BCC3C3C3BCC3BCC3BCC3BCC3BC770C1B153D
%151B151B153D141B151B151B151B151B151B151B151B151B151B151B151B
%151B15FD041B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B153D1B1B
%153D1B3D153D1B1B153D1B1B151B1B1B151B152F76C3C3C3BDC3C3C3BDC3
%C3C3BDC3C3C3BDC3C3C3BDC3C3C3BDCAC3C4C3C3C3C4BDC3C3C3BDC3C3C3
%BDC3762F153D3D1B151B1B1B3D3D1B1B151B1B1B151B1B1B151B1B1B151B
%1B1B151B1B1B151B1B1B15151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B0C76BC
%C3BDC3BCC3BDC3BCC3BDC3BCC3C3C3BDC3C3C3BDC3BDC3C3CAC3C3BDC4C3
%C3BCC3BDC3BCC3BDC3BC770C1B151B151B151B153D151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B1B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B153D1B1B151B151B151B151B
%151B151B152F76C3BDC3C3C3BDC3C3C3BDFD04C3CACACAC4CACACAC4FD04
%CACBFD06C3BDC3C3C3BDC3C3C3762F15FD083D1B151B151B151B151B151B
%151B151B151B151B151B151B151B151B15151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B363D151B151B151B151B151B15
%1B151B0677BDC3BCC3BCC3BCC3BCC3BCC3BCC3C3CAC4CAC3CAC4CAC3CACA
%CAC4C3C3C3BCC3BCC3BCC3BCC3BCC3BD76061B153D143D143D141B141B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B153D1B1B151B
%1B1B151B1B1B151B1B1B152F76C3BDC3C3C3BDC3C3C3BDFD04C3FD0CCACB
%C3C4FD04C3BDC3C3C3BDC3C3C3762F152F28532E2F2E532F530D1B1B1B15
%1B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B363D151B151B151B
%151B151B151B151B0C77BDC3BCC3BDC3BCC3BDC3BCC3BDC3C3CAC3C4C3CA
%C3C4C3CAC4CAC3C4C3C3BCC3BDC3BCC3BDC3BCC3BD770C14285857825882
%5883582E141B151B151B151B151B151B151B151B151B151B151B151B151B
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%3D153D1B1B153D1B1B153D1B1B153D152F76C3C3C3BDC3C3C3BDC3C3C3BD
%C3C3C3BDC3C3C3BDC3C3C4C3CAC3C3C3C4C3C3BDC3C3C3BDC3C3C3BDC376
%2F145888AE88FD04ADAC2E1B151B151B151B151B151B151B151B151B151B
%151B151B151B15151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B153D363D363D363D363D363D363D141B0C76BCC3BCC3BC
%C3BCC3BCC3BCC3BCC3BCC3BCC3BCFD07C3BDC3BDC3BCC3BCC3BCC3BCC3BC
%C3BC770C142DADCFAE82AEA7AD822E151B151B151B151B151B151B151B15
%1B151B151B151B151B15FD041B151B1B1B151B1B1B151B1B1B151B1B1B15
%1B1B1B15FD161B2F76C3C3CAC3CAC3CAC3CAC3C3BDC3C3C3BDC3C3CAC3CA
%C4CAC4CAC3C4FD05C3CAC3CAC3CAC3CAC3C3762F145882AE83AD82AD8288
%2E1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B15151B15
%1B151B151B151B151B151B151B151B151B151B151BFD16140C529AC3CACA
%C4FD05CABCC3BDC3BDC3C3CACACAC4CACACAFD04C3BDC3BDCAC4CACACAC4
%CACAC3BC770C142E888182828882885D2E151B151B151B151B151B151B15
%1B151B151B151B151B151B151B1B151B151B151B151B151B151B151B151B
%151B151B151B2F52282F282F282F282F282F282F2E532E2E2E53282F282F
%2E52287DCACAC4CACACAC3C3C3CAC3C3BDC3FD08CABDCAC3CABDC3C3CAC4
%CACACAC4CAC3C3762F145882CFADADA7AEAD882E1B1B1B151B151B151B15
%1B151B151B151B151B151B151B151B15151B151B151B151B151B151B151B
%151B151B151B151B142E2E7C75A07B7C75A07B7C757C7CA17CA07BA17CA0
%7B7C75532E2E28CAC4CAC3CACAC4BCC3BDC3BCC3C3CAC3FD05CAFD04C3BD
%C3BCCAC4CAC3CAC4CAC3C3BC760C142DADAEAE83AEA7AE822E141B151B15
%1B151B151B151B151B151B151B151B151B151B151B1B151B1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B2E7CC8CEC9CEC8CECECDC8CEC8CEC9CE
%C8CEC9CEC8CEC8CD7C532E53C3C4C3CAC3C4FD04C3BDFD04C3C4C3CAC3CA
%C4C3C3CAC3C3BDC3C3C4C3C4C3C3C3C4C3C37635145882AD82AD82AD8282
%2E1B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B151B15
%1B151B151B151B151B151B151B151B151B151B142F52C8C9CFC9CEC9CFC8
%C8C8CEC9C9C8C9C9C9C8C9C8C9C77C282E28C3C3C3BCC3BDC3C3C3BDC3BC
%C3BDC3BCFD09C3BDC3C3C4BDC3BCC3C3C3BCC3BD770C142E828288828982
%88812E141B151B151B151B151B151B151B151B151B151B151B151B151B1B
%151B151B151B151B151B151B151B151B151B151B1B1B287CC8CFC9CFC9CF
%C9CEC8CEC9CFC9CEC9CFC9CEC8CEC9C876532E52BDCABDC3BDC3C3C3BCC3
%BDC3BDFD04C3CAC3C4BDC4C3C3BDC3BDFD05C3BDCAC3C3BDC3762F1458AD
%FFADADAEAEADAD2E1B151B151B151B151B151B151B151B151B151B151B15
%1B151B15151B151B151B151B151B151B151B151B151B151B151B142E51C8
%C9CEC9CEC9CEC8C8C8C9C9CEC8C9C9C9C8C8C8C9C77C28532EC3C3C3BCC3
%BCC3BDC4C3C4BDC3BCC3BDCAC3CAFD04C3BDC3C3CABDC3BCC3BDC4C3C4BD
%C3BC770C142DADAEAE82AEA7AD822E151B151B151B151B151B151B151B15
%1B151B151B151B151B15FD041B151B1B1B151B1B1B151B1B1B151B1B1B15
%1B1B1B2E7CC8CFC9CFC9CFC9CEC8CEC9CFC9CEC9CEC8CEC8CEC8CD7C532E
%53FD04CABDC3C3FD05CABDC3C3CACAFFCACAC3CAC3FD05CAC3C3C3FD05CA
%BDC3762F145882AD82AD82AD82882E1B151B1B1B151B1B1B151B1B1B151B
%1B1B151B1B1B151B1B1B15151B151B151B151B151B151B151B151B151B15
%1B151B152E51C8C9CEC9CFC9CEC8C8FD04C9C8CEC8C9C8C9C8CEC77C2853
%52CAC3CAC3C3BCC3CACAC3CAC4C3BCC3FD04CAC4C3C3C3C4CAC3CACAC3BC
%C3C4CAC3CAC4C3BC770C142E885C5D57815781812E151B151B151B151B15
%1B151B151B151B151B151B151B151B151B1B151B151B151B151B151B151B
%151B151B151B151B151B2E7CC8CFC9CEC9CFC9C8C8CEC9CEC8CEC9CEC8CE
%C8CEC8CD7C2F2853FD04CAC3C3C3FD05CAC3C3C3FD05CAC3C3BDCACACAC4
%CAC3C3C3FD05CAC3C3762F14528288FD048281822E1B1B1B151B151B151B
%151B151B151B151B151B151B151B151B15151B151B151B151B151B151B15
%1B151B151B151B151B142E52FD06C8C9C7C9C9CEC8C9C9CEC8C9C8C9C8C9
%C77C062E2ECACACAC3C3BCC3C3CAC4CAC3C3BCC3C3CACACAFD05C3CAC4CA
%C3C3BCC3C3CAC4CAC3C3BD760C142852527D525952582E2E141B151B151B
%151B151B151B151B151B151B151B151B151B151B1B151B1B1B151B1B1B15
%1B1B1B151B1B1B151B1B1B151B2E7CC8CEC8CEC8CEC8C8C9CEC9CEC9CEC8
%CEC8CEC8CEC8CD7C2F2E53C3CAFD04C3BDC3C3CAFD05C3CAC3CAC3C4C3C3
%BDC3C3CAFD04C3BDC3C3CAFD04C3762F152F285352532E532E522F1B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B151B151B151B15
%1B151B151B151B151B151B151B151B142F52C8C8C9C8C9C8C9C8C9C9CEC8
%C9C9C9C8C9C8C9C8C9C77C282E28C3BCC3BCC3BDC3BCC3BCC3BCC3BDC3C3
%C4FD04C3BDC3BCC3BCC3BCC3BDC3BCC3BCC3BCC3BD770C1B15FD08141B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B1B151B151B
%151B151B151B151B151B151B151B151B1B1B287CC8CEC8CEC9CEC8CEC9CE
%C8CEC9CEC8CEC8CEC8CEC8C876532E52BDC3C3C3BDC3C3C3BDC3C3C3BDC3
%C3C4C3C3C3C4FD04C3BDC3C3C3BDC3C3C3BDC3C3C3BDC3522F151B1B1B15
%1B1B1B151B1B1B151B151B151B151B151B151B151B151B151B151B151B15
%1B15151B151B151B151B151B151B151B151B151B151B151B142E51C8C8C9
%C8C9C8C9C8CEC8C8C8CEC8C8C8C9C8C8C8C9C77C2853285328532E522852
%285228522852527D535928595352285228522852285228522E5328532E53
%28522E1B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B15FD041B151B1B1B151B1B1B151B1B1B151B1B1B151B
%1B1B2E7CC8CEC9CEC9CEC9CEC9CEC9CFC9CEC9CEC9CEC9CEC9CD7C53522E
%282E282E282E282E282E282E285952532E2E5253282E282E282E282E282E
%282E282E282E282E282F141B1B1B151B1B1B151B1B1B151B1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B15151B151B151B151B151B151B15
%1B151B151B151B151B152E52FD04C8CDC8CEC8CEC8C9C8CDC8C8C8CDC8C8
%C8CDC77C28532E7E7D847D7E7D847D7E7D847D7E7D847D7E7D847D7E7D84
%7D7E7D847D7E7D847D7E7D847D7E7D847D845315151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B1B151B151B15
%1B151B151B151B151B151B151B151B151B2E5375A07BA07BA0A0A77CA0A0
%A07BA07BA07BA07BA07BA052532859FD29FF59141B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B15151B151B151B
%151B151B151B151B151B151B151B151B152F282E062F062F282F2E2F062F
%282E062F062E062F062E062E282E2E5A2F352F592F352F592F352F592F35
%2F592F352F592F352F592F352F592F352F592F352F592F352F35141B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B151B151B151B151B151B151B151B151B151B151B151B151B151B15
%1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B15
%1B1B1B151B1B1B151B1B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B
%151B151B151B151B151B151B151B151B15FD041B151B1B1B151B1B1B151B
%1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B
%1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B
%151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B151B1B1B15A9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">1</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-09-21T13:40:55+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-09-21T13:40:55+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-09-21T13:40:55+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>160</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AF56Y+IOxV2KuxV2KuxV2&#xA;KuxV2Kq9lZXN7cC3t1DSEM3xMqKFUFmLM5VVAA6k5DJkjAWeTZixSyS4Y8/gOW/M7Bq8tLmzupbW&#xA;5Qx3EDFJUNDRh13FQfow48kZxEo7grlxSxyMJCpRNFEaXo2papK0VjD6rpStWRBVvsqC5UFj2Xqc&#xA;rzaiGIXM1+PJs02kyZzUBZ+A+/r3DmVCzs7i7uVtoADKwYgOyxqAilmJZyqgAAnc5PJkEI8R5fju&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:2f09bc1e-636d-4a48-9056-b8a86d2d4457</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2f09bc1e-636d-4a48-9056-b8a86d2d4457</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5923fbbe-0101-4546-a448-339c299fda76</stRef:instanceID>
            <stRef:documentID>xmp.did:5923fbbe-0101-4546-a448-339c299fda76</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9cd346df-4ce4-2442-b264-c57291477b59</stEvt:instanceID>
                  <stEvt:when>2017-09-01T00:17:26+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:14ca74f9-571a-1640-8b0d-e20555695e91</stEvt:instanceID>
                  <stEvt:when>2017-09-05T17:28:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5923fbbe-0101-4546-a448-339c299fda76</stEvt:instanceID>
                  <stEvt:when>2017-09-21T13:17:34+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2f09bc1e-636d-4a48-9056-b8a86d2d4457</stEvt:instanceID>
                  <stEvt:when>2017-09-21T13:40:55+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>527.000000</stDim:w>
            <stDim:h>325.333333</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB красный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB желтый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB зеленый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB голубой</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB синий</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB пурпурный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -325.333 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 325.333 li
527 325.333 li
527 0 li
cp
clp
527 325.334 mo
0 325.334 li
0 .000131929 li
527 .000131929 li
527 325.334 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.156863 .709804 1 rgb
f
159.423 22.6149 mo
161.18 22.6149 li
161.18 23.0309 li
161.18 23.8996 161.425 24.549 161.917 24.9772 cv
162.333 25.3429 162.868 25.5256 163.523 25.5256 cv
165.186 25.5256 166.017 24.7692 166.017 23.2575 cv
166.017 22.4132 165.476 21.6642 164.392 21.0085 cv
163.397 20.4416 162.396 19.8683 161.388 19.2892 cv
160.304 18.4953 159.763 17.5002 159.763 16.3034 cv
159.763 15.1066 160.153 14.1681 160.934 13.4875 cv
161.677 12.8449 162.654 12.5236 163.863 12.5236 cv
166.559 12.5236 167.851 13.8844 167.737 16.6056 cv
165.867 16.6056 li
165.892 14.9176 165.18 14.0734 163.731 14.0734 cv
163.126 14.0734 162.635 14.2243 162.257 14.527 cv
161.803 14.8927 161.577 15.4215 161.577 16.1144 cv
161.577 16.946 162.119 17.6828 163.202 18.3254 cv
164.21 18.9054 165.217 19.4845 166.226 20.0641 cv
167.309 20.8952 167.851 21.9347 167.851 23.1818 cv
167.851 25.7648 166.402 27.0617 163.504 27.0749 cv
161.728 27.0876 160.531 26.5143 159.914 25.3547 cv
159.548 24.6872 159.385 23.7741 159.423 22.6149 cv
cp
1 1 1 rgb
f
175.41 21.9157 mo
174.225 21.9284 173.444 22.0041 173.065 22.1427 cv
172.259 22.3947 171.856 22.9743 171.856 23.881 cv
171.856 24.3976 171.982 24.8136 172.234 25.1286 cv
172.499 25.4933 172.883 25.6759 173.387 25.6759 cv
174.861 25.6759 175.535 24.423 175.41 21.9157 cv
cp
175.447 26.7721 mo
175.447 25.3742 li
175.41 25.3742 li
174.943 26.4323 174.125 26.9611 172.953 26.9611 cv
171.164 26.9611 170.27 25.8903 170.27 23.7487 cv
170.27 22.4386 170.842 21.5568 171.989 21.1032 cv
172.757 20.8136 173.897 20.6872 175.41 20.7253 cv
175.435 19.8434 175.372 19.2257 175.22 18.8732 cv
175.006 18.2941 174.521 18.0041 173.765 18.0041 cv
173.236 18.0041 172.833 18.1676 172.556 18.4953 cv
172.291 18.8102 172.184 19.2257 172.234 19.7428 cv
170.515 19.7428 li
170.552 18.6847 170.855 17.9284 171.422 17.4753 cv
171.951 17.0339 172.75 16.8132 173.822 16.8132 cv
175.938 16.8132 176.997 17.7902 176.997 19.7428 cv
176.997 24.4479 li
176.997 25.1662 177.06 25.9411 177.186 26.7721 cv
175.447 26.7721 li
cp
f
185.085 21.9157 mo
183.901 21.9284 183.12 22.0041 182.742 22.1427 cv
181.935 22.3947 181.532 22.9743 181.532 23.881 cv
181.532 24.3976 181.658 24.8136 181.91 25.1286 cv
182.175 25.4933 182.559 25.6759 183.063 25.6759 cv
184.537 25.6759 185.211 24.423 185.085 21.9157 cv
cp
185.123 26.7721 mo
185.123 25.3742 li
185.085 25.3742 li
184.619 26.4323 183.8 26.9611 182.628 26.9611 cv
180.839 26.9611 179.945 25.8903 179.945 23.7487 cv
179.945 22.4386 180.518 21.5568 181.665 21.1032 cv
182.433 20.8136 183.573 20.6872 185.085 20.7253 cv
185.11 19.8434 185.047 19.2257 184.896 18.8732 cv
184.682 18.2941 184.197 18.0041 183.441 18.0041 cv
182.912 18.0041 182.508 18.1676 182.231 18.4953 cv
181.967 18.8102 181.86 19.2257 181.91 19.7428 cv
180.191 19.7428 li
180.229 18.6847 180.531 17.9284 181.098 17.4753 cv
181.627 17.0339 182.427 16.8132 183.498 16.8132 cv
185.614 16.8132 186.672 17.7902 186.672 19.7428 cv
186.672 24.4479 li
186.672 25.1662 186.735 25.9411 186.862 26.7721 cv
185.123 26.7721 li
cp
f
189.526 22.6149 mo
191.283 22.6149 li
191.283 23.0309 li
191.283 23.8996 191.529 24.549 192.021 24.9772 cv
192.436 25.3429 192.971 25.5256 193.626 25.5256 cv
195.29 25.5256 196.121 24.7692 196.121 23.2575 cv
196.121 22.4132 195.58 21.6642 194.496 21.0085 cv
193.5 20.4416 192.499 19.8683 191.491 19.2892 cv
190.407 18.4953 189.866 17.5002 189.866 16.3034 cv
189.866 15.1066 190.256 14.1681 191.038 13.4875 cv
191.781 12.8449 192.757 12.5236 193.967 12.5236 cv
196.663 12.5236 197.954 13.8844 197.841 16.6056 cv
195.97 16.6056 li
195.995 14.9176 195.283 14.0734 193.834 14.0734 cv
193.23 14.0734 192.738 14.2243 192.36 14.527 cv
191.907 14.8927 191.68 15.4215 191.68 16.1144 cv
191.68 16.946 192.222 17.6828 193.305 18.3254 cv
194.313 18.9054 195.321 19.4845 196.329 20.0641 cv
197.412 20.8952 197.954 21.9347 197.954 23.1818 cv
197.954 25.7648 196.505 27.0617 193.607 27.0749 cv
191.831 27.0876 190.634 26.5143 190.017 25.3547 cv
189.652 24.6872 189.488 23.7741 189.526 22.6149 cv
cp
f
212.353 14.3571 mo
212.353 19.0817 li
214.319 19.0817 li
215.969 19.0817 216.794 18.2878 216.794 16.7004 cv
216.794 15.7809 216.517 15.1193 215.962 14.716 cv
215.61 14.4767 215.226 14.3571 214.81 14.3571 cv
212.353 14.3571 li
cp
212.353 26.7721 mo
210.577 26.7721 li
210.577 12.8078 li
214.715 12.8078 li
217.311 12.8078 218.608 14.1364 218.608 16.7946 cv
218.608 18.2057 218.136 19.2389 217.19 19.8942 cv
216.498 20.3854 215.666 20.631 214.696 20.631 cv
212.353 20.631 li
212.353 26.7721 li
cp
f
222.577 17.0026 mo
222.577 18.4762 li
222.892 17.7707 223.301 17.299 223.805 17.0588 cv
224.17 16.8957 224.781 16.8132 225.638 16.8132 cv
225.638 18.4577 li
225.159 18.3947 224.876 18.3634 224.788 18.3634 cv
223.314 18.3634 222.577 19.2453 222.577 21.0085 cv
222.577 26.7721 li
220.989 26.7721 li
220.989 17.0026 li
222.577 17.0026 li
cp
f
230.816 25.6759 mo
231.622 25.6759 232.17 25.3547 232.46 24.7121 cv
232.737 24.0954 232.876 22.9743 232.876 21.3488 cv
232.876 20.1017 232.687 19.2257 232.309 18.7223 cv
231.981 18.3063 231.483 18.0983 230.816 18.0983 cv
230.148 18.0983 229.65 18.3063 229.323 18.7223 cv
228.958 19.2257 228.775 20.1017 228.775 21.3488 cv
228.775 22.9743 228.907 24.0954 229.172 24.7121 cv
229.474 25.3547 230.022 25.6759 230.816 25.6759 cv
cp
230.816 26.9611 mo
229.606 26.9611 228.731 26.6779 228.189 26.111 cv
227.472 25.3678 227.112 24.007 227.112 22.029 cv
227.112 20.3034 227.301 19.0754 227.679 18.3439 cv
228.233 17.3239 229.279 16.8132 230.816 16.8132 cv
232.353 16.8132 233.398 17.3239 233.953 18.3439 cv
234.343 19.0754 234.539 20.3034 234.539 22.029 cv
234.539 24.007 234.173 25.3678 233.443 26.111 cv
232.901 26.6779 232.025 26.9611 230.816 26.9611 cv
cp
f
236.92 14.5085 mo
236.92 12.8078 li
238.696 12.8078 li
238.696 14.5085 li
236.92 14.5085 li
cp
237.014 28.2087 mo
237.014 17.0026 li
238.602 17.0026 li
238.602 28.133 li
238.602 28.9645 238.438 29.55 238.11 29.8903 cv
237.694 30.2804 236.938 30.4762 235.842 30.4762 cv
235.842 29.1154 li
236.246 29.1154 236.529 29.0651 236.693 28.9645 cv
236.907 28.8381 237.014 28.5866 237.014 28.2087 cv
cp
f
242.891 21.1979 mo
246.708 21.1979 li
246.708 19.8879 246.526 18.9997 246.16 18.5334 cv
245.896 18.1808 245.423 18.0041 244.743 18.0041 cv
244.163 18.0041 243.729 18.1994 243.439 18.5895 cv
243.086 19.0939 242.903 19.9635 242.891 21.1979 cv
cp
248.39 22.4074 mo
242.891 22.4074 li
242.891 23.6798 243.062 24.5617 243.401 25.0529 cv
243.691 25.4684 244.176 25.6759 244.856 25.6759 cv
245.373 25.6759 245.789 25.4875 246.104 25.109 cv
246.381 24.7692 246.532 24.3346 246.557 23.8053 cv
248.314 23.8053 li
248.302 25.9098 247.162 26.9611 244.894 26.9611 cv
243.685 26.9611 242.809 26.6779 242.268 26.111 cv
241.549 25.3678 241.19 24.007 241.19 22.029 cv
241.19 20.3034 241.379 19.0754 241.757 18.3439 cv
242.324 17.3239 243.37 16.8132 244.894 16.8132 cv
246.242 16.8132 247.174 17.1979 247.691 17.9665 cv
248.157 18.6847 248.39 19.8879 248.39 21.5754 cv
248.39 22.4074 li
cp
f
257.782 20.1398 mo
256.138 20.1398 li
256.15 19.4089 255.999 18.8669 255.684 18.5138 cv
255.458 18.237 255.155 18.0983 254.777 18.0983 cv
254.109 18.0983 253.612 18.3063 253.285 18.7223 cv
252.907 19.2257 252.717 20.1017 252.717 21.3488 cv
252.717 22.9743 252.856 24.0954 253.133 24.7121 cv
253.423 25.3547 253.971 25.6759 254.777 25.6759 cv
255.08 25.6759 255.369 25.5378 255.646 25.2604 cv
256.037 24.8703 256.22 24.2902 256.195 23.5221 cv
257.857 23.5221 li
257.882 24.7316 257.511 25.6447 256.742 26.2624 cv
256.163 26.7287 255.508 26.9611 254.777 26.9611 cv
253.568 26.9611 252.692 26.6779 252.15 26.111 cv
251.42 25.3678 251.055 24.007 251.055 22.029 cv
251.055 20.3034 251.25 19.0754 251.64 18.3439 cv
252.195 17.3239 253.24 16.8132 254.777 16.8132 cv
255.772 16.8132 256.535 17.0968 257.063 17.6637 cv
257.593 18.2306 257.833 19.0558 257.782 20.1398 cv
cp
f
259.275 17.0026 mo
260.881 17.0026 li
260.881 15.132 li
262.468 14.4137 li
262.468 17.0026 li
264.585 17.0026 li
264.585 18.2121 li
262.468 18.2121 li
262.468 24.1833 li
262.468 24.6247 262.525 24.9328 262.639 25.109 cv
262.84 25.4372 263.256 25.6003 263.886 25.6003 cv
263.898 25.6003 264.131 25.5754 264.585 25.5256 cv
264.585 26.735 li
264.472 26.7472 264.22 26.7785 263.829 26.8293 cv
263.489 26.8669 263.225 26.8854 263.035 26.8854 cv
261.6 26.8854 260.881 26.3068 260.881 25.1471 cv
260.881 18.2121 li
259.275 18.2121 li
259.275 17.0026 li
cp
f
277.604 14.3571 mo
277.604 26.7721 li
275.941 26.7721 li
275.941 12.8078 li
278.834 12.8078 li
282.348 24.5236 li
282.386 24.5236 li
285.957 12.8078 li
288.887 12.8078 li
288.887 26.7721 li
287.11 26.7721 li
287.11 14.3571 li
283.18 26.7721 li
281.479 26.7721 li
277.604 14.3571 li
cp
f
296.88 21.9157 mo
295.696 21.9284 294.915 22.0041 294.536 22.1427 cv
293.729 22.3947 293.327 22.9743 293.327 23.881 cv
293.327 24.3976 293.453 24.8136 293.705 25.1286 cv
293.97 25.4933 294.354 25.6759 294.857 25.6759 cv
296.332 25.6759 297.006 24.423 296.88 21.9157 cv
cp
296.917 26.7721 mo
296.917 25.3742 li
296.88 25.3742 li
296.413 26.4323 295.595 26.9611 294.424 26.9611 cv
292.635 26.9611 291.739 25.8903 291.739 23.7487 cv
291.739 22.4386 292.313 21.5568 293.459 21.1032 cv
294.228 20.8136 295.368 20.6872 296.88 20.7253 cv
296.905 19.8434 296.842 19.2257 296.691 18.8732 cv
296.477 18.2941 295.991 18.0041 295.235 18.0041 cv
294.707 18.0041 294.303 18.1676 294.026 18.4953 cv
293.762 18.8102 293.654 19.2257 293.705 19.7428 cv
291.985 19.7428 li
292.022 18.6847 292.325 17.9284 292.893 17.4753 cv
293.422 17.0339 294.221 16.8132 295.292 16.8132 cv
297.408 16.8132 298.468 17.7902 298.468 19.7428 cv
298.468 24.4479 li
298.468 25.1662 298.53 25.9411 298.656 26.7721 cv
296.917 26.7721 li
cp
f
308.445 26.7721 mo
306.857 26.7721 li
306.857 20.007 li
306.857 18.7345 306.284 18.0983 305.138 18.0983 cv
303.802 18.0983 303.135 19.0622 303.135 20.9899 cv
303.135 26.7721 li
301.547 26.7721 li
301.547 19.0431 li
301.547 18.4391 301.517 17.7585 301.452 17.0026 cv
303.135 17.0026 li
303.135 18.2682 li
303.211 18.2682 li
303.525 17.7272 303.878 17.3488 304.269 17.1344 cv
304.659 16.9206 305.182 16.8132 305.838 16.8132 cv
306.807 16.8132 307.5 17.1032 307.915 17.6828 cv
308.268 18.174 308.445 18.9489 308.445 20.007 cv
308.445 26.7721 li
cp
f
316.23 21.9157 mo
315.047 21.9284 314.266 22.0041 313.887 22.1427 cv
313.08 22.3947 312.678 22.9743 312.678 23.881 cv
312.678 24.3976 312.804 24.8136 313.056 25.1286 cv
313.32 25.4933 313.705 25.6759 314.208 25.6759 cv
315.683 25.6759 316.356 24.423 316.23 21.9157 cv
cp
316.268 26.7721 mo
316.268 25.3742 li
316.23 25.3742 li
315.764 26.4323 314.945 26.9611 313.774 26.9611 cv
311.985 26.9611 311.09 25.8903 311.09 23.7487 cv
311.09 22.4386 311.663 21.5568 312.81 21.1032 cv
313.578 20.8136 314.719 20.6872 316.23 20.7253 cv
316.255 19.8434 316.192 19.2257 316.042 18.8732 cv
315.826 18.2941 315.342 18.0041 314.586 18.0041 cv
314.058 18.0041 313.653 18.1676 313.377 18.4953 cv
313.112 18.8102 313.005 19.2257 313.056 19.7428 cv
311.336 19.7428 li
311.373 18.6847 311.676 17.9284 312.243 17.4753 cv
312.772 17.0339 313.571 16.8132 314.643 16.8132 cv
316.759 16.8132 317.818 17.7902 317.818 19.7428 cv
317.818 24.4479 li
317.818 25.1662 317.881 25.9411 318.007 26.7721 cv
316.268 26.7721 li
cp
f
326.076 21.8405 mo
326.076 20.6813 326.013 19.8815 325.887 19.4401 cv
325.61 18.5583 325.043 18.1178 324.187 18.1178 cv
323.417 18.1178 322.889 18.5334 322.599 19.3644 cv
322.435 19.8683 322.353 20.612 322.353 21.5949 cv
322.353 23.0812 322.523 24.1203 322.863 24.7121 cv
323.14 25.2165 323.601 25.4684 324.243 25.4684 cv
325.062 25.4684 325.604 25.0334 325.868 24.1647 cv
326.007 23.6984 326.076 22.924 326.076 21.8405 cv
cp
326.076 18.2121 mo
326.076 17.0026 li
327.663 17.0026 li
327.663 27.755 li
327.663 28.7882 327.335 29.5124 326.68 29.9279 cv
326.113 30.2936 325.238 30.4762 324.055 30.4762 cv
323.185 30.4762 322.473 30.2619 321.919 29.8337 cv
321.313 29.3673 321.043 28.7126 321.105 27.8688 cv
322.882 27.8688 li
322.907 28.8005 323.405 29.2668 324.375 29.2668 cv
324.916 29.2668 325.332 29.1154 325.622 28.8132 cv
325.925 28.5109 326.076 28.1012 326.076 27.5846 cv
326.076 25.5632 li
326.02 25.5632 li
325.591 26.3693 324.873 26.7721 323.864 26.7721 cv
322.643 26.7721 321.785 26.2687 321.294 25.2604 cv
320.892 24.4665 320.69 23.2453 320.69 21.5949 cv
320.69 19.6545 321.105 18.2941 321.937 17.5129 cv
322.428 17.047 323.04 16.8132 323.77 16.8132 cv
324.866 16.8132 325.635 17.2795 326.076 18.2121 cv
cp
f
332.124 21.1979 mo
335.94 21.1979 li
335.94 19.8879 335.759 18.9997 335.393 18.5334 cv
335.128 18.1808 334.655 18.0041 333.976 18.0041 cv
333.396 18.0041 332.961 18.1994 332.671 18.5895 cv
332.318 19.0939 332.135 19.9635 332.124 21.1979 cv
cp
337.622 22.4074 mo
332.124 22.4074 li
332.124 23.6798 332.293 24.5617 332.633 25.0529 cv
332.923 25.4684 333.409 25.6759 334.089 25.6759 cv
334.605 25.6759 335.021 25.4875 335.335 25.109 cv
335.612 24.7692 335.764 24.3346 335.789 23.8053 cv
337.547 23.8053 li
337.534 25.9098 336.394 26.9611 334.126 26.9611 cv
332.916 26.9611 332.041 26.6779 331.499 26.111 cv
330.782 25.3678 330.423 24.007 330.423 22.029 cv
330.423 20.3034 330.611 19.0754 330.99 18.3439 cv
331.557 17.3239 332.602 16.8132 334.126 16.8132 cv
335.474 16.8132 336.406 17.1979 336.923 17.9665 cv
337.389 18.6847 337.622 19.8879 337.622 21.5754 cv
337.622 22.4074 li
cp
f
346.637 26.7721 mo
345.049 26.7721 li
345.049 20.007 li
345.049 18.7345 344.532 18.0983 343.499 18.0983 cv
343.261 18.0983 343.001 18.1613 342.725 18.2878 cv
342.447 18.4264 342.252 18.5841 342.139 18.7604 cv
341.887 19.1632 341.761 19.6423 341.761 20.196 cv
341.761 26.7721 li
340.173 26.7721 li
340.173 19.0431 li
340.173 18.4391 340.143 17.7585 340.078 17.0026 cv
341.761 17.0026 li
341.761 18.2306 li
341.799 18.2306 li
342.214 17.2858 343.027 16.8132 344.236 16.8132 cv
345.407 16.8132 346.171 17.2297 346.523 18.0607 cv
346.964 17.2297 347.738 16.8132 348.848 16.8132 cv
350.624 16.8132 351.512 17.6579 351.512 19.3459 cv
351.512 26.7721 li
349.925 26.7721 li
349.925 20.007 li
349.925 18.7345 349.408 18.0983 348.374 18.0983 cv
347.871 18.0983 347.474 18.2248 347.184 18.4762 cv
346.818 18.7663 346.637 19.3395 346.637 20.196 cv
346.637 26.7721 li
cp
f
355.764 21.1979 mo
359.58 21.1979 li
359.58 19.8879 359.398 18.9997 359.032 18.5334 cv
358.769 18.1808 358.295 18.0041 357.615 18.0041 cv
357.035 18.0041 356.601 18.1994 356.311 18.5895 cv
355.958 19.0939 355.775 19.9635 355.764 21.1979 cv
cp
361.263 22.4074 mo
355.764 22.4074 li
355.764 23.6798 355.934 24.5617 356.273 25.0529 cv
356.563 25.4684 357.049 25.6759 357.729 25.6759 cv
358.245 25.6759 358.66 25.4875 358.976 25.109 cv
359.253 24.7692 359.404 24.3346 359.429 23.8053 cv
361.188 23.8053 li
361.175 25.9098 360.034 26.9611 357.767 26.9611 cv
356.557 26.9611 355.681 26.6779 355.14 26.111 cv
354.422 25.3678 354.063 24.007 354.063 22.029 cv
354.063 20.3034 354.251 19.0754 354.63 18.3439 cv
355.196 17.3239 356.241 16.8132 357.767 16.8132 cv
359.114 16.8132 360.047 17.1979 360.563 17.9665 cv
361.029 18.6847 361.263 19.8879 361.263 21.5754 cv
361.263 22.4074 li
cp
f
370.787 26.7721 mo
369.2 26.7721 li
369.2 20.007 li
369.2 18.7345 368.626 18.0983 367.479 18.0983 cv
366.145 18.0983 365.477 19.0622 365.477 20.9899 cv
365.477 26.7721 li
363.89 26.7721 li
363.89 19.0431 li
363.89 18.4391 363.857 17.7585 363.795 17.0026 cv
365.477 17.0026 li
365.477 18.2682 li
365.552 18.2682 li
365.867 17.7272 366.22 17.3488 366.61 17.1344 cv
367.001 16.9206 367.523 16.8132 368.179 16.8132 cv
369.148 16.8132 369.841 17.1032 370.258 17.6828 cv
370.61 18.174 370.787 18.9489 370.787 20.007 cv
370.787 26.7721 li
cp
f
372.147 17.0026 mo
373.754 17.0026 li
373.754 15.132 li
375.342 14.4137 li
375.342 17.0026 li
377.458 17.0026 li
377.458 18.2121 li
375.342 18.2121 li
375.342 24.1833 li
375.342 24.6247 375.398 24.9328 375.512 25.109 cv
375.713 25.4372 376.129 25.6003 376.759 25.6003 cv
376.771 25.6003 377.005 25.5754 377.458 25.5256 cv
377.458 26.735 li
377.345 26.7472 377.092 26.7785 376.702 26.8293 cv
376.362 26.8669 376.097 26.8854 375.908 26.8854 cv
374.472 26.8854 373.754 26.3068 373.754 25.1471 cv
373.754 18.2121 li
372.147 18.2121 li
372.147 17.0026 li
cp
f
367.671 301.27 mo
196.71 301.27 li
194.043 301.27 191.86 299.087 191.86 296.421 cv
191.86 184.931 li
191.86 182.264 194.043 180.082 196.71 180.082 cv
367.671 180.082 li
370.338 180.082 372.52 182.264 372.52 184.931 cv
372.52 296.421 li
372.52 299.087 370.338 301.27 367.671 301.27 cv
.345098 .384314 .478431 rgb
f
196.71 181.082 mo
194.587 181.082 192.86 182.808 192.86 184.931 cv
192.86 296.421 li
192.86 298.544 194.587 300.27 196.71 300.27 cv
367.671 300.27 li
369.794 300.27 371.52 298.544 371.52 296.421 cv
371.52 184.931 li
371.52 182.808 369.794 181.082 367.671 181.082 cv
196.71 181.082 li
367.671 302.27 mo
196.71 302.27 li
193.484 302.27 190.86 299.646 190.86 296.421 cv
190.86 184.931 li
190.86 181.706 193.484 179.082 196.71 179.082 cv
367.671 179.082 li
370.896 179.082 373.52 181.706 373.52 184.931 cv
373.52 296.421 li
373.52 299.646 370.896 302.27 367.671 302.27 cv
.262745 .333333 .392157 rgb
f
367.671 180.082 mo
196.71 180.082 li
194.043 180.082 191.86 182.264 191.86 184.931 cv
191.86 186.998 li
191.86 184.379 194.043 182.235 196.71 182.235 cv
367.671 182.235 li
370.338 182.235 372.52 184.379 372.52 186.998 cv
372.52 184.931 li
372.52 182.264 370.338 180.082 367.671 180.082 cv
.431373 .478431 .568627 rgb
f
362.612 292.048 mo
201.769 292.048 li
199.101 292.048 196.919 290.029 196.919 287.56 cv
196.919 190.659 li
196.919 188.191 199.101 186.171 201.769 186.171 cv
362.612 186.171 li
365.279 186.171 367.462 188.191 367.462 190.659 cv
367.462 287.56 li
367.462 290.029 365.279 292.048 362.612 292.048 cv
.992157 .521569 .560784 rgb
f
309.664 221.268 mo
254.716 221.268 li
254.716 205.837 li
309.664 205.837 li
309.664 221.268 li
.956863 .741176 .764706 rgb
f
236.927 248.391 mo
204.758 248.391 li
204.758 232.961 li
236.927 232.961 li
236.927 248.391 li
cp
f
298.274 248.391 mo
266.105 248.391 li
266.105 232.961 li
298.274 232.961 li
298.274 248.391 li
f
358.774 247.951 mo
326.605 247.951 li
326.605 232.52 li
358.774 232.52 li
358.774 247.951 li
cp
f
283.231 231.351 mo
282.547 231.351 li
282.547 223.593 li
283.231 223.593 li
283.231 231.351 li
cp
f
282.889 228.016 mo
285.16 228.016 li
284.024 229.982 li
282.889 231.949 li
281.754 229.982 li
280.618 228.016 li
282.889 228.016 li
cp
f
283.231 258.17 mo
282.547 258.17 li
282.547 250.412 li
283.231 250.412 li
283.231 258.17 li
f
282.889 254.834 mo
285.16 254.834 li
284.024 256.8 li
282.889 258.767 li
281.754 256.8 li
280.618 254.834 li
282.889 254.834 li
f
215.932 258.17 mo
215.247 258.17 li
215.247 250.412 li
215.932 250.412 li
215.932 258.17 li
cp
f
215.589 254.834 mo
217.86 254.834 li
216.725 256.8 li
215.589 258.767 li
214.454 256.8 li
213.319 254.834 li
215.589 254.834 li
cp
f
240.507 256.88 mo
240.023 257.363 li
234.537 251.878 li
235.021 251.393 li
240.507 256.88 li
cp
f
237.906 254.762 mo
239.512 253.157 li
240.1 255.35 li
240.688 257.544 li
238.494 256.956 li
236.301 256.368 li
237.906 254.762 li
cp
f
348.145 258.17 mo
348.829 258.17 li
348.829 250.412 li
348.145 250.412 li
348.145 258.17 li
cp
f
348.487 254.834 mo
346.216 254.834 li
347.352 256.8 li
348.487 258.767 li
349.622 256.8 li
350.758 254.834 li
348.487 254.834 li
cp
f
323.569 256.88 mo
324.054 257.363 li
329.539 251.878 li
329.056 251.393 li
323.569 256.88 li
cp
f
326.17 254.762 mo
324.564 253.157 li
323.977 255.35 li
323.389 257.544 li
325.582 256.956 li
327.775 256.368 li
326.17 254.762 li
cp
f
255.694 241.018 mo
247.936 241.018 li
247.936 240.334 li
255.694 240.334 li
255.694 241.018 li
cp
f
251.271 240.675 mo
251.271 242.947 li
249.305 241.811 li
247.338 240.675 li
249.305 239.541 li
251.271 238.405 li
251.271 240.675 li
cp
f
316.707 241.018 mo
308.948 241.018 li
308.948 240.334 li
316.707 240.334 li
316.707 241.018 li
f
313.371 240.675 mo
313.371 242.947 li
315.338 241.811 li
317.305 240.675 li
315.338 239.541 li
313.371 238.405 li
313.371 240.675 li
cp
f
225.979 271.398 mo
225.979 277.258 221.229 282.008 215.368 282.008 cv
209.508 282.008 204.758 277.258 204.758 271.398 cv
204.758 265.538 209.508 260.788 215.368 260.788 cv
221.229 260.788 225.979 265.538 225.979 271.398 cv
cp
f
259.082 270.959 mo
259.082 276.818 254.332 281.569 248.472 281.569 cv
242.611 281.569 237.861 276.818 237.861 270.959 cv
237.861 265.098 242.611 260.347 248.472 260.347 cv
254.332 260.347 259.082 265.098 259.082 270.959 cv
cp
f
292.625 270.959 mo
292.625 276.818 287.875 281.569 282.015 281.569 cv
276.154 281.569 271.404 276.818 271.404 270.959 cv
271.404 265.098 276.154 260.347 282.015 260.347 cv
287.875 260.347 292.625 265.098 292.625 270.959 cv
f
326.169 270.959 mo
326.169 276.818 321.418 281.569 315.558 281.569 cv
309.698 281.569 304.947 276.818 304.947 270.959 cv
304.947 265.098 309.698 260.347 315.558 260.347 cv
321.418 260.347 326.169 265.098 326.169 270.959 cv
cp
f
358.343 270.959 mo
358.343 276.818 353.593 281.569 347.732 281.569 cv
341.872 281.569 337.121 276.818 337.121 270.959 cv
337.121 265.098 341.872 260.347 347.732 260.347 cv
353.593 260.347 358.343 265.098 358.343 270.959 cv
cp
f
374.647 310.754 mo
189.733 310.754 li
185.577 310.754 182.208 307.384 182.208 303.228 cv
182.208 302.283 182.974 301.517 183.918 301.517 cv
380.462 301.517 li
381.407 301.517 382.173 302.283 382.173 303.228 cv
382.173 307.384 378.804 310.754 374.647 310.754 cv
cp
1 1 1 rgb
f
183.918 302.517 mo
183.526 302.517 183.207 302.837 183.207 303.228 cv
183.207 306.826 186.135 309.754 189.733 309.754 cv
374.647 309.754 li
378.245 309.754 381.173 306.826 381.173 303.228 cv
381.173 302.837 380.853 302.517 380.462 302.517 cv
183.918 302.517 li
374.647 311.754 mo
189.733 311.754 li
185.032 311.754 181.208 307.929 181.208 303.228 cv
181.208 301.733 182.424 300.517 183.918 300.517 cv
380.462 300.517 li
381.957 300.517 383.173 301.733 383.173 303.228 cv
383.173 307.929 379.349 311.754 374.647 311.754 cv
.262745 .333333 .392157 rgb
f
335.586 301.517 mo
228.795 301.517 li
228.795 298.244 li
228.795 296.587 230.138 295.244 231.795 295.244 cv
332.586 295.244 li
334.242 295.244 335.586 296.587 335.586 298.244 cv
335.586 301.517 li
.345098 .384314 .478431 rgb
f
229.795 300.517 mo
334.586 300.517 li
334.586 298.244 li
334.586 297.141 333.689 296.244 332.586 296.244 cv
231.795 296.244 li
230.692 296.244 229.795 297.141 229.795 298.244 cv
229.795 300.517 li
336.586 302.517 mo
227.795 302.517 li
227.795 298.244 li
227.795 296.038 229.589 294.244 231.795 294.244 cv
332.586 294.244 li
334.792 294.244 336.586 296.038 336.586 298.244 cv
336.586 302.517 li
.262745 .333333 .392157 rgb
f
280.179 294.244 mo
264.662 294.244 li
265.405 292.048 li
280.921 292.048 li
280.179 294.244 li
316.733 186.171 mo
301.217 186.171 li
302.548 182.235 li
318.065 182.235 li
316.733 186.171 li
.482353 .513725 .588235 rgb
f
318.065 182.235 mo
302.548 182.235 li
303.069 180.694 li
318.586 180.694 li
318.065 182.235 li
.54902 .588235 .658823 rgb
f
280.921 292.048 mo
265.405 292.048 li
271.697 273.445 li
272.816 278.105 277.011 281.569 282.015 281.569 cv
282.896 281.569 283.752 281.462 284.57 281.259 cv
280.921 292.048 li
290.298 264.326 mo
288.353 261.901 285.365 260.347 282.015 260.347 cv
279.478 260.347 277.149 261.238 275.324 262.723 cv
280.171 248.391 li
295.688 248.391 li
290.298 264.326 li
280.618 254.834 mo
281.754 256.8 li
282.889 258.767 li
284.024 256.8 li
285.16 254.834 li
283.231 254.834 li
283.231 250.412 li
282.547 250.412 li
282.547 254.834 li
280.618 254.834 li
298.274 240.744 mo
298.274 232.961 li
285.391 232.961 li
289.345 221.268 li
304.862 221.268 li
298.274 240.744 li
309.664 207.071 mo
309.664 205.837 li
294.565 205.837 li
301.217 186.171 li
316.733 186.171 li
309.664 207.071 li
.992157 .623529 .654902 rgb
f
304.862 221.268 mo
289.345 221.268 li
294.565 205.837 li
309.664 205.837 li
309.664 207.071 li
304.862 221.268 li
.964706 .796078 .811765 rgb
f
295.688 248.391 mo
280.171 248.391 li
285.391 232.961 li
298.274 232.961 li
298.274 240.744 li
295.688 248.391 li
f
283.231 254.834 mo
282.889 254.834 li
282.547 254.834 li
282.547 250.412 li
283.231 250.412 li
283.231 254.834 li
f
282.889 258.767 mo
281.754 256.8 li
280.618 254.834 li
282.547 254.834 li
282.889 254.834 li
283.231 254.834 li
285.16 254.834 li
284.024 256.8 li
282.889 258.767 li
f
282.015 281.569 mo
277.011 281.569 272.816 278.105 271.697 273.445 cv
275.324 262.723 li
277.149 261.238 279.478 260.347 282.015 260.347 cv
285.365 260.347 288.353 261.901 290.298 264.326 cv
284.57 281.259 li
283.752 281.462 282.896 281.569 282.015 281.569 cv
f
278.057 300.517 mo
262.54 300.517 li
263.985 296.244 li
279.502 296.244 li
278.057 300.517 li
.482353 .513725 .588235 rgb
f
277.969 300.777 mo
262.452 300.777 li
262.54 300.517 li
278.057 300.517 li
277.969 300.777 li
279.502 296.244 mo
263.985 296.244 li
264.662 294.244 li
280.179 294.244 li
279.502 296.244 li
.419608 .47451 .521569 rgb
f
292.857 294.244 mo
285.098 294.244 li
285.841 292.048 li
293.6 292.048 li
292.857 294.244 li
329.412 186.171 mo
321.653 186.171 li
322.985 182.235 li
330.743 182.235 li
329.412 186.171 li
.482353 .513725 .588235 rgb
f
330.743 182.235 mo
322.985 182.235 li
323.506 180.694 li
331.265 180.694 li
330.743 182.235 li
.54902 .588235 .658823 rgb
f
293.6 292.048 mo
285.841 292.048 li
291.145 276.366 li
291.884 275.121 292.376 273.712 292.552 272.207 cv
321.653 186.171 li
329.412 186.171 li
311.092 240.334 li
308.948 240.334 li
308.948 241.018 li
310.86 241.018 li
293.6 292.048 li
.992157 .623529 .654902 rgb
f
310.86 241.018 mo
308.948 241.018 li
308.948 240.334 li
311.092 240.334 li
310.86 241.018 li
.964706 .796078 .811765 rgb
f
291.145 276.366 mo
292.552 272.207 li
292.376 273.712 291.884 275.121 291.145 276.366 cv
f
290.735 300.517 mo
282.976 300.517 li
284.422 296.244 li
292.181 296.244 li
290.735 300.517 li
.482353 .513725 .588235 rgb
f
290.647 300.777 mo
282.889 300.777 li
282.976 300.517 li
290.735 300.517 li
290.647 300.777 li
292.181 296.244 mo
284.422 296.244 li
285.098 294.244 li
292.857 294.244 li
292.181 296.244 li
.419608 .47451 .521569 rgb
f
196.71 181.082 mo
194.587 181.082 192.86 182.808 192.86 184.931 cv
192.86 296.421 li
192.86 298.544 194.587 300.27 196.71 300.27 cv
367.671 300.27 li
369.794 300.27 371.521 298.544 371.521 296.421 cv
371.521 184.931 li
371.521 182.808 369.794 181.082 367.671 181.082 cv
196.71 181.082 li
cp
367.671 302.27 mo
196.71 302.27 li
193.484 302.27 190.86 299.646 190.86 296.421 cv
190.86 184.931 li
190.86 181.706 193.484 179.082 196.71 179.082 cv
367.671 179.082 li
370.896 179.082 373.521 181.706 373.521 184.931 cv
373.521 296.421 li
373.521 299.646 370.896 302.27 367.671 302.27 cv
cp
.262745 .333333 .392157 rgb
f
203.324 311.345 mo
100.308 311.345 li
97.998 311.345 96.1084 309.455 96.1084 307.145 cv
96.1084 243.901 li
96.1084 241.591 97.998 239.702 100.308 239.702 cv
203.324 239.702 li
205.634 239.702 207.523 241.591 207.523 243.901 cv
207.523 307.145 li
207.523 309.455 205.634 311.345 203.324 311.345 cv
.345098 .384314 .478431 rgb
f
100.308 240.702 mo
98.5434 240.702 97.1079 242.137 97.1079 243.901 cv
97.1079 307.145 li
97.1079 308.91 98.5434 310.345 100.308 310.345 cv
203.324 310.345 li
205.088 310.345 206.523 308.91 206.523 307.145 cv
206.523 243.901 li
206.523 242.137 205.088 240.702 203.324 240.702 cv
100.308 240.702 li
203.324 312.345 mo
100.308 312.345 li
97.4409 312.345 95.108 310.012 95.108 307.145 cv
95.108 243.901 li
95.108 241.034 97.4409 238.702 100.308 238.702 cv
203.324 238.702 li
206.191 238.702 208.523 241.034 208.523 243.901 cv
208.523 307.145 li
208.523 310.012 206.191 312.345 203.324 312.345 cv
.262745 .333333 .392157 rgb
f
192.348 306.71 mo
104.584 306.71 li
103.28 306.71 102.213 305.643 102.213 304.339 cv
102.213 247.588 li
102.213 246.283 103.28 245.216 104.584 245.216 cv
192.348 245.216 li
193.651 245.216 194.718 246.283 194.718 247.588 cv
194.718 304.339 li
194.718 305.643 193.651 306.71 192.348 306.71 cv
.960784 .772549 .298039 rgb
f
133.148 276.284 mo
105.348 276.284 li
105.348 248.484 li
133.148 248.484 li
133.148 276.284 li
cp
1 .894118 .662745 rgb
f
133.148 278.965 mo
105.348 278.965 li
105.348 281.646 li
133.148 281.646 li
133.148 278.965 li
cp
f
190.697 248.484 mo
136.128 248.484 li
136.128 251.048 li
190.697 251.048 li
190.697 248.484 li
f
190.697 253.541 mo
136.128 253.541 li
136.128 256.105 li
190.697 256.105 li
190.697 253.541 li
f
190.697 258.723 mo
136.128 258.723 li
136.128 261.288 li
190.697 261.288 li
190.697 258.723 li
f
190.697 263.833 mo
136.128 263.833 li
136.128 266.396 li
190.697 266.396 li
190.697 263.833 li
f
190.697 268.941 mo
136.128 268.941 li
136.128 271.505 li
190.697 271.505 li
190.697 268.941 li
f
190.697 273.998 mo
136.128 273.998 li
136.128 276.561 li
190.697 276.561 li
190.697 273.998 li
f
190.697 279.18 mo
136.128 279.18 li
136.128 281.745 li
190.697 281.745 li
190.697 279.18 li
f
190.697 284.289 mo
136.128 284.289 li
136.128 286.853 li
190.697 286.853 li
190.697 284.289 li
f
190.697 289.397 mo
136.128 289.397 li
136.128 291.962 li
190.697 291.962 li
190.697 289.397 li
f
190.697 294.455 mo
136.128 294.455 li
136.128 297.018 li
190.697 297.018 li
190.697 294.455 li
f
190.697 299.637 mo
136.128 299.637 li
136.128 302.202 li
190.697 302.202 li
190.697 299.637 li
f
133.148 284.327 mo
105.348 284.327 li
105.348 287.008 li
133.148 287.008 li
133.148 284.327 li
f
133.148 289.689 mo
105.348 289.689 li
105.348 292.371 li
133.148 292.371 li
133.148 289.689 li
f
133.148 294.158 mo
105.348 294.158 li
105.348 296.839 li
133.148 296.839 li
133.148 294.158 li
f
133.148 299.52 mo
105.348 299.52 li
105.348 302.202 li
133.148 302.202 li
133.148 299.52 li
f
204.317 277.983 mo
204.317 279.665 202.954 281.028 201.272 281.028 cv
199.591 281.028 198.228 279.665 198.228 277.983 cv
198.228 276.301 199.591 274.939 201.272 274.939 cv
202.954 274.939 204.317 276.301 204.317 277.983 cv
cp
.345098 .384314 .478431 rgb
f
201.272 275.939 mo
200.145 275.939 199.228 276.856 199.228 277.983 cv
199.228 279.111 200.145 280.028 201.272 280.028 cv
202.399 280.028 203.317 279.111 203.317 277.983 cv
203.317 276.856 202.399 275.939 201.272 275.939 cv
cp
201.272 282.028 mo
199.042 282.028 197.228 280.214 197.228 277.983 cv
197.228 275.754 199.042 273.939 201.272 273.939 cv
203.502 273.939 205.317 275.754 205.317 277.983 cv
205.317 280.214 203.502 282.028 201.272 282.028 cv
cp
.262745 .333333 .392157 rgb
f
136.132 310.345 mo
124.215 310.345 li
125.661 306.71 li
137.577 306.71 li
136.132 310.345 li
162.03 245.216 mo
150.114 245.216 li
151.909 240.702 li
163.825 240.702 li
162.03 245.216 li
.482353 .513725 .588235 rgb
f
135.734 311.345 mo
123.818 311.345 li
124.215 310.345 li
136.132 310.345 li
135.734 311.345 li
163.825 240.702 mo
151.909 240.702 li
152.307 239.702 li
164.223 239.702 li
163.825 240.702 li
.419608 .47451 .521569 rgb
f
137.577 306.71 mo
125.661 306.71 li
127.454 302.202 li
133.148 302.202 li
133.148 299.52 li
128.52 299.52 li
129.586 296.839 li
133.148 296.839 li
133.148 294.158 li
130.652 294.158 li
131.363 292.371 li
133.148 292.371 li
133.148 289.689 li
132.429 289.689 li
136.128 280.387 li
136.128 281.745 li
147.504 281.745 li
146.493 284.289 li
136.128 284.289 li
136.128 286.853 li
145.473 286.853 li
144.462 289.397 li
136.128 289.397 li
136.128 291.962 li
143.442 291.962 li
142.45 294.455 li
136.128 294.455 li
136.128 297.018 li
141.431 297.018 li
140.39 299.637 li
136.128 299.637 li
136.128 302.202 li
139.37 302.202 li
137.577 306.71 li
148.524 279.18 mo
136.608 279.18 li
137.65 276.561 li
149.566 276.561 li
148.524 279.18 li
150.585 273.998 mo
138.669 273.998 li
139.66 271.505 li
151.576 271.505 li
150.585 273.998 li
152.596 268.941 mo
140.68 268.941 li
141.692 266.396 li
153.608 266.396 li
152.596 268.941 li
154.627 263.833 mo
142.711 263.833 li
143.723 261.288 li
155.639 261.288 li
154.627 263.833 li
156.659 258.723 mo
144.743 258.723 li
145.784 256.105 li
157.7 256.105 li
156.659 258.723 li
158.72 253.541 mo
146.804 253.541 li
147.795 251.048 li
159.711 251.048 li
158.72 253.541 li
160.73 248.484 mo
148.814 248.484 li
150.114 245.216 li
162.03 245.216 li
160.73 248.484 li
.968627 .819608 .447059 rgb
f
159.711 251.048 mo
147.795 251.048 li
148.814 248.484 li
160.73 248.484 li
159.711 251.048 li
1 .917647 .733333 rgb
f
157.7 256.105 mo
145.784 256.105 li
146.804 253.541 li
158.72 253.541 li
157.7 256.105 li
f
155.639 261.288 mo
143.723 261.288 li
144.743 258.723 li
156.659 258.723 li
155.639 261.288 li
f
153.608 266.396 mo
141.692 266.396 li
142.711 263.833 li
154.627 263.833 li
153.608 266.396 li
f
151.576 271.505 mo
139.66 271.505 li
140.68 268.941 li
152.596 268.941 li
151.576 271.505 li
f
149.566 276.561 mo
137.65 276.561 li
138.669 273.998 li
150.585 273.998 li
149.566 276.561 li
f
147.504 281.745 mo
136.128 281.745 li
136.128 280.387 li
136.608 279.18 li
148.524 279.18 li
147.504 281.745 li
f
145.473 286.853 mo
136.128 286.853 li
136.128 284.289 li
146.493 284.289 li
145.473 286.853 li
f
143.442 291.962 mo
136.128 291.962 li
136.128 289.397 li
144.462 289.397 li
143.442 291.962 li
f
141.431 297.018 mo
136.128 297.018 li
136.128 294.455 li
142.45 294.455 li
141.431 297.018 li
f
139.37 302.202 mo
136.128 302.202 li
136.128 299.637 li
140.39 299.637 li
139.37 302.202 li
f
133.148 292.371 mo
131.363 292.371 li
132.429 289.689 li
133.148 289.689 li
133.148 292.371 li
f
133.148 296.839 mo
129.586 296.839 li
130.652 294.158 li
133.148 294.158 li
133.148 296.839 li
f
133.148 302.202 mo
127.454 302.202 li
128.52 299.52 li
133.148 299.52 li
133.148 302.202 li
f
149.459 310.345 mo
143.501 310.345 li
144.947 306.71 li
150.905 306.71 li
149.459 310.345 li
175.357 245.216 mo
169.4 245.216 li
171.195 240.702 li
177.153 240.702 li
175.357 245.216 li
.482353 .513725 .588235 rgb
f
149.061 311.345 mo
143.104 311.345 li
143.501 310.345 li
149.459 310.345 li
149.061 311.345 li
177.153 240.702 mo
171.195 240.702 li
171.497 239.942 li
171.75 239.966 li
172.297 239.966 172.773 239.861 173.205 239.702 cv
177.55 239.702 li
177.153 240.702 li
.419608 .47451 .521569 rgb
f
150.905 306.71 mo
144.947 306.71 li
146.74 302.202 li
152.697 302.202 li
150.905 306.71 li
153.717 299.637 mo
147.759 299.637 li
148.801 297.018 li
154.759 297.018 li
153.717 299.637 li
155.778 294.455 mo
149.82 294.455 li
150.812 291.962 li
156.769 291.962 li
155.778 294.455 li
157.789 289.397 mo
151.831 289.397 li
152.843 286.853 li
158.801 286.853 li
157.789 289.397 li
159.82 284.289 mo
153.863 284.289 li
154.874 281.745 li
160.832 281.745 li
159.82 284.289 li
161.852 279.18 mo
155.894 279.18 li
156.936 276.561 li
162.893 276.561 li
161.852 279.18 li
163.913 273.998 mo
157.955 273.998 li
158.946 271.505 li
164.904 271.505 li
163.913 273.998 li
165.923 268.941 mo
159.966 268.941 li
160.978 266.396 li
166.935 266.396 li
165.923 268.941 li
167.955 263.833 mo
161.997 263.833 li
163.009 261.288 li
168.967 261.288 li
167.955 263.833 li
169.986 258.723 mo
164.029 258.723 li
165.07 256.105 li
171.028 256.105 li
169.986 258.723 li
172.047 253.541 mo
166.09 253.541 li
167.081 251.048 li
173.039 251.048 li
172.047 253.541 li
174.058 248.484 mo
168.1 248.484 li
169.4 245.216 li
175.357 245.216 li
174.058 248.484 li
.968627 .819608 .447059 rgb
f
173.039 251.048 mo
167.081 251.048 li
168.1 248.484 li
174.058 248.484 li
173.039 251.048 li
1 .917647 .733333 rgb
f
171.028 256.105 mo
165.07 256.105 li
166.09 253.541 li
172.047 253.541 li
171.028 256.105 li
f
168.967 261.288 mo
163.009 261.288 li
164.029 258.723 li
169.986 258.723 li
168.967 261.288 li
f
166.935 266.396 mo
160.978 266.396 li
161.997 263.833 li
167.955 263.833 li
166.935 266.396 li
f
164.904 271.505 mo
158.946 271.505 li
159.966 268.941 li
165.923 268.941 li
164.904 271.505 li
f
162.893 276.561 mo
156.936 276.561 li
157.955 273.998 li
163.913 273.998 li
162.893 276.561 li
f
160.832 281.745 mo
154.874 281.745 li
155.894 279.18 li
161.852 279.18 li
160.832 281.745 li
f
158.801 286.853 mo
152.843 286.853 li
153.863 284.289 li
159.82 284.289 li
158.801 286.853 li
f
156.769 291.962 mo
150.812 291.962 li
151.831 289.397 li
157.789 289.397 li
156.769 291.962 li
f
154.759 297.018 mo
148.801 297.018 li
149.82 294.455 li
155.778 294.455 li
154.759 297.018 li
f
152.697 302.202 mo
146.74 302.202 li
147.759 299.637 li
153.717 299.637 li
152.697 302.202 li
f
100.308 240.702 mo
98.5435 240.702 97.1079 242.137 97.1079 243.901 cv
97.1079 307.145 li
97.1079 308.91 98.5435 310.345 100.308 310.345 cv
203.324 310.345 li
205.088 310.345 206.523 308.91 206.523 307.145 cv
206.523 243.901 li
206.523 242.137 205.088 240.702 203.324 240.702 cv
100.308 240.702 li
cp
203.324 312.345 mo
100.308 312.345 li
97.4409 312.345 95.1079 310.012 95.1079 307.145 cv
95.1079 243.901 li
95.1079 241.034 97.4409 238.702 100.308 238.702 cv
203.324 238.702 li
206.191 238.702 208.523 241.034 208.523 243.901 cv
208.523 307.145 li
208.523 310.012 206.191 312.345 203.324 312.345 cv
cp
.262745 .333333 .392157 rgb
f
413.403 283.324 mo
384.189 283.324 li
381.531 283.324 379.355 281.149 379.355 278.491 cv
379.355 219.971 li
379.355 217.313 381.531 215.138 384.189 215.138 cv
413.403 215.138 li
416.063 215.138 418.237 217.313 418.237 219.971 cv
418.237 278.491 li
418.237 281.149 416.063 283.324 413.403 283.324 cv
.345098 .384314 .478431 rgb
f
384.189 216.138 mo
382.075 216.138 380.355 217.858 380.355 219.971 cv
380.355 278.491 li
380.355 280.604 382.075 282.324 384.189 282.324 cv
413.403 282.324 li
415.518 282.324 417.237 280.604 417.237 278.491 cv
417.237 219.971 li
417.237 217.858 415.518 216.138 413.403 216.138 cv
384.189 216.138 li
413.403 284.324 mo
384.189 284.324 li
380.973 284.324 378.355 281.708 378.355 278.491 cv
378.355 219.971 li
378.355 216.754 380.973 214.138 384.189 214.138 cv
413.403 214.138 li
416.62 214.138 419.237 216.754 419.237 219.971 cv
419.237 278.491 li
419.237 281.708 416.62 284.324 413.403 284.324 cv
.262745 .333333 .392157 rgb
f
412.605 276.07 mo
384.987 276.07 li
383.404 276.07 382.108 274.774 382.108 273.19 cv
382.108 222.845 li
382.108 221.261 383.404 219.965 384.987 219.965 cv
412.605 219.965 li
414.189 219.965 415.484 221.261 415.484 222.845 cv
415.484 273.19 li
415.484 274.774 414.189 276.07 412.605 276.07 cv
.662745 .858824 .388235 rgb
f
392.334 233.268 mo
387.39 233.268 li
386.106 233.268 385.057 232.218 385.057 230.935 cv
385.057 225.99 li
385.057 224.707 386.106 223.657 387.39 223.657 cv
392.334 223.657 li
393.617 223.657 394.667 224.707 394.667 225.99 cv
394.667 230.935 li
394.667 232.218 393.617 233.268 392.334 233.268 cv
cp
.905882 .976471 .792157 rgb
f
392.334 248.752 mo
387.39 248.752 li
386.106 248.752 385.057 247.702 385.057 246.419 cv
385.057 241.474 li
385.057 240.191 386.106 239.14 387.39 239.14 cv
392.334 239.14 li
393.617 239.14 394.667 240.191 394.667 241.474 cv
394.667 246.419 li
394.667 247.702 393.617 248.752 392.334 248.752 cv
f
392.334 264.236 mo
387.39 264.236 li
386.106 264.236 385.057 263.186 385.057 261.903 cv
385.057 256.958 li
385.057 255.674 386.106 254.625 387.39 254.625 cv
392.334 254.625 li
393.617 254.625 394.667 255.674 394.667 256.958 cv
394.667 261.903 li
394.667 263.186 393.617 264.236 392.334 264.236 cv
f
413.076 225.392 mo
396.904 225.392 li
396.904 224.05 li
413.076 224.05 li
413.076 225.392 li
f
413.076 228.489 mo
396.904 228.489 li
396.904 227.147 li
413.076 227.147 li
413.076 228.489 li
f
413.076 231.586 mo
396.904 231.586 li
396.904 230.244 li
413.076 230.244 li
413.076 231.586 li
f
413.076 240.876 mo
396.904 240.876 li
396.904 239.534 li
413.076 239.534 li
413.076 240.876 li
f
413.076 243.973 mo
396.904 243.973 li
396.904 242.63 li
413.076 242.63 li
413.076 243.973 li
f
413.076 247.07 mo
396.904 247.07 li
396.904 245.727 li
413.076 245.727 li
413.076 247.07 li
f
413.076 256.36 mo
396.904 256.36 li
396.904 255.017 li
413.076 255.017 li
413.076 256.36 li
f
413.076 259.457 mo
396.904 259.457 li
396.904 258.114 li
413.076 258.114 li
413.076 259.457 li
f
413.076 262.553 mo
396.904 262.553 li
396.904 261.211 li
413.076 261.211 li
413.076 262.553 li
f
403.785 218.035 mo
392.775 218.035 li
392.491 218.035 392.259 217.802 392.259 217.518 cv
392.259 217.235 392.491 217.003 392.775 217.003 cv
403.785 217.003 li
404.069 217.003 404.302 217.235 404.302 217.518 cv
404.302 217.802 404.069 218.035 403.785 218.035 cv
.262745 .333333 .392157 rgb
f
401.119 279.592 mo
401.119 280.757 400.176 281.7 399.012 281.7 cv
397.848 281.7 396.904 280.757 396.904 279.592 cv
396.904 278.428 397.848 277.485 399.012 277.485 cv
400.176 277.485 401.119 278.428 401.119 279.592 cv
.345098 .384314 .478431 rgb
f
399.012 278.485 mo
398.401 278.485 397.904 278.982 397.904 279.592 cv
397.904 280.203 398.401 280.7 399.012 280.7 cv
399.622 280.7 400.119 280.203 400.119 279.592 cv
400.119 278.982 399.622 278.485 399.012 278.485 cv
399.012 282.7 mo
397.298 282.7 395.904 281.306 395.904 279.592 cv
395.904 277.879 397.298 276.485 399.012 276.485 cv
400.726 276.485 402.119 277.879 402.119 279.592 cv
402.119 281.306 400.726 282.7 399.012 282.7 cv
.262745 .333333 .392157 rgb
f
407.357 273.061 mo
390.666 273.061 li
389.626 273.061 388.775 272.211 388.775 271.171 cv
388.775 269.687 li
388.775 268.647 389.626 267.796 390.666 267.796 cv
407.357 267.796 li
408.397 267.796 409.248 268.647 409.248 269.687 cv
409.248 271.171 li
409.248 272.211 408.397 273.061 407.357 273.061 cv
.501961 .717647 .160784 rgb
f
gsave
405.105 282.324 mo
400.493 282.324 li
401.461 281.797 402.119 280.77 402.119 279.592 cv
402.119 277.879 400.726 276.485 399.012 276.485 cv
398.525 276.485 398.064 276.597 397.653 276.798 cv
397.737 276.07 li
405.823 276.07 li
405.105 282.324 li
397.531 282.324 mo
397.019 282.324 li
397.056 282.005 li
397.203 282.125 397.362 282.232 397.531 282.324 cv
clp
397.019 276.07 mo
405.823 276.07 li
405.823 282.324 li
397.019 282.324 li
cp
.454902 .486274 .564706 rgb
f
grestore
404.99 283.324 mo
396.904 283.324 li
397.019 282.324 li
397.531 282.324 li
397.971 282.564 398.476 282.7 399.012 282.7 cv
399.548 282.7 400.052 282.564 400.493 282.324 cv
405.105 282.324 li
404.99 283.324 li
.388235 .443137 .494118 rgb
f
405.823 276.07 mo
397.737 276.07 li
398.082 273.061 li
406.168 273.061 li
405.823 276.07 li
.717647 .882353 .490196 rgb
f
399.012 280.7 mo
398.401 280.7 397.904 280.203 397.904 279.592 cv
397.904 278.982 398.401 278.485 399.012 278.485 cv
399.622 278.485 400.119 278.982 400.119 279.592 cv
400.119 280.203 399.622 280.7 399.012 280.7 cv
.454902 .486274 .564706 rgb
f
399.012 282.7 mo
398.476 282.7 397.971 282.564 397.531 282.324 cv
397.362 282.232 397.203 282.125 397.056 282.005 cv
397.653 276.798 li
398.064 276.597 398.525 276.485 399.012 276.485 cv
400.726 276.485 402.119 277.879 402.119 279.592 cv
402.119 280.77 401.461 281.797 400.493 282.324 cv
400.052 282.564 399.548 282.7 399.012 282.7 cv
399.012 278.485 mo
398.401 278.485 397.904 278.982 397.904 279.592 cv
397.904 280.203 398.401 280.7 399.012 280.7 cv
399.622 280.7 400.119 280.203 400.119 279.592 cv
400.119 278.982 399.622 278.485 399.012 278.485 cv
.388235 .443137 .494118 rgb
f
406.773 267.796 mo
398.687 267.796 li
399.289 262.553 li
407.375 262.553 li
406.773 267.796 li
407.529 261.211 mo
399.443 261.211 li
399.644 259.457 li
407.73 259.457 li
407.529 261.211 li
407.884 258.114 mo
399.798 258.114 li
399.999 256.36 li
408.085 256.36 li
407.884 258.114 li
408.24 255.017 mo
400.154 255.017 li
401.066 247.07 li
409.152 247.07 li
408.24 255.017 li
409.306 245.727 mo
401.22 245.727 li
401.421 243.973 li
409.507 243.973 li
409.306 245.727 li
409.661 242.63 mo
401.576 242.63 li
401.777 240.876 li
409.863 240.876 li
409.661 242.63 li
.717647 .882353 .490196 rgb
f
412.263 219.965 mo
404.177 219.965 li
404.617 216.138 li
412.703 216.138 li
412.263 219.965 li
.454902 .486274 .564706 rgb
f
412.703 216.138 mo
404.617 216.138 li
404.731 215.138 li
412.817 215.138 li
412.703 216.138 li
.388235 .443137 .494118 rgb
f
410.017 239.534 mo
401.931 239.534 li
402.843 231.586 li
410.929 231.586 li
410.017 239.534 li
411.083 230.244 mo
402.997 230.244 li
403.199 228.489 li
411.285 228.489 li
411.083 230.244 li
411.439 227.147 mo
403.353 227.147 li
403.554 225.392 li
411.64 225.392 li
411.439 227.147 li
411.794 224.05 mo
403.708 224.05 li
404.177 219.965 li
412.263 219.965 li
411.794 224.05 li
.717647 .882353 .490196 rgb
f
411.64 225.392 mo
403.554 225.392 li
403.708 224.05 li
411.794 224.05 li
411.64 225.392 li
.921569 .980392 .827451 rgb
f
411.285 228.489 mo
403.199 228.489 li
403.353 227.147 li
411.439 227.147 li
411.285 228.489 li
f
410.929 231.586 mo
402.843 231.586 li
402.997 230.244 li
411.083 230.244 li
410.929 231.586 li
f
409.863 240.876 mo
401.777 240.876 li
401.931 239.534 li
410.017 239.534 li
409.863 240.876 li
f
409.507 243.973 mo
401.421 243.973 li
401.576 242.63 li
409.661 242.63 li
409.507 243.973 li
f
409.152 247.07 mo
401.066 247.07 li
401.22 245.727 li
409.306 245.727 li
409.152 247.07 li
f
408.085 256.36 mo
399.999 256.36 li
400.154 255.017 li
408.24 255.017 li
408.085 256.36 li
f
407.73 259.457 mo
399.644 259.457 li
399.798 258.114 li
407.884 258.114 li
407.73 259.457 li
f
407.375 262.553 mo
399.289 262.553 li
399.443 261.211 li
407.529 261.211 li
407.375 262.553 li
f
406.168 273.061 mo
398.082 273.061 li
398.687 267.796 li
406.773 267.796 li
406.168 273.061 li
.584314 .764706 .301961 rgb
f
394.782 282.324 mo
390.869 282.324 li
391.587 276.07 li
395.5 276.07 li
394.782 282.324 li
401.941 219.965 mo
398.027 219.965 li
398.249 218.035 li
402.163 218.035 li
401.941 219.965 li
402.281 217.003 mo
398.367 217.003 li
398.466 216.138 li
402.38 216.138 li
402.281 217.003 li
.454902 .486274 .564706 rgb
f
394.667 283.324 mo
390.754 283.324 li
390.869 282.324 li
394.782 282.324 li
394.667 283.324 li
402.38 216.138 mo
398.466 216.138 li
398.581 215.138 li
402.495 215.138 li
402.38 216.138 li
.388235 .443137 .494118 rgb
f
395.5 276.07 mo
391.587 276.07 li
391.932 273.061 li
395.845 273.061 li
395.5 276.07 li
396.45 267.796 mo
392.536 267.796 li
392.955 264.152 li
393.939 263.878 394.667 262.972 394.667 261.903 cv
394.667 256.958 li
394.667 256.311 394.4 255.723 393.971 255.299 cv
397.048 228.489 li
400.962 228.489 li
400.761 230.244 li
396.904 230.244 li
396.904 231.586 li
400.607 231.586 li
399.694 239.534 li
396.904 239.534 li
396.904 240.876 li
399.54 240.876 li
399.339 242.63 li
396.904 242.63 li
396.904 243.973 li
399.185 243.973 li
398.983 245.727 li
396.904 245.727 li
396.904 247.07 li
398.829 247.07 li
397.917 255.017 li
396.904 255.017 li
396.904 256.36 li
397.763 256.36 li
397.561 258.114 li
396.904 258.114 li
396.904 259.457 li
397.407 259.457 li
397.206 261.211 li
396.904 261.211 li
396.904 262.553 li
397.052 262.553 li
396.45 267.796 li
401.116 227.147 mo
397.203 227.147 li
397.404 225.392 li
401.318 225.392 li
401.116 227.147 li
401.472 224.05 mo
397.558 224.05 li
398.027 219.965 li
401.941 219.965 li
401.472 224.05 li
.717647 .882353 .490196 rgb
f
392.955 264.152 mo
393.971 255.299 li
394.4 255.723 394.667 256.311 394.667 256.958 cv
394.667 261.903 li
394.667 262.972 393.939 263.878 392.955 264.152 cv
.921569 .980392 .827451 rgb
f
401.318 225.392 mo
397.404 225.392 li
397.558 224.05 li
401.472 224.05 li
401.318 225.392 li
f
400.962 228.489 mo
397.048 228.489 li
397.203 227.147 li
401.116 227.147 li
400.962 228.489 li
f
400.607 231.586 mo
396.904 231.586 li
396.904 230.244 li
400.761 230.244 li
400.607 231.586 li
f
399.54 240.876 mo
396.904 240.876 li
396.904 239.534 li
399.694 239.534 li
399.54 240.876 li
f
399.185 243.973 mo
396.904 243.973 li
396.904 242.63 li
399.339 242.63 li
399.185 243.973 li
f
398.829 247.07 mo
396.904 247.07 li
396.904 245.727 li
398.983 245.727 li
398.829 247.07 li
f
397.763 256.36 mo
396.904 256.36 li
396.904 255.017 li
397.917 255.017 li
397.763 256.36 li
f
397.407 259.457 mo
396.904 259.457 li
396.904 258.114 li
397.561 258.114 li
397.407 259.457 li
f
397.052 262.553 mo
396.904 262.553 li
396.904 261.211 li
397.206 261.211 li
397.052 262.553 li
f
402.163 218.035 mo
398.249 218.035 li
398.367 217.003 li
402.281 217.003 li
402.163 218.035 li
.388235 .443137 .494118 rgb
f
395.845 273.061 mo
391.932 273.061 li
392.536 267.796 li
396.45 267.796 li
395.845 273.061 li
.584314 .764706 .301961 rgb
f
384.189 216.138 mo
382.075 216.138 380.355 217.858 380.355 219.971 cv
380.355 278.491 li
380.355 280.604 382.075 282.324 384.189 282.324 cv
413.403 282.324 li
415.518 282.324 417.237 280.604 417.237 278.491 cv
417.237 219.971 li
417.237 217.858 415.518 216.138 413.403 216.138 cv
384.189 216.138 li
cp
413.403 284.324 mo
384.189 284.324 li
380.973 284.324 378.355 281.708 378.355 278.491 cv
378.355 219.971 li
378.355 216.755 380.973 214.138 384.189 214.138 cv
413.403 214.138 li
416.62 214.138 419.237 216.755 419.237 219.971 cv
419.237 278.491 li
419.237 281.708 416.62 284.324 413.403 284.324 cv
cp
.262745 .333333 .392157 rgb
f
154.07 197.001 mo
161.092 197.001 166.988 191.491 167.212 184.472 cv
167.218 184.287 167.221 184.1 167.221 183.914 cv
167.221 174.387 159.499 166.666 149.972 166.666 cv
149.804 166.666 149.638 166.674 149.471 166.678 cv
149.472 166.666 li
149.472 162.419 146.029 158.975 141.782 158.975 cv
140.08 158.975 138.509 159.529 137.235 160.465 cv
134.659 152.467 127.161 146.68 118.308 146.68 cv
107.813 146.68 99.2241 154.811 98.481 165.116 cv
91.0112 166.517 85.3579 173.07 85.3579 180.946 cv
85.3579 188.136 90.0688 194.223 96.5718 196.295 cv
98.1338 196.793 99.7739 197.001 101.413 197.001 cv
154.07 197.001 li
cp
1 1 1 rgb
f
243.713 155.659 mo
250.735 155.659 256.631 150.149 256.854 143.131 cv
256.86 142.945 256.863 142.759 256.863 142.572 cv
256.863 133.046 249.141 125.323 239.615 125.323 cv
239.447 125.323 239.281 125.331 239.114 125.336 cv
239.114 125.323 li
239.114 121.076 235.671 117.633 231.424 117.633 cv
229.723 117.633 228.151 118.187 226.878 119.123 cv
224.302 111.126 216.804 105.339 207.95 105.339 cv
197.456 105.339 188.867 113.47 188.124 123.775 cv
180.654 125.176 175 131.728 175 139.605 cv
175 146.795 179.711 152.882 186.214 154.953 cv
187.776 155.451 189.416 155.659 191.056 155.659 cv
243.713 155.659 li
cp
f
346.367 172.717 mo
353.389 172.717 359.285 167.208 359.509 160.189 cv
359.515 160.004 359.518 159.817 359.518 159.631 cv
359.518 150.104 351.795 142.382 342.269 142.382 cv
342.101 142.382 341.935 142.39 341.768 142.395 cv
341.769 142.382 li
341.769 138.135 338.325 134.692 334.078 134.692 cv
332.377 134.692 330.806 135.245 329.532 136.181 cv
326.956 128.184 319.458 122.397 310.604 122.397 cv
300.11 122.397 291.521 130.528 290.777 140.833 cv
283.308 142.235 277.654 148.787 277.654 156.663 cv
277.654 163.853 282.365 169.94 288.868 172.011 cv
290.431 172.509 292.07 172.717 293.71 172.717 cv
346.367 172.717 li
cp
f
125.401 161.843 mo
117.129 161.843 110.399 168.573 110.399 176.845 cv
110.399 185.118 117.129 191.847 125.401 191.847 cv
133.673 191.847 140.403 185.118 140.403 176.845 cv
140.403 168.573 133.673 161.843 125.401 161.843 cv
cp
125.401 193.847 mo
116.026 193.847 108.399 186.22 108.399 176.845 cv
108.399 167.47 116.026 159.843 125.401 159.843 cv
134.776 159.843 142.403 167.47 142.403 176.845 cv
142.403 186.22 134.776 193.847 125.401 193.847 cv
cp
.156863 .709804 1 rgb
f
125.815 193.757 mo
124.988 191.937 li
130.894 189.256 134.71 183.332 134.71 176.845 cv
134.71 170.359 130.894 164.435 124.988 161.754 cv
125.815 159.932 li
132.434 162.938 136.71 169.577 136.71 176.845 cv
136.71 184.115 132.433 190.754 125.815 193.757 cv
cp
f
124.185 162.48 mo
119.097 165.413 115.876 170.911 115.876 176.845 cv
115.876 182.83 119.038 188.258 124.185 191.212 cv
124.185 162.48 li
cp
124.702 193.564 mo
124.475 193.564 124.247 193.511 124.036 193.403 cv
117.77 190.22 113.876 183.876 113.876 176.845 cv
113.876 169.679 118.067 163.08 124.554 160.033 cv
124.913 159.866 125.323 159.894 125.655 160.104 cv
125.987 160.316 126.185 160.676 126.185 161.07 cv
126.185 192.076 li
126.185 192.597 125.919 193.072 125.473 193.345 cv
125.235 193.491 124.969 193.564 124.702 193.564 cv
cp
f
111.612 169.768 mo
111.289 167.795 li
116.045 167.015 120.894 166.636 125.716 166.665 cv
130.181 166.693 134.678 167.073 139.081 167.795 cv
138.758 169.768 li
134.457 169.063 130.064 168.692 125.704 168.665 cv
121.011 168.639 116.259 169.007 111.612 169.768 cv
cp
f
125.175 187.041 mo
125.001 187.041 124.828 187.04 124.654 187.039 cv
120.192 187.01 115.695 186.631 111.289 185.909 cv
111.612 183.934 li
115.916 184.64 120.308 185.011 124.667 185.039 cv
129.376 185.055 134.117 184.696 138.757 183.935 cv
139.082 185.908 li
134.501 186.66 129.825 187.041 125.175 187.041 cv
cp
f
141.011 177.845 mo
109.399 177.845 li
109.399 175.845 li
141.011 175.845 li
141.011 177.845 li
cp
f
188.78 137.605 mo
188.036 138.331 186.884 139.381 185.326 140.754 cv
185.982 141.394 187.003 142.319 188.387 143.528 cv
188.824 143.879 189.043 144.274 189.043 144.712 cv
189.043 145.132 188.874 145.503 188.537 145.823 cv
188.2 146.143 187.8 146.303 187.335 146.303 cv
186.845 146.303 186.232 145.992 185.497 145.371 cv
183.973 143.9 li
183.158 143.12 182.379 142.599 181.635 142.336 cv
180.75 142.03 180.308 141.544 180.308 140.878 cv
180.308 140.274 180.703 139.799 181.49 139.453 cv
182.278 139.108 183.154 138.47 184.118 137.542 cv
185.431 136.264 186.223 135.524 186.495 135.322 cv
186.854 135.051 187.23 134.915 187.625 134.915 cv
188.089 134.915 188.489 135.073 188.826 135.388 cv
189.163 135.702 189.332 136.07 189.332 136.489 cv
189.332 136.901 189.148 137.272 188.78 137.605 cv
cp
f
197.967 146.558 mo
196.473 146.558 195.221 146.133 194.209 145.285 cv
193.144 144.389 192.611 143.208 192.611 141.741 cv
192.611 140.39 193.089 138.995 194.046 137.556 cv
195.133 135.913 196.395 135.092 197.834 135.092 cv
198.541 135.092 199.365 135.282 200.309 135.662 cv
201.456 136.131 202.03 136.67 202.03 137.281 cv
202.03 137.614 201.915 137.909 201.684 138.167 cv
201.439 138.445 201.124 138.585 200.737 138.585 cv
200.445 138.585 200.093 138.427 199.683 138.111 cv
199.272 137.796 198.656 137.637 197.834 137.637 cv
197.312 137.637 196.745 138.15 196.134 139.175 cv
195.55 140.166 195.258 141.022 195.258 141.741 cv
195.258 142.454 195.516 143.014 196.032 143.422 cv
196.521 143.808 197.166 144.002 197.967 144.002 cv
198.422 144.002 198.979 143.829 199.637 143.483 cv
200.295 143.136 200.713 142.963 200.889 142.963 cv
201.256 142.963 201.57 143.095 201.831 143.361 cv
202.093 143.625 202.223 143.927 202.223 144.267 cv
202.223 144.796 201.646 145.325 200.492 145.855 cv
199.46 146.323 198.619 146.558 197.967 146.558 cv
cp
f
208.801 138.045 mo
207.966 138.038 207.308 138.418 206.826 139.185 cv
206.419 139.83 206.215 140.584 206.215 141.446 cv
206.215 142.26 206.446 142.885 206.908 143.32 cv
207.274 143.666 207.702 143.839 208.19 143.839 cv
208.781 143.839 209.293 143.639 209.728 143.238 cv
210.224 142.77 210.488 142.135 210.522 141.334 cv
210.61 139.148 210.037 138.051 208.801 138.045 cv
cp
208.19 146.517 mo
206.935 146.517 205.855 146.086 204.952 145.224 cv
203.961 144.28 203.442 143.021 203.395 141.446 cv
203.347 139.945 203.757 138.609 204.626 137.434 cv
205.658 136.049 207.094 135.357 208.934 135.357 cv
210.292 135.357 211.371 135.9 212.172 136.986 cv
212.892 137.964 213.251 139.175 213.251 140.621 cv
213.251 142.196 212.831 143.54 211.989 144.653 cv
211.045 145.896 209.779 146.517 208.19 146.517 cv
cp
f
222.212 138.89 mo
221.988 138.463 221.696 138.143 221.336 137.933 cv
220.977 137.722 220.549 137.617 220.053 137.617 cv
219.049 137.617 218.295 137.907 217.793 138.488 cv
217.291 139.068 217.039 139.939 217.039 141.1 cv
217.039 141.833 217.311 142.461 217.854 142.984 cv
218.397 143.507 219.028 143.768 219.748 143.768 cv
220.271 143.768 220.668 143.707 220.939 143.584 cv
221.123 143.503 221.435 143.286 221.876 142.933 cv
221.992 142.838 222.104 142.733 222.212 142.617 cv
222.199 142.291 222.199 141.049 222.212 138.89 cv
cp
222.416 135.682 mo
222.504 133.367 222.609 131.769 222.731 130.886 cv
222.847 130.085 223.288 129.685 224.055 129.685 cv
224.456 129.685 224.778 129.815 225.022 130.075 cv
225.267 130.336 225.389 130.655 225.389 131.032 cv
225.389 132.026 225.313 133.507 225.16 135.474 cv
225.007 137.442 224.931 138.923 224.931 139.916 cv
224.931 142.343 225.009 143.968 225.165 144.791 cv
225.186 144.901 225.196 145 225.196 145.089 cv
225.196 145.466 225.06 145.776 224.789 146.02 cv
224.517 146.263 224.201 146.384 223.841 146.384 cv
223.339 146.384 222.966 146.161 222.721 145.713 cv
222.26 145.991 221.781 146.173 221.286 146.257 cv
220.79 146.342 220.277 146.384 219.748 146.384 cv
218.227 146.384 216.964 145.899 215.96 144.928 cv
214.935 143.937 214.422 142.674 214.422 141.14 cv
214.422 139.314 214.938 137.84 215.97 136.716 cv
217.002 135.592 218.35 135.031 220.013 135.031 cv
220.522 135.031 220.977 135.085 221.377 135.194 cv
221.778 135.302 222.124 135.465 222.416 135.682 cv
cp
f
232.069 137.739 mo
231.438 137.739 230.898 137.95 230.45 138.371 cv
230.002 138.792 229.642 139.423 229.371 140.265 cv
230.138 139.932 230.901 139.603 231.662 139.277 cv
232.578 138.863 233.308 138.479 233.851 138.126 cv
233.396 137.868 232.802 137.739 232.069 137.739 cv
cp
232.344 146.384 mo
230.722 146.384 229.395 145.998 228.363 145.224 cv
227.222 144.368 226.652 143.163 226.652 141.609 cv
226.652 139.891 227.104 138.439 228.006 137.251 cv
229.011 135.934 230.365 135.275 232.069 135.275 cv
233.25 135.275 234.231 135.465 235.012 135.845 cv
236.037 136.348 236.55 137.129 236.55 138.187 cv
236.55 138.934 236.132 139.596 235.297 140.173 cv
234.917 140.438 234.153 140.825 233.006 141.334 cv
229.574 142.851 li
229.9 143.204 230.294 143.469 230.756 143.645 cv
231.217 143.822 231.747 143.91 232.344 143.91 cv
233.254 143.91 234.024 143.723 234.656 143.35 cv
235.219 143.018 235.67 142.851 236.01 142.851 cv
236.716 142.851 237.069 143.194 237.069 143.88 cv
237.069 144.653 236.502 145.285 235.369 145.774 cv
234.418 146.181 233.41 146.384 232.344 146.384 cv
cp
f
249.516 141.364 mo
247.406 143.177 245.199 144.762 242.896 146.119 cv
242.572 146.312 242.248 146.408 241.924 146.408 cv
241.452 146.408 241.051 146.246 240.722 145.922 cv
240.394 145.597 240.229 145.225 240.229 144.804 cv
240.229 144.322 240.466 143.909 240.939 143.568 cv
241.963 142.875 243.483 141.815 245.497 140.385 cv
244.49 139.66 243.522 138.855 242.594 137.971 cv
241.42 136.869 240.834 136.095 240.834 135.649 cv
240.834 135.22 241.011 134.85 241.366 134.54 cv
241.72 134.229 242.125 134.074 242.581 134.074 cv
243.054 134.074 243.479 134.267 243.855 134.652 cv
245.816 136.666 247.572 138.046 249.123 138.79 cv
249.832 139.132 250.186 139.583 250.186 140.142 cv
250.186 140.572 249.963 140.979 249.516 141.364 cv
cp
f
306.196 143.535 mo
307.304 144.183 311.253 145.15 317.767 145.15 cv
324.28 145.15 328.229 144.183 329.337 143.535 cv
328.229 142.886 324.281 141.919 317.767 141.919 cv
311.253 141.919 307.304 142.886 306.196 143.535 cv
cp
317.767 147.261 mo
315.445 147.261 303.865 147.081 303.865 143.535 cv
303.865 139.988 315.445 139.808 317.767 139.808 cv
320.087 139.808 331.667 139.988 331.667 143.535 cv
331.667 147.081 320.087 147.261 317.767 147.261 cv
cp
f
317.767 151.719 mo
315.445 151.719 303.865 151.54 303.865 147.994 cv
303.865 143.535 li
305.977 143.535 li
305.977 147.838 li
306.656 148.472 310.704 149.609 317.767 149.609 cv
324.829 149.609 328.876 148.472 329.557 147.838 cv
329.557 143.535 li
331.667 143.535 li
331.667 147.994 li
331.667 151.54 320.087 151.719 317.767 151.719 cv
cp
f
317.767 156.997 mo
315.445 156.997 303.865 156.817 303.865 153.27 cv
303.865 148.811 li
305.977 148.811 li
305.977 153.114 li
306.656 153.749 310.704 154.885 317.767 154.885 cv
324.829 154.885 328.876 153.749 329.557 153.114 cv
329.557 148.811 li
331.667 148.811 li
331.667 153.27 li
331.667 156.817 320.087 156.997 317.767 156.997 cv
cp
f
317.767 162.273 mo
315.445 162.273 303.865 162.093 303.865 158.548 cv
303.865 154.089 li
305.977 154.089 li
305.977 158.391 li
306.656 159.026 310.704 160.163 317.767 160.163 cv
324.829 160.163 328.876 159.026 329.557 158.391 cv
329.557 154.089 li
331.667 154.089 li
331.667 158.548 li
331.667 162.093 320.087 162.273 317.767 162.273 cv
cp
f
317.767 167.55 mo
315.445 167.55 303.865 167.37 303.865 163.824 cv
303.865 159.365 li
305.977 159.365 li
305.977 163.668 li
306.656 164.302 310.704 165.439 317.767 165.439 cv
324.829 165.439 328.876 164.302 329.557 163.668 cv
329.557 159.365 li
331.667 159.365 li
331.667 163.824 li
331.667 167.37 320.087 167.55 317.767 167.55 cv
cp
f
435.794 147.557 mo
442.815 147.557 448.711 142.048 448.935 135.029 cv
448.94 134.843 448.943 134.657 448.943 134.47 cv
448.943 124.944 441.222 117.222 431.695 117.222 cv
431.527 117.222 431.361 117.23 431.194 117.235 cv
431.194 117.222 li
431.194 112.975 427.752 109.532 423.505 109.532 cv
421.804 109.532 420.231 110.085 418.958 111.021 cv
416.382 103.024 408.884 97.237 400.031 97.237 cv
389.536 97.237 380.947 105.368 380.204 115.673 cv
372.734 117.074 367.081 123.626 367.081 131.503 cv
367.081 138.693 371.792 144.779 378.295 146.851 cv
379.856 147.349 381.497 147.557 383.136 147.557 cv
435.794 147.557 li
cp
1 1 1 rgb
f
148.769 108.342 mo
155.791 108.342 161.687 102.833 161.911 95.8141 cv
161.917 95.6286 161.919 95.4425 161.919 95.2555 cv
161.919 85.7292 154.197 78.007 144.671 78.007 cv
144.503 78.007 144.336 78.0148 144.17 78.0197 cv
144.17 78.007 li
144.17 73.7599 140.727 70.3171 136.48 70.3171 cv
134.779 70.3171 133.208 70.8708 131.934 71.8058 cv
129.358 63.8092 121.859 58.0221 113.006 58.0221 cv
102.512 58.0221 93.9229 66.153 93.1797 76.4577 cv
85.71 77.8595 80.0562 84.4118 80.0562 92.2882 cv
80.0562 99.4782 84.7671 105.565 91.2705 107.637 cv
92.8325 108.134 94.4722 108.342 96.1113 108.342 cv
148.769 108.342 li
cp
f
326.056 101.326 mo
333.078 101.326 338.974 95.8161 339.197 88.798 cv
339.203 88.6125 339.206 88.4259 339.206 88.2389 cv
339.206 78.7131 331.484 70.9904 321.958 70.9904 cv
321.79 70.9904 321.624 70.9987 321.457 71.0031 cv
321.457 70.9904 li
321.457 66.7438 318.015 63.3009 313.768 63.3009 cv
312.066 63.3009 310.494 63.8542 309.221 64.7897 cv
306.645 56.7931 299.146 51.006 290.293 51.006 cv
279.799 51.006 271.21 59.1369 270.467 69.4416 cv
262.997 70.8429 257.343 77.3952 257.343 85.2716 cv
257.343 92.4621 262.054 98.5485 268.558 100.62 cv
270.119 101.118 271.76 101.326 273.398 101.326 cv
326.056 101.326 li
cp
f
385.255 120.806 mo
384.321 120.341 383.941 119.208 384.405 118.275 cv
384.87 117.341 386.003 116.961 386.937 117.426 cv
387.87 117.89 388.25 119.023 387.785 119.957 cv
387.321 120.89 386.188 121.27 385.255 120.806 cv
cp
436.69 131.841 mo
435.409 134.416 li
432.673 133.055 li
433.42 131.553 li
431.006 130.351 li
429.617 133.141 li
427.848 132.26 li
425.371 137.236 li
403.965 126.585 li
405.311 123.881 li
403.174 122.818 li
403.461 118.466 401.165 114.164 397.016 112.1 cv
391.505 109.358 384.814 111.602 382.071 117.113 cv
379.329 122.625 381.574 129.316 387.085 132.058 cv
391.234 134.122 396.051 133.36 399.349 130.506 cv
399.286 130.632 li
401.422 131.695 li
402.83 128.865 li
433.894 144.321 li
434.43 143.245 li
435.028 142.042 li
439.426 133.203 li
436.69 131.841 li
cp
.156863 .709804 1 rgb
f
144.857 94.4494 mo
144.866 94.2926 li
144.857 94.4494 li
cp
144.826 94.8088 mo
144.838 94.6984 li
144.826 94.8088 li
cp
144.775 95.1911 mo
144.786 95.1193 li
144.775 95.1911 li
cp
144.872 94.1076 mo
144.874 93.8927 li
144.872 94.1076 li
cp
144.049 97.4548 mo
144.103 97.3415 li
144.049 97.4548 li
cp
144.7 95.5934 mo
144.705 95.57 li
144.702 95.5856 li
144.7 95.5934 li
cp
143.974 97.5993 mo
143.855 97.8175 li
143.974 97.5993 li
cp
141.757 97.7331 mo
139.666 100.352 135.848 100.779 133.23 98.6877 cv
130.612 96.5968 130.184 92.7795 132.275 90.1608 cv
134.366 87.5426 138.184 87.1154 140.802 89.2062 cv
143.42 91.2975 143.848 95.1149 141.757 97.7331 cv
cp
141.243 100.572 mo
141.351 100.503 li
141.243 100.572 li
cp
141.491 100.408 mo
141.701 100.257 li
141.491 100.408 li
cp
138.778 101.604 mo
138.917 101.571 li
138.778 101.604 li
cp
138.364 101.688 mo
138.54 101.655 li
138.364 101.688 li
cp
137.966 101.747 mo
138.175 101.718 li
137.966 101.747 li
cp
137.573 101.785 mo
137.822 101.763 li
137.573 101.785 li
cp
139.233 101.485 mo
139.308 101.464 li
139.291 101.469 li
139.233 101.485 li
cp
137.157 101.804 mo
137.263 101.802 137.369 101.798 137.475 101.792 cv
137.364 101.798 137.258 101.802 137.157 101.804 cv
cp
132.871 87.2697 mo
132.83 87.2961 li
132.871 87.2697 li
cp
133.169 87.0939 mo
133.126 87.1188 li
133.169 87.0939 li
cp
133.493 86.9225 mo
133.45 86.9445 li
133.493 86.9225 li
cp
133.845 86.757 mo
133.796 86.779 li
133.845 86.757 li
cp
134.222 86.6022 mo
134.169 86.6227 li
134.222 86.6022 li
cp
132.515 87.505 mo
132.334 87.6344 li
132.515 87.505 li
cp
135.59 86.2209 mo
135.42 86.2526 li
135.59 86.2209 li
cp
136.067 86.1471 mo
135.975 86.1584 135.882 86.1706 135.791 86.1847 cv
135.885 86.1701 135.977 86.1584 136.067 86.1471 cv
cp
134.62 86.4626 mo
134.59 86.4728 li
134.614 86.4645 li
134.62 86.4626 li
cp
144.872 93.7726 mo
144.87 93.672 144.866 93.5714 144.86 93.4709 cv
144.866 93.5675 144.87 93.6676 144.872 93.7726 cv
cp
129.174 93.465 mo
129.164 93.6452 li
129.174 93.465 li
cp
129.199 93.154 mo
129.188 93.257 li
129.199 93.154 li
cp
129.241 92.8083 mo
129.233 92.8605 li
129.241 92.8083 li
cp
129.308 92.4191 mo
129.301 92.4538 li
129.308 92.4191 li
cp
129.16 93.777 mo
129.158 94.0343 li
129.16 93.777 li
cp
129.519 91.592 mo
129.514 91.6056 li
129.519 91.592 li
cp
129.652 91.2033 mo
129.649 91.2096 li
129.652 91.2033 li
cp
129.801 90.8322 mo
129.788 90.8634 li
129.801 90.8322 li
cp
129.967 90.4728 mo
129.924 90.5636 li
129.967 90.4728 li
cp
130.159 90.109 mo
130.066 90.2799 li
130.159 90.109 li
cp
129.402 92.0041 mo
129.395 92.0319 li
129.397 92.0187 li
129.402 92.0041 li
cp
144.796 92.8273 mo
144.821 93.0031 144.843 93.2101 144.858 93.4386 cv
144.791 92.4025 144.518 91.382 144.049 90.4411 cv
144.725 89.6745 145.401 88.9079 146.077 88.1413 cv
142.09 84.5153 li
141.416 85.2453 140.742 85.9753 140.067 86.7052 cv
138.815 86.1769 137.465 85.9909 136.151 86.1364 cv
136.634 86.0827 137.052 86.0802 137.375 86.0944 cv
137.046 85.1237 136.718 84.153 136.39 83.1823 cv
131.259 84.8298 li
131.564 85.8048 131.869 86.7799 132.174 87.755 cv
132.252 87.696 li
131.75 88.0788 131.287 88.5275 130.875 89.0431 cv
130.631 89.3488 130.415 89.6672 130.223 89.9958 cv
130.337 89.7995 130.448 89.6256 130.547 89.4811 cv
129.55 89.2453 128.553 89.0089 127.556 88.7731 cv
126.233 93.9972 li
127.222 94.255 128.21 94.5133 129.199 94.7716 cv
129.179 94.5812 129.164 94.3547 129.159 94.1042 cv
129.198 95.9699 129.897 97.8107 131.215 99.2492 cv
130.537 98.5202 130.125 97.8 129.885 97.3024 cv
129.186 98.0509 128.486 98.8 127.787 99.549 cv
131.668 103.288 li
132.376 102.564 133.084 101.84 133.792 101.116 cv
134.856 101.595 135.998 101.822 137.13 101.805 cv
136.904 101.809 136.699 101.803 136.523 101.792 cv
136.835 102.769 137.147 103.745 137.459 104.721 cv
142.617 103.161 li
142.329 102.181 142.041 101.201 141.752 100.221 cv
141.746 100.225 li
142.261 99.8366 142.736 99.3786 143.157 98.8512 cv
143.405 98.5402 143.625 98.216 143.819 97.8815 cv
143.761 97.9836 143.703 98.0802 143.649 98.1652 cv
144.655 98.3634 145.66 98.5612 146.666 98.7594 cv
147.789 93.4889 li
146.792 93.2687 145.794 93.048 144.796 92.8273 cv
cp
f
124.582 82.2887 mo
124.511 82.0641 li
124.582 82.2887 li
cp
124.729 82.8107 mo
124.687 82.6491 li
124.729 82.8107 li
cp
124.861 83.3752 mo
124.838 83.2682 li
124.861 83.3752 li
cp
124.42 81.8005 mo
124.384 81.6989 124.347 81.5978 124.309 81.4977 cv
124.347 81.5959 124.384 81.6964 124.42 81.8005 cv
cp
125.044 86.943 mo
125.061 86.755 li
125.044 86.943 li
cp
124.97 83.9801 mo
124.964 83.9455 li
124.968 83.9689 li
124.97 83.9801 li
cp
125.017 87.1862 mo
125.001 87.3151 124.984 87.4377 124.966 87.5558 cv
124.985 87.4328 125.001 87.3097 125.017 87.1862 cv
cp
121.971 88.5539 mo
120.425 93.3468 115.287 95.9787 110.494 94.4328 cv
105.702 92.8869 103.069 87.7482 104.615 82.9557 cv
106.162 78.1628 111.3 75.5309 116.093 77.0768 cv
120.885 78.6227 123.517 83.7614 121.971 88.5539 cv
cp
122.76 92.8171 mo
122.875 92.6623 li
122.76 92.8171 li
cp
123.021 92.4543 mo
123.094 92.3483 123.167 92.2409 123.236 92.132 cv
123.17 92.234 123.099 92.3415 123.021 92.4543 cv
cp
119.844 95.5793 mo
120.021 95.4596 li
119.844 95.5793 li
cp
119.307 95.9172 mo
119.536 95.7785 li
119.307 95.9172 li
cp
118.779 96.2121 mo
118.873 96.1628 118.965 96.1125 119.058 96.0607 cv
118.963 96.1134 118.871 96.1637 118.779 96.2121 cv
cp
118.246 96.4753 mo
118.36 96.4225 118.473 96.3678 118.585 96.3117 cv
118.47 96.3693 118.357 96.4235 118.246 96.4753 cv
cp
120.42 95.1701 mo
120.514 95.1007 li
120.493 95.1178 li
120.42 95.1701 li
cp
117.672 96.7233 mo
117.82 96.6642 117.966 96.6017 118.111 96.5368 cv
117.96 96.6047 117.813 96.6667 117.672 96.7233 cv
cp
103.914 78.5754 mo
103.871 78.6335 li
103.914 78.5754 li
cp
104.241 78.1691 mo
104.192 78.2277 li
104.241 78.1691 li
cp
104.604 77.756 mo
104.555 77.8097 li
104.604 77.756 li
cp
105.01 77.3361 mo
104.954 77.3927 li
105.01 77.3361 li
cp
105.458 76.9176 mo
105.396 76.9748 li
105.458 76.9176 li
cp
103.54 79.0949 mo
103.477 79.1867 103.414 79.279 103.354 79.3727 cv
103.411 79.2839 103.474 79.1906 103.54 79.0949 cv
cp
107.178 75.6545 mo
106.956 75.7887 li
107.178 75.6545 li
cp
107.81 75.2965 mo
107.686 75.3615 107.563 75.4274 107.441 75.4967 cv
107.566 75.425 107.688 75.3605 107.81 75.2965 cv
cp
105.943 76.5099 mo
105.907 76.5397 li
105.936 76.5158 li
105.943 76.5099 li
cp
124.242 81.3298 mo
124.186 81.1896 124.127 81.05 124.065 80.9123 cv
124.125 81.0451 124.184 81.1838 124.242 81.3298 cv
cp
102.014 89.2497 mo
102.096 89.5085 li
102.014 89.2497 li
cp
101.884 88.7995 mo
101.923 88.9494 li
101.884 88.7995 li
cp
101.759 88.2912 mo
101.776 88.3688 li
101.759 88.2912 li
cp
101.646 87.7087 mo
101.655 87.7609 li
101.646 87.7087 li
cp
102.161 89.6955 mo
102.204 89.8171 102.248 89.9381 102.295 90.0583 cv
102.25 89.9421 102.206 89.821 102.161 89.6955 cv
cp
101.502 86.4333 mo
101.504 86.4552 li
101.502 86.4333 li
cp
101.482 85.8166 mo
101.483 85.8263 li
101.482 85.8166 li
cp
101.495 85.2155 mo
101.493 85.2663 li
101.495 85.2155 li
cp
101.538 84.6217 mo
101.524 84.7726 li
101.538 84.6217 li
cp
101.613 84.0089 mo
101.599 84.1056 101.586 84.2018 101.574 84.2985 cv
101.586 84.1989 101.599 84.1032 101.613 84.0089 cv
cp
101.557 87.0754 mo
101.562 87.1178 li
101.559 87.0978 li
101.557 87.0754 li
cp
123.633 80.0412 mo
123.762 80.2751 123.903 80.5544 124.045 80.8678 cv
123.399 79.4469 122.472 78.1579 121.313 77.0846 cv
121.855 75.6476 122.397 74.2111 122.939 72.7741 cv
115.407 69.798 li
114.848 71.1828 114.289 72.568 113.729 73.9528 cv
111.688 73.8761 109.692 74.3327 107.922 75.2365 cv
108.573 74.9035 109.159 74.6784 109.62 74.5265 cv
108.642 73.3371 107.664 72.1471 106.686 70.9577 cv
100.351 76.0026 li
101.298 77.2111 102.246 78.4196 103.193 79.6276 cv
103.271 79.5031 li
102.771 80.3083 102.357 81.1857 102.053 82.1291 cv
101.873 82.6886 101.737 83.2521 101.643 83.8151 cv
101.699 83.4787 101.762 83.1759 101.825 82.9191 cv
100.298 83.1183 98.7705 83.3171 97.2432 83.5158 cv
98.1641 91.5622 li
99.6909 91.3991 101.218 91.236 102.745 91.0729 cv
102.616 90.8161 102.474 90.5055 102.334 90.1554 cv
103.38 92.758 105.343 94.9733 107.96 96.2941 cv
106.619 95.6296 105.658 94.8366 105.056 94.2648 cv
104.471 95.6896 103.887 97.1144 103.302 98.5392 cv
110.746 101.729 li
111.356 100.335 111.966 98.9406 112.576 97.5461 cv
114.328 97.654 116.052 97.3654 117.635 96.7384 cv
117.319 96.8639 117.027 96.9655 116.775 97.0436 cv
117.733 98.2502 118.69 99.4562 119.648 100.662 cv
126.068 95.7257 li
125.142 94.5011 124.215 93.277 123.288 92.0529 cv
123.282 92.0627 li
123.798 91.2428 124.223 90.3459 124.534 89.3805 cv
124.717 88.8112 124.855 88.238 124.949 87.6652 cv
124.921 87.84 124.891 88.0065 124.861 88.1545 cv
126.379 87.8976 127.898 87.6413 129.417 87.3849 cv
128.192 79.3791 li
126.672 79.5998 125.153 79.8205 123.633 80.0412 cv
cp
f
320.696 85.1203 mo
320.735 81.3376 317.69 78.2287 313.907 78.1896 cv
302.932 78.0763 li
299.149 78.0368 296.04 81.0827 296.001 84.8649 cv
296.001 84.8654 li
295.962 88.6476 299.008 91.757 302.79 91.7961 cv
313.766 91.9093 li
317.548 91.9484 320.657 88.903 320.696 85.1203 cv
cp
291.885 84.8224 mo
291.947 78.7707 296.922 73.8976 302.975 73.9601 cv
313.95 74.0734 li
320.002 74.1364 324.875 79.1105 324.813 85.1628 cv
324.75 91.215 319.775 96.0881 313.723 96.0251 cv
302.748 95.9118 li
296.695 95.8493 291.822 90.8747 291.885 84.8224 cv
cp
f
294.032 95.0822 mo
295.033 94.7336 295.88 94.3219 296.568 93.923 cv
295.378 93.0871 294.363 92.0212 293.584 90.7917 cv
292.538 91.3024 291.325 91.6774 290.319 91.6672 cv
280.24 91.5627 li
279.344 91.5534 li
277.925 91.5387 276.61 91.0924 275.522 90.341 cv
273.71 89.0881 272.53 86.987 272.555 84.6227 cv
272.594 80.84 275.702 77.7946 279.485 77.8337 cv
282.089 77.8605 li
286.271 77.904 li
290.461 77.9469 li
290.671 77.9494 290.878 77.9645 291.083 77.985 cv
291.225 78.0002 li
291.421 78.0241 291.616 78.0553 291.808 78.0959 cv
291.922 78.1227 li
292.083 78.1603 292.243 78.2033 292.399 78.2516 cv
292.545 78.2961 li
292.719 78.3537 292.89 78.4186 293.057 78.4899 cv
293.222 78.5636 li
293.358 78.6256 293.492 78.6921 293.624 78.7629 cv
293.748 78.8278 li
295.031 79.5514 296.053 80.6774 296.655 82.029 cv
296.751 82.2458 296.837 82.4679 296.912 82.6955 cv
296.913 82.6999 li
296.982 82.9132 297.04 83.1315 297.089 83.3527 cv
297.104 83.4113 li
297.146 83.6139 297.176 83.8205 297.2 84.0285 cv
297.217 84.1418 li
297.24 84.383 297.252 84.6276 297.25 84.8756 cv
297.25 84.8781 li
297.25 84.8786 li
297.248 85.0451 297.232 85.2082 297.219 85.3713 cv
297.139 86.1706 296.899 87.0343 296.596 87.7277 cv
296.788 88.1877 297.126 88.8488 297.717 89.5138 cv
298.373 90.2536 299.068 90.6901 299.531 90.9328 cv
300.148 89.9401 301.132 88.0627 301.328 85.6623 cv
301.33 85.6628 li
301.332 85.6169 li
301.35 85.3888 301.363 85.1574 301.366 84.9206 cv
301.368 84.673 301.359 84.4279 301.346 84.1838 cv
301.334 83.9997 li
301.317 83.7716 301.295 83.5456 301.265 83.3214 cv
301.26 83.278 li
301.226 83.0343 301.182 82.7941 301.132 82.5563 cv
301.102 82.4191 li
301.051 82.1921 300.994 81.9674 300.93 81.7458 cv
300.923 81.7184 li
300.852 81.4767 300.771 81.2389 300.685 81.0041 cv
300.658 80.9357 li
300.57 80.7048 300.477 80.4767 300.374 80.2531 cv
300.266 80.0173 300.149 79.7858 300.025 79.5588 cv
300.021 79.5519 li
299.087 77.8459 297.712 76.4128 296.049 75.4079 cv
296.027 75.3947 li
295.577 75.1242 295.107 74.8854 294.619 74.6808 cv
294.543 74.6501 li
294.311 74.5544 294.074 74.4655 293.834 74.3859 cv
293.813 74.3786 li
293.573 74.2995 293.329 74.2301 293.082 74.1676 cv
292.946 74.1344 li
292.71 74.0783 292.472 74.0275 292.229 73.986 cv
292.196 73.9801 li
291.949 73.9391 291.699 73.9084 291.447 73.8844 cv
291.271 73.8688 li
291.017 73.8488 290.762 73.8341 290.503 73.8312 cv
284.693 73.7712 li
282.308 73.7467 li
279.527 73.7179 li
278.582 73.7082 277.663 73.8185 276.784 74.0358 cv
272.041 75.2067 268.491 79.4738 268.438 84.5802 cv
268.386 89.6867 271.847 94.026 276.564 95.2951 cv
277.438 95.5299 278.355 95.6598 279.301 95.6696 cv
279.745 95.674 li
290.276 95.7829 li
291.437 95.7951 292.761 95.5241 294.032 95.0822 cv
cp
f
184.82 228.989 mo
125.789 228.989 li
125.789 202.351 li
126.789 202.351 li
126.789 227.989 li
184.82 227.989 li
184.82 228.989 li
cp
.67451 .85098 .898039 rgb
f
194.802 172.717 mo
193.802 172.717 li
193.802 167.164 li
162.496 167.164 li
162.496 138.534 li
118.331 138.534 li
118.331 110.93 li
119.331 110.93 li
119.331 137.534 li
163.496 137.534 li
163.496 166.164 li
194.802 166.164 li
194.802 172.717 li
cp
f
214.36 175.845 mo
213.36 175.845 li
213.36 158.18 li
214.36 158.18 li
214.36 175.845 li
cp
f
271.904 175.845 mo
270.904 175.845 li
270.904 121.897 li
292.125 121.897 li
292.125 110.43 li
297.774 110.43 li
297.774 100.721 li
298.774 100.721 li
298.774 111.43 li
293.125 111.43 li
293.125 122.897 li
271.904 122.897 li
271.904 175.845 li
cp
f
385.557 200.684 mo
377.464 200.684 li
377.464 199.684 li
384.557 199.684 li
384.557 163.958 li
362.964 163.958 li
362.964 162.958 li
385.557 162.958 li
385.557 200.684 li
cp
f
410.664 210.184 mo
379.355 210.184 li
379.355 209.184 li
409.664 209.184 li
409.664 149.684 li
410.664 149.684 li
410.664 210.184 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.1.0
%%For: (Fibie) ()
%%Title: (21091.eps)
%%CreationDate: 9/21/2017 1:40 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6ql_!]FXHlF!WEU`!<bs"gNPF0&_b&&p%2o@fn*b\>&Xuj1n0dkmNrlhG'c&qrLWI>-R(@IlFqL]CMfK)/6:T*bfG%!3,tNs
%rp4:0pHQ=fqX(mZmb[uI?Z)ac(HKu>nn%D]E;nsWTDe,k^&?cVmk7Hd2`^%VcFaJS_WcjMYCH?@c+B%OrUBgZS+",L^]3HpL[T`'
%g&L<e]?P8#rDA#h[J@_0Dn^MsYFF?,Y?q6e>dOB/qWd_HRl@8>+230rEKb;f(5B#;n_\aJ=%NSjcLUPVYJ-9rhnT!^;-G5fj7JuB
%m]UfW>G@BBIf9jb(@Ssg.=YKpQd7(Pl,utpIO;]TI/b;'5W.;'A\IL"hgG1`_lJi:hnP?orGprZppp=43P>0c=$M*(;;8FFc]YIR
%J$D9Ss2X8?^-g$:]IHQ!*082OrQE_gd#Th"rlq?HI`$BE$(Imfq<`)2\;/ZLo!F6FIeIr9]=7l6Ia1DlFT;'Z\)2W*lJii/WR'NM
%D8(fPh,Kfao=t/K1.sb.$^]"1baU7XnNmMN>U08jV;-`;B@!CCk/XrLrq2VIs7YU*f5Ek*N,Lq.r;GCM/MdbI$9iS>_Jd3diL;bJ
%rpJUsO"uHXAPHh!2t+M1o8WBfY2f0!/(25-bP^8CptJjlrqPWN;"4@#I__cWE`8n8gL(!MmB9mqkmb__gJ.\0]/T3XpAKJRCVL,u
%DSGU=B$3)-`l"'@2U/'^HVQbq?VYC?)\o'8IY1NPA\StkrL4=9s7l<D0>Ao5GtQ@QqQE)qrHb@)i\sm;@pa-=inaIcROeR1n`-*_
%I8HI6CB'dBg6cc,o6\*ihu<3Xhu;ZJ=)TgD^</]W.N5^A,OIM(qY3[;_>@DHRf:oNpSX'j^6`1SH%geKF2n6^iW&kjQXXXt5CO%B
%^P8DrSkcq'0?Y62$-1-^+/e4ZdrIXCHDRb&SCVXSP8>lj%B$Uge*mhHj0\b+VsX5gFMGjLq`W4bSabt0PVXsWST)I1U_da?[E7,H
%]r1je9De1R7"!oLoF(]Z2"[jC<e!K7n3>2aVslqJhM4HO7_eFWr^*OP5H</Jd]1\Dr6N+;$]<=bgf;Bo>Cb2L2>iMV:+);!=^pE6
%Uie52W:7Q.WkI!oB_/WSH@Iie:K9VJ?T8LC`;cc.-W5;o^Y-Qa$Vj&2qb6>&kf)a1rl8C0T[El?\&P0Ks5Ps.&c_0-._4d$C(#",
%:((lcVkcM!g-cs.S>Lqja$tEZ*FRp8BmOEo]2+ofdU+s=*UGV?%e=Z-\c.OOid[Jq[#R?8\ELp,+6T;LEd=SR^63U5oH$WhSX_dh
%FLkuBQ"6+-qBG0FX.ulce$7Ldleo&<I:@O&[.u\`hd<G9$M8Oj=lXXu.V7r$lMtW6-bbh0kLHcfaQ7jCcKhPBf";KWdearM.?TtC
%eC7S!4PP:ckLi+iqJc#rGt<7&H^">t[:6i!\VVte)QRuRnm6g75P5bdr]Pbr9.j"3Mrmf`Q(icSTDGQfs/pM"^"R86eXtu"II24S
%p\_!D\bpEnUA7_pa.rVsJ*Lef0B;Yk6i=.ZX+0lYoFlZFE?CD!nTa,m>lNAKQCk\b'/0;Un"/mL45YA[K22C>I/2=@54Y?:hORpn
%%eJo-pNnO3q+nQuP8aH7N-sGm2ufFS]i)Qa'aPuVkOsSX3.+frF?Z)eqcOlQR$<AShRR%3+hM\!#O0eLh<H58o#d)G&E7_mJl7e[
%F8//,E)CfL7_-2)Ed_0FNgFO`HHI)^B44i%SbN$<dU;<KJ!9"L0`$uC&Oo#H_QMCAZM@C_D,32bp_u<Z@>[+/\S.[;K(j==RA]e-
%q*s[0n!H[n48dVH#QF1'3;P"Of=s<68iS@O8hMO0R'?TPrUub@s+I(milKl)4lUK&W+Wd?/XKsh#C/H,o,78roU&:;44.^*im2Z@
%:J,d0c7],U3,oHSet;$krVm+PSr`fU/_HWS2QZf?I<U0aG4?:2iZ<CA;^SYVX%]EirNsb?G5&&6GHNofpl_Ygop4##U]nq=-l@Y&
%41fb(d##-YFNV&Z$1km6;CZLi*^B^R.$ZscmcQo)?S[P6p#l$ZPB?Klq<ebuU(eDPn2g2uqo#o!msb;9NuL-JQ4kOuW[^=9eSemG
%F:Yt\[^jrm[$@Z"XDWBZ1,AkYC0(-:kC&;FI='%u_;(5C;8V.O?k]I+dhXK6#'ACS%pf-9WZbu<]N#u%GiS8+r.-6i2HAi>3cQnt
%KaT,W3:9lHY2!:uK(]m@jja*`;+&fQ]RH$X?R(GT5'7iY9GWfDoaLrFJlW"OL2ETL'q]p2_CkIYoNm=&/T(QBh/646Xc0>Gmq3G\
%%c1[6/c2O]acYLJJJFmYIV*]5IsO.U-l8>O_F@l#16;@NBE%Gfih9=1:D?iQh/,_*=Md*ckfV]U8$kQ2%eDn3cGjqWXV9I<4SH6c
%p#fg$gte2`g4iA'&U"iLC>/tMpZf\>.YIY(3Tf(n2CgZ#E1lXaq_7hn6Jq1Vq[=&4H^APW4#;&R'Q'=h2#_r17CoR@[:$W?YU-+t
%5H@rQcDt2A(P?!H(Zh2]j-jZR^gY,]$0T\W]jD?8<Kb1<lb$SMa+q%</n_BZ=g&o-muJS.233ntCVO7'e]iZY]M_m>1<\(UA&7#7
%Cg12JMhY^AP"aG]a3a`oAplg^l"mYCXbJ&sq?Ym$W8i<>?X4/T63jXA!@dD5I=Ka1]3[6uVn)C3<IuV_E64Vk(oukPES\(<UT\fV
%'pMkEBf8$-d@Ra$nu+QUNVr`;Q8?6ZZg@MYXLfE8[CX!&[`[)Vn'Au&<U8AOE;06$c@pTuVkS*UeP*d7_;KM!O2I"*GId$DUrjV!
%DIFqZ2XM*iI/qOLndbKld#C9#cF0CTDCt)N>qXpHibrf`l6t;]8Z@2RK!@%F/$c_aIFkoUO8ck$fb`C#Qn.q*XU0Kg^Xb5P=#Q<R
%\$T]$>a*\pWU>Q,2&iTR?%V:?(RI#*;O)X/K\jtBmU*3-^>lj=Q_4&4.h9fh,LsD`_X9Gec(jG=,[J&U\d*)NBOhIBp2\hg/t&8I
%gk5=`D>aCQhn.b6UN`2gri,:80^$rBN5k'lFVY-)"]%LhlY>!`nJ*@[*.gJ-P?Rjt>jn4dW#BcgYj^lS!uCFW^>C8l)%S@"kDRQT
%(4B8@_VF:N!0>fnS2)>NXr=P5Qh%^!9C'TjjniS\F3>U_EOW**>KqTP\5UlQ[m#B,MK?5_qo31'hpe"VE%VseIV1-eo(c;1h#MOl
%GLo$Fbj#6#]R4pS]I\B=QsV/eCGRZZBr>6C[P6_0oK,PfT<?>jf(c/2Goq=ZXRi+T4-^LlC#Z-Dh,jR?n(!<5jaDWZW`Kt<QLg\$
%24YK05(3Xsb9(l#MFJsN[*F)+RalMJnp=VK3raV^gSh>3]5TT_6ok8aJZ'LlBKe*H]WCubIG[1;![-U1YSt(.YaOjh=[hSJZR)@R
%40M_,`BHKp014"98/Q6qm/+GoePb,#m&]XP5L5%I#L>M6@q=IK7-0).%u(fP9e_oCg/Uo&J(DRqMlZ$u\`2bn32cXDkce.F%iBl6
%D+qJ]&O/mbSTWc.H!cR3\T;%.RXVRk?/+jqCuGO`Y5-=JHMm_ggdCqpn'cVU)1&2hEV%2X;M\gR',p=8dpCmd7st%)?8''6MQZg;
%lG$huGej4AU:E>U1TLS8hO\3'e_d@A[csJOVrZsSa1apWd$6sY,`huqH%&rTI?n,GaW2ELcS%L)1N^=64fV4@Q"AK'ebN\^D7b;I
%>:sj+IFu,ZPW(c.ra)4_r3S\\q:QGX@/b=8"V5c/kiPid&TbR])S3Ml5F&kl3-L(4IEL[F2/9sV$WaMrZ"/@4).0i;.IjbUAf!pN
%CO*)K?4[W:d<\AZqiZ/MC&T,ko_lG4pNf&RY2?'t3]Iq8*[)H'qYo.*5[Ars%su=20.seh-KO`EaCDiTM0KE]-t+Z#Hk-o*Y49(n
%#R[2?nkuJqhpM?cj3,d?dBN(Dq`ENY?!c4kj*Z]2HK4H@S,;'#=h*j>-&p*Y<t6@$`Y&*G$"i`CS'R?-Po=$R]$9I7Yf8nEhU`tK
%e]Xjqb*]glDtZ>7cKENUp-%9P(bcFG:YE`Op9ug]jjT$/XGt9hYU^X%FiE02",Q`gKIaZjQWq?in,DC%$2^KFar]nF.87W\GcU5k
%QHr@'q<J`6j`4c4jYdUQ=RfW"f(T>&`'FD?Q]__E&,/et51PNADYXR;qVu(pLj@u$9/]G3^U?EZ5491(Cn%s0.<_":7cVW\;DKP5
%(DHB>NjXId[YO6V7cM74IirO:V=3S9AdQ3B`n[YLL7-@pI7""([tr5bm;aG-_tL<!aVag?EEfl,l=CAFgN^@Q.P*,Oh!#sHj)3*3
%p?[2kFk][_EMdpci7BUCb/a-H[q\1;n?,=@+*7?.L37.dYJ8c(3:2oJ$V%6mhN#S.qmP/)AnFMHBC']^kI6Ak'@O!XqB\;B4!!aX
%]Xo-_=IL$ilK-$`X7%;/m?+#A`f\:fjfmIP_b,de?`u4G.ckNfk`!7MR:"1BOKT5#&FWKY\8lm;X2j&*KWjqAM#NZf8_^62QCma)
%Dk4Q&DuG>!bF`TQl>lV7)0RUnD)hr;VLuV>caSAM610Y5H4NWg,!L#ZhdpW:QOY(N^LI]GFar1*H/nM+5Od.Ed.l_KFakfdN'gdS
%l`l#1KGW8+I75@Ro2#IP)FCb&I[K$Jj&Q<QaIW=h6Pm!KUiUC&@TW)&[I;iH`ZP(*hPKS8KqO0'E*LKZ96C4H%<Lu>.`$.L57V#H
%fQXQT:YX\IRp*=cKag(&fa&/HTFEZD#A#Ng-'Jg$<r7Ib%MecC')Arm@o)8@BdeY@3C'NNHVgW'/IQqiFD&@YpW!]2bWp20n',NP
%qcdq2NsdG91DO:;epZG"V/Dmlc4j?cmWS-$SUIcXP;W9kpNL*UK-7<n_f7Af_%e)W#56E2^MT<IRlm6XgDFa)#>W#eec/9c;"*09
%T25De69(`db*edsj5:"6DDZmXqh=gO[gbYa56'2r=n'/>M0*pGfHO@*6JA>i#lY<Pnq;eDqo)1Bjd03(`I\Hn8CZ1=@%Vk:+<d]'
%Apmt/meQV5@4`CgrG5FuQAE]EdujV_"GEC8r<G.J1e;SVYL`_orWtt;,VWd8#I@NSVXVo]X,*/>Dr"lGIepm6K:4p(kOO+d2g1_A
%Npo"lJ,=Q,[[r4m0Ycq&`>R(u1H(osj!CTbPP)HjAh3E5a`2.tJ@@cI;isC(A,dqM%_,Xm=NpJ4!P2"4Z_&"B_:&+*BajF`7(duc
%R/tBfJ<6t,DYA>ug!!pAnU/SgMM6[J(1P*s-K$SI5/R;"o?ZukF++YI55<rhmP,NGB[GB.P5SHlM00BP=u>G]W_\I,D:Ph"D26X%
%HNTNdIiIk:W$:lW+!hKS1[bkK'\LL1["e8NFJXr5!SYc;@rYb#PJ9u4iocSJY$\>Le-GJnLTub-DA1.#M$WOY=9m+MY5M;@jtKGe
%j]E!MQG^U(eWG1(WAUPl]aLIl9RIPT9^3j&4^-``'^3lmT]b=r>A$")e%rNB.CJKQcDU0Ca7c'9Nh^FM-bRt<U>Lsqm&/sC;W'9H
%rCP(7RXa^g[`[o#h>R_'psUVY9&C_t\h?8Ic+kZR;?q*'D&t]Z:E91[_jB9+pM\ZZSrqLY\'+\Pmlnbm]UZ=45NVj1EOgJmg%!nM
%JBG:'qtJtLi#"_i$D[LQ&+@8Ys$us/re%uarlrJ*^3cjK^b#9GYM[M,Dr1SqpZ7=Jf&,ao^]!:"q=1XP]`6s&?bQ?7pFfnOI/EU6
%IseTup"O\/2YuHg^]%^6o.P`c^'lIS]AtV4G4P@tQLZHm/7hC:948!Ec*+j1o4j$7^3TDF]3j?7kMQ<_RuacQq+:>3.R*+bs8C4.
%O7,<GrSMP-hYbV_r_N?Bp\)f-3.9gn-qeU<.).-jh`(C!/G=^c09#Zf8U9S1Q+G$7*n%RI2m5F;=cmLqBE*A#onPL+,Qfc&n7A!"
%[Kl1Le(hCmd#i"4OO)]P5&Ra1j1?DjI.R>!gg@+18-=><c)Z&l4tJ&Re*m=/jC0"^&hYV!-pVDfG*88Z;tQ^Cc=k:gO+72&2S](W
%rHC"iDh#E%&GMd#put)RHM-g#2nO"b]_hR&ViQigH6Gc^T;eHD!Vj&Z8al;E2>O.gs7-%HDnl<q?AWAZmVG1Z#s<Q=/^nC=<[D+`
%2E$JIiO!1/-K,3=RF`9kom-i=(p,>`(uSI;5/)IDc(!Vjl2-N[*^kVW=5SDsp5^;%IJ;'+?Z1*0Ie`o72h1`(rAW%VhL7b0S`mqB
%Da`V'I9p/+8>B;bOf!D+$R]]B?8`V%I3:7mI.Q=Qhn2mfHH)QQ0Jg5oHSiugIRe=b+$OFlrhFXJ>kPb:B3S+#[K=.NPSJZ8`pJ0@
%2(@k('<Y9PK#.!GU2@`DUE/WI.<`.34Z8_$F<9SPP>]$Knh789[S/X#YMY42F3A0@k;g<Wf2j0+rVGnGhQn_@UAsKF]<>d>IfI=?
%O)IugF6he@IFks%d&eTH34!Vf&k9@nMLRk"+FPR,ohp8<ietDpCDSqAGKWqalGK[+hhpe"bK\B5mbPKVhhlOO7k<<'Bp.4U0AfHm
%[+Tm+o#3i+I.:QN^//qG.8FS,;k(5EIQC4Ok8eA6`?G'Pi(i,0q]0iShu)%Ir$aU6FA_m;6DI!D(oQQu"<UPnZ,L#(a(%4d+X!VO
%C>,Oj3[UZ"acPK?41XHihWI6ik#7\*/&&rb8d78&Bai<I+PWP/bGe6qWX1Q6<3mQu8F`g"!EWP#ocV;;a/PZ!FJVRhS*(qhCiLHZ
%jboE?8%,2^W:q?7?;ff>^Rh.=ZZ]!$p\4&Pa6+@*f=3s's.26.':ogP>\,i7aB.0T/6/#!f'URb-K-VoVnl_`_I8I5&fq_U0IGbY
%ZLGaA>UGu8".q;#ZP>*6LrV=Q59WHXDF0XG36f9aN@21I"sb1dP2g@c^<!q3GDu-DpW0d=rmNl(,t$>-@@W-3Gs+p`8/&Os6X1.s
%Hij,-*f3BN43H52^\TX%ooL*$pDgfc*E(p/l.pQnB?I&?HsV;np[n/h0g8Lqq2"\gIF9:g1M5_I,<Y%K)BX&B.H3XK;9q$>Ii1,8
%EKkDcV(B1!bY(o5a\orUN]gW2_FqQ2P!i%hF;pTm,SH#nU,g/.]];>7`@YVd-CeUB:,38b!m*kkafb4HO\r!l6giqV`s(?c+(pTg
%Esl;&UXT%VRPR'He_d_40=em2^@,@Tf#B6+psrGl^='15KY)P(o)\j&30(HiPTGn*^":=(Q=G.%+e4rVqQQ_XjH(9%FPao<WmpeL
%#5fR@`YD!h`n)GMFEVn$8AVf>(;<h&Ya\0U45k(OooR)MJR$%11Pt@0)HeaX#:4"qS;o@g*1<8KDWk\-1c,%0\HtoJ9Do9^'*PM;
%O6WH+"HFil:H72V*7'i/AM3-tH(Jt<1q(J?V8a:)gLZBu-skMeX?!FdXDqPA3'm?I3"@f'C2"?hZ_4n^O>=:-%QmKG[bd$X7pfa(
%FjOVWN?dA+q1>5a*,T[H?cV95G@sF5O-_NpRBIUtQ=G.%+ZtW:q@>UsmNKWo(CrUr&0?-gN=S5I5>mK3URY)W_eCKO>#+;r:@<?f
%*e]WD/;/*R7s?p5%YpU:F$8SO4F!Nomgh2NLagITRrc3*d,&)BZ0c(?'j?S`\Sa>\>^e%W?A77"d!jWYm3Jal+N1[aVI*m,6s2s]
%:%]cICX6;"ES!t@Dm?c4m[Qf8EEhiY794;h'c^a1]/#3oEtk$Sc_[o^)5kX*cD!CWLa99e(E$mYdQs"O%Vbt6L%'tjBNpHh]SOLZ
%<s2-Kn.];7Bo48uNZqUHK\o=U\9JrQ&6K/eQ4$(b")j>\MJag.:AE?RA/Ibm45)qUC/>E)]J9m&&;>lr/b#XuHr1u9.MA?n,3q61
%A@;ETK6^:fA*U>.@qS;E2.esSLaNAHb8:*#j%,(Q/rm.sc<kHQUdf`,Q\RZYEZFO1AG:?$o&k#/m&h@,j+GX`d#/,K;WEDUrJsl%
%J1<a(Pg:?21Iq8b;4a]*cQ)%&8,:A+5')tOX3in!h#-N>h1q=MVStdOs#p>$IurY/jH"u&OY:T%;j8qthAZ26U`R3s\d:s)=2+H(
%Rc*a+ID::-ib)U];g#_@V4AS$*]D-r9Z#K&*R9Q>RG$ESU$A*YDmE#UFo(oPrL+pQ,bI#E\d?*9eMZO)okU@Se*9=:i)ccu>M)6&
%*-c]bJ\*4s^`f-h/><G_;e=j-eE2a#PW89A`EjbccLJ-Zd7]-EB?-EcE(MDrCW3g<#n[=6>papRF+5#YOuh$^hp4jA.:'k=]8jdq
%'^?At6eV88Wg_Z&>/'Rh.SW)sI@+QpKiei92,1gE98p9Pp*tE&5j_MCZ3ah4+s\4IMQ[b;0&-,*FnR^W[D1$LHI&f\>eId9V#5%[
%cieaYaHC],7@qT_`&c>#jinZ<Z`])fGep2VDXd)*'(QaqUb^_;mCIl_I%Lo2[RtXFD9[1'JMnEWZ]t]?U,+:I5RTNuJH7SKTe[h%
%m6lUhDC:lZZ\Wh[m9W2oPO&BK,cb[7eDosBnjsNMYqR2E%t"eJ>f&e\GUOb8mc6>I:>Gfc1"-3:'`mrG4Gg]a6jCiq'DfKd\bpR8
%Mk]RE^-:0D\]2CC)UDYnl8F]F0NE-5n/T$c)<M1L'=j)\#5df'J]NJ6"oUke+,#9)!jM'c3D`Q9:ku)#OXi;12Bb=uZ4J%!XB3!a
%GNN.CG,PW1Lh]t;W/gBs56:q2$k5U4TVMLNKO6Us=)]cdjB/[!\u'Z[s-(/QkV"]]YBB#j3K;tQhT9c5"pI.#r`jEGK.+*GqI!^(
%AYhO&Iu>_hg[:LB?8bXoK:W=WM)PY>Zps"oEknTC%pSn3e/&:N#!D@iDb#8?2M1%IaKmqK'kL9r1E&m;Oa<jOl4M:5NUPeqqA6o[
%HstpeZ!KTI3:q.^EG`aI#&-$@s!9ND=h6dl<t;r>e+p74lQl'"h.Nh751_&5C<(<sj.45m>3^K+N=S#70umXENV>K_h5#UPe$'R?
%nQ*^)qHHp*,rLGQ0-4Ql3PT8[JH]L_Dd<5/l"Z!*ks!q6J*loA%O%4[YE)*2)hA+i.)t:_s'KNB;`d'ag];TrgtClil>a<rUrEK=
%3U]"0Mu9[;i[bO[\7?]Ue9f4Z2*RN^>e,WZc4<bT0?S/sT"U-0hs5c92?"O#g\G+7dqcU5a]u)#99%P>c.@tpcXD0Ve/09MV#(Y$
%n_S?T4S&:k2-uM1mJ'rHA$:9'=4qca.bgO_jPI(FAU`r5:H=<lYbS8#M"[!"U%3;j*C[;cX%XOF#cU8FX@Q^\-p,dUG.45?h.3je
%bhQ`NPgN2PLIhAFh.3*pZAEJ)gRMf\M[W?9h]65\?_"[Jc5gHO4dLkMD!`.QE/TPg3kNA^:9eREZ!tba)f4I5P8Z+1?aJeY2FlAe
%1M_9_Z1TfKe+T*&XUhE$XQ4\\o[T^A4)!FKZm/pBUrHVfq:+FX\]-G'r#SX24_<_4,*j:LMaLjtUA5&H#&$6R*O`h)as#0ti.UCr
%g)2Tob'+J+2e>Rjr?T&=@#k)p/&H^t/3L\"X+'1rNBAVY_qpm+r^`scY.O(.^*#XtK-QrN^-@teJ%OW4k/M$>s(%i!#7IQhRQFmO
%eB8X:),>8U"YNYb*"+k:>\eNPDjd/qgoE+C3=TVNi3INN8uj^dF8UZg*BIQ6!.ZZ3>I.!+An`MkQ'1Yu4k*+X&r:Nk4`&;RW.9U1
%k]*h:5E=PZ7]`oXSI.=*%+Jk6;-=n7lptd0`QLTZcOYNkiU/_IYoe:RZep,BI.=H4lo<jO8<"->lS6FeEfDSE"7mG@NJJpuEF9cg
%Z:Hc3&'-eNPGQ7CXF&b]W:iQc+i;q]MtH*=ZV5s<&].RcR'^NJc/,EXclG-5g.!SQ(i6$.&p]mK;%[]J><B8jRMnSo_P%P7#P'pg
%1iQc0H'd1>eT,mk*+'JrE5P(jXr\LuhZ\d\F#K6&mUXA.$?-i;h,GZ1r@2ep]/Z+u"m[//FV[h\*g@,_fb(D-iTfAT&#ms?fAC^E
%%lq)\NdLSrIs^*n]^Lq#mlfjZj)BH<N>H/%4$M9kR,]o063"`NQ(*LjDT(SVeihD8msRh;+3;1SMiXS4+?h0>.UOh2.%XPc,+'aT
%o/Id?q2%ISr%1/S;SGFIkK&57mc)l*r4O+^qh9f<Ok2E"pisgQec._CAsILLs/ur]NPD8Y/_*!ordG^9X2!k?G3*/;b:HlTrdsNd
%DV1gAXn>nqr>c>p`Oc^%`Jm;n&@N_nX/mq?d&EqKHDB:=;,2lJ$n6UCG(V]KF4q'OQU<7kiO)6fn1K2Xm`%sNj_W)j,#o^57mhHS
%]F5Yq@C&JW;R_m+$`2AR#r4cphhc5XW6K\:glKt8TpljQS5(7Vm&Bq!#>AA5EC5%**J+P]Bi<L"mLK>FH0fH4Y3qbe6$t1?Sr)QA
%a!E9%\N!W!3^[j=L%S)YrI-KW`:+qSWNF"<i!Y>+]O:GkL#3o`-D&=6Me<aNA:`S`U4J*G!npO3$ZpW_:ppqV6l7[fCcd;('u.?,
%'hm!>_UWX^;EGPZ\o=Ghcli3A6ls"&&\=aELLqUlg4qW1dIIr1V+G>:RV$+4kuM],B=QAe"W.hcS-VRqRh35sH"VdaD5BC/eU`9F
%'88bK3;^XU-:NFAash]%pCY59Q=K.s"H[0$MMrKZs#V+EK=^hhXIY;t5bbC)LH=[b\Uli5:2imBn5DC0b?2[EVh4l*)jb?no4pV\
%RdPN:C5BquJ8.X-eVa9^TXR@Gg_20bLqVq[aP9fhaV/jF8ZqQ:om#/8-Nr@m*\Z8g'NT6+eFAA14ajfQ,u2cn`9BEh+O>kdq-;s^
%0BI$IeZl__.@:>m27@L<>VV4-!t-<6,E3q>)&^)$\T@\ddb3htmC0Tjo4,ioGJ$TZ3^:p\\ArSAR9_fgZJ),hG"mFspUD\K53^E4
%48Te:#E-C9D.[Ee'"(fX>$:TV>6B6uHXX[(SV4G^Vjrs44sV\.:T:3&(a(X_1<i,YM^m.KUm5q/U(F,f6n@7B]A?;+%^ct)lt#r'
%<2_>/(7>(sP[!hq"KH:nG^7F`8+TJTat>,ri(,=&.b3f_aP<aXr;fD,&%6(]:CKgM_nqO8YZL60Erl(h>Pq+?+G$.UWr-,^^[iA!
%`o@BJfOK<oLu$RZSV(V`cJ2B]&0]^L6FMj4,Z'<9E?]f=E$:A#0*Mb]E24Q"l0&2<UWbgXg0S=)UIB9Z&_!`1C]dAJ623=UF[A;@
%N9X@ZOb5qIiE/FOPlW5;V]kP/-A!X?$Qquo;<i/d$DXt,E01;(gN3Xq'PA8Z"[LH8<Z<Br))-(@PjDgVcJTpe/>4:W4B2[/"`36G
%GiX$fW%i82!`@?Foeq7kNQ:-h,456r(IqRIEIEYA)m:6*,8K$k"",tOJ+]u3SoU3)qi$<]37cDY:tF=c]^54EZP\rr"Q<jB_<s98
%g3C<-O6.S2q>+@VJ$^+al<E@VdVM/$RaYY_qoXI4<&dR1[MT<`=TeNKW!Z]dAH.K%HdQ=X1bti(/bcc7X^rC6d9SUm%GHEo/J<_G
%r!;q8G0Kd+rAE>7dQ$eW8j?Xr=J.U]E@b8[lulMU67q_Xc@'jd`FJ!o4nlXm9gP+Ph<sg(?^E+;FQ#U4gomn%[TQ4^QR8nOL9Z24
%h-A6!CtHpNf8n[GH/ju)mm$-,U%$Xn(;o,F%b*K8>$%+FHcpeV,PM?s;Dk-$]g:1D$OLMR0aUpYe@kq)%L/,fLMX>PQZPS98nUEB
%HNIal,$X,gM#c39Nh&k$;.JA3U_]4mY+++M8I^Zfl.oBPM5E0ngK70eC2BBaD2J8;DK9OJ[WfXYG+]b!U*j!dDr./<FFk0#EL@$N
%rp47i!:OTegREs8MXZJULH*dOf/%X/@?*1r-(=0Uc$"f<]1V\NS@t\8?`g]MNm$2u%2fsfG8c$?SO%B&d)/9"3:]%@N68J#*N@FS
%_:<O[:j8s'@I9WM(5_j0CYm;nHcL!D:R$Vif$DM5hN@@]II?:4p.Gq.q9u1[fr';DGCILaIZ$.3kp>.=NhnSDHnEm"V,Y-o^L]Q"
%NHlLXFfZHs3'5E.K:t4pNW&`rI^IRhj*9ZF/.^\XrVN^1LM_7UYrt=I`c]BNJ_NBhWr.DbX4N@XYe`<i;\!kf4QCu2cTL]M<a`@Y
%AA33PNX&_'Sh>d"*sre_I<Jle767-N1pXnmjR5Z@gK%?&3-QJNk+:8`:AAWP2l/=K\77LqBCtK#aZi^@6S$X>BEQKN?j=UoCBUqh
%13`A%<lPk%H8N<)$8X=0@(snJ#2JQ6[.Oi!<%J)j&S\q9ZX1RP&)4*?]BXs-].I<3L$lONN]K5b%Wos0A>m*#e/d`9ME="WZg#?A
%o8,>,OMsq2H)gKI8NiZ\&gGpD`GgXYiEBS4@31;,FqqCD3U0Mo<u!`t!_ae20.QjOlPqBEf+:W-.VjgO3.n.([-O@Lkjn_QT1b'f
%Jk?G=7EpQKf<L#W6PicCFXUt9DCVHVjXp!a>O(r`5q0Zj/B2S1,aP\]'DD&Z2-MK0EA5:A0nj[,?-[;Tr1%N5XRS8b$[g9C.3AE(
%%'#3MU0lK\7A'[Pk/h'Mmoj.kIZ/VTfN>6kb<j6s^>g89f!4%DFf/*?7VD/8l;&5hTD.@3%_XN^r*ZNgd18;F$e0,F`iG2SgMkSe
%%D?MMplmC4^f,!q2<\P?4FrlIWue=\+iYh6L=2X4@jOjCq5`FL:TNZXCGK.UoEosi;d?EGTqJ?)Or$t!qlYHGjd6HK-!4tL0bn/1
%$@sPd6a5tj#0@j]Pu=aNf_9=_:N5Wkkg]!n`b"7tNBPKfSZ5L_7c_TFd@d6;lI,u-nrj52.7.EN,([4VVu:Q77We^FI).CYCG%k7
%L&3,_]T\>_B[Do&rgN>_8=/4"2YbG>4a8?Eiujkf0j"aPAn'2o3qispZ2IVMb9=Ut)\.&WB_CYP6@)qBeFN$hg97+:1F(Hej68?I
%4q0<A)r):m_6i.>X1YZJ<nJlLCqq=i>d/>d=O7#i@.PW/CX2Qm6Y8E>*3M;#X(Pl6$n=6@1_g/5\fb3i?k;bl=l3s*+A5/9PNCMB
%&$S+(-jGiJ3^UZA;(tQ!M@Jcg`W!3Pr`hW4X`V2$b89"&1Mf6inL;B0UUHa-XZU"p;Ul@I7B=]>T8M-ro.#!"%\6c.:7[)5h%hal
%N,J^(S],B_>E<mH0h6i:r%J(R7#P:koo<OU.'MW,(l<G%Z+K$u7(c'MqfD/LG4>IO1dr+t*$U_#hGZS#qMotAkt5+bD$uJCcrh:-
%_H]2KN8q,K;0q4[&hZ%8Ce+>.I<44.B!%V@$%&u\1s:$\Ok/p6&4BM,eVAd6.,&Go)sXZ%0'oODU^i9>('QP8rldZna5]$o86CAA
%PRUlVhH,os&K$uL]%.Wh9WL+hoC>coqNT/tk7F%,,cXGQ>M=eVd%k:)OQ8e;A^=[N-l82<`tN4P\rTOC@h#^*?o>HW@r\Rn:Sgs$
%_ole62qX6o)UPD6db>@6Dp-SiR!T8PU*=>+afVCuqQHi*T5aU)V7h7VfZTBLQMT4c;tUGNZe!V.4P&67;HHe6Xm`,&g*$hfgG7Gg
%e_/I.V)k(LGOUH8qAcSY$.pOslsYp4fl]#f>h]kId@[d)!J-H+^\-(LekaKSJKE"4m[_Xp\YhrIC=Mg2HYIl>mAYI2\F$+g[Tbta
%n,2ESgH'B#YdH);G22)6UZ3euMeA(,i`B@*InP&;)Gih)aBZ'i[AFP4Ou&)dBYOAO5.q4+3b,6,%Wl""hfgZ%J@o0c)Eh]!f91;h
%lIjVo6OI<!DPs5ED5^C]9M<QJ+n_ONRSpE3du/!@7C:Z+BIk_TAp)I(5A%[Hro,A8j,&h_33f-oMsn\BBjuP>fO6mFD"1c7`Ug,%
%Q0mce*o!%+`c=8/QBukCGLs,BmU;ZUXZ7SBG%@egI<PJ0SmhErJbbHpo@:+K:F;=Ka@fkQT*/0(LATGH:Dar_8i&?7/sPekWP,2A
%DUjG=]ITV)];;1)1XU;RE)[WMQU9t8:gJmX$<4$7/,m"j6,=:-+kE0H_7iFNJ';>8ZC=JV9/k2FFX+R@%[Y:B+tD=1.]4>'M=R[c
%VM,M,A-u(-^et('6q?]$q7S/kO5o-%T(nBc07eViC)?4ZAt@DQ/:CL0c?I/(6<*;IIV]eTfUr'YouW8QB?8eJ*uY&cI#HpIOXi`V
%F-Z`W:qf7omdlRjhW]E#i44Eb2Zldt4s4t5Ac@Ta_-SN*/sAumaTJ/,#0>SjkW<aL,hY;goIg;O1=Fa[V3OR,-#aijA#2P;gMJua
%+ut]aMYFs(kBh5nZG^WniTl7,PMrW5:I=e^)C4ck/K!uqFoa`<488sME/o%24rAh0!e+S_T9*?I6(W?e:Uh,jc@&KM=?f$e?u\Ts
%R2n/kS#/8]Af&_YT[<m%"i#&17Q;%KAk/L5C#c`ckrrb.\LWL`#jgr07Ych.C.F^2Fu1sR)Aa%2$=4/K7MARoKejB%/X4RL%8%!:
%*4_OW*^L=0#,-ldU^'_Kd)<7g"N/J*9+fK>'/kKd3F'khEZUQ'\X^k)Ce!ioI7BRhHTA!^=^A0#jh-VA2(7?G]?C#PMtOfSiT2%4
%BA)DbiT17te)u$;gXfl=DKF;?&dD6uc2)J;kF#]&rGqVd_S*UPItbAs1pEd-gYC"G8m'MnUIk#IaNjaA*gRKpe&;(h#B^BM&5']K
%W9cIj9qi`YL"iIRWXaIM@0Ve+<)rk<L$[;ZMk(a^H#nZ(hp?@*S2/1F^S9b<g@\6Bnunr)k'3T^l`5q)Za,'L`*!C+$Up[3c>[!j
%Pd[>Mq":)mf%#AT&t#\B7>P1UA4m?L4PF"@GpmH0XJ2U6_1Ja1ZR]GJR-eA;dOel*;s!WQ^V%$k`kBW0@\Vl9m]AY;BNAcallM1/
%G&'1F\L)EG\#[%$mO4[WjImtT*#-^GBA(!K*;PFhesQY#[r$$=gqL=QEuV;DOC>l:+pZ>0l3fPV_=K5OOXooglaABL[r1*O_7^lB
%mFFahMM&=cNK!SAS_LJEp:7<.kHJ<65$rB.<R?Sa*s7M3_DB]%>A1C^QYsGMIO^lLWiu54'p1!bX)pJL=l-P.T?>L&<H_D\iFZul
%'"l*-k5;Tob-jAB1gt9*>QgP'q)JO-6e$hSo"kZDn^]Ira0VZQW-Q:P2NU[HZ.:EYgGM27+45Nhc?f2mXWssu\=jdP-Q5!%UWdrB
%TOj9<9SA<tZKmX4pUm<A:QCiJ`CK(D-aRLBI7DEA/eY<([[."\QbbrQi#NqHXoiq:10c<:XQcQ#]-/EI81*?iE\G(uRIPZ^g":^e
%l<\$V^3jq>e9tRuOLm2fcUR?Yb.)<aN50NUB'hURnMXnNCnAA,Zpup[e@<+MqAF_HX+aUhepiP9fEH&Jem&Ll10U8H`-"Sjg5PFE
%BV@$[\J/-<F;CHk:'XE*[Qft3\cE(n!2K]\b4-7fa&TUhg?ET'?UJMd)BT8eC#GMR9P60-H']DmWu7Pc&XP;#f.lDmC93=Rn+1ul
%o@MKlV<[EG9+\:*H@91mb$V0ro(LZmA*.f5'O$hAgKBof;UY"HET_C8gYIgfo)6].pRl#i@GtdEg\l`NXr@*0_gn.g^tb=Y;kL$f
%a4%fQHs(#EpZ:%eQZRK>kf*tHl]K)4YUATJ;<$,JRIs-Y_NHe%Hac61=ZC,,[^9^h1KlE)DYd:64rZ(<)_LM7>(3?*cSY0[-9fns
%>r;*OYL2peYF]*N$u^-d#kHgmI+/)a)`u!J2YLg8brY>t5P;nn3`Odt9"7h-7_mstO`2``$o'K_ERg+"qfJ"2%,q)ZbO$1VO1Fm<
%G41VIs-,TP7-f9Ljl=Xgo$Zln5*?^KX'Q,r$g)^f4JlE[EqrttB;k3[$gpY"Nk[,bqQaWbmi_(pJ!V^)pLQqe4h6RMkN0H0V,>N/
%af`FE6%4X/IL,NO-/_ZPi'58!Q=u".Q2krZ)KOm!A-i'm:7''YbXP@#_$&XNno5k'77u?m4$5k^Mrni%4WF(KTU&<UACKks=;=oj
%p64brUAa.6ddo:A4hW/fdu[@-/j:2Uk*ZK@U%g_G:5iOn!QZ$E%P!H-ddp&A0V5VfeIoXt#7p9q;D%W!3X&*X9YMd_o"!\ZXc3tH
%Ogp$Y6^^l8dVqH5$himA=d?*B1+?q*Q:-"W<^Xr<So3ZmnHnlF,fuWA1-]X?BWbnM-D$j8'GP=c;%%*kKLL:a9VosD-G1<QQqo&m
%*>`uVN>@7(Sr=@82[3r8Z_R>0Gqn..gf>:IdA45(l$TcVR%F>p$lI\`Wl]86nmA-5F5o9OO$Q67!J%*k36D:?A8=1QLBS<HB7Nu=
%7o4\ADl)Q)COj)g6hAYep#UO0g)XEkLdeR2$mlD!Ob=N[s)<H](m:".,$0R=+DV=];hPrrfF]0U>N,f"@-$po!lG8(beq7)nkgZq
%G@:9oM9)#UK,U8]1`-Z,;^kPFFZn*Yor%12^p"&1\7)j.fi*'I124-qeF32^47a,/S-;@RkN_80FnVj`lBDl'+]SAP\+Vh.L#E2!
%#U+Jeb=\6YXD,I36nk:fcn]SM%mkR`Q8>6PWoXY?IuXH$'5_>"ntuM<M8=Z;eEJ%>G=(_r%!%P74)tfCN4K0FL^!Wdk!nb6A8*]=
%;.qaI$sX^i8(_$,B-9[]Q@XM^j&&5(5e!\2N2Iq:?;'/qIdARsk@CQ%ZSQA$%QY#2f'LP:$h0fUk`*"N&3>RXEX#ed)%Ufq,.'Fe
%&<c/(@rgT0&NY[YlH%dspn2#/BH9"P0YE*RFNC,mMFBLW$(CI(M^>;Z!sI>%7PV-\M=+)6F>SsF4S!H\JbJF8*)AMF=t8'*:2[Hr
%Z2nEJ+C-"0X+Ot(/;j<m-cO#+,eo/r:'SSgj1-*FlAcDMS"oCuZIEI@rA*rX;HK>tn'A:"KS%ujm(GjA?b/;lAWb4l1-&Af%n>t=
%SZ/rr@t1+DFZ<6"W::Wn^0AElSn#fb=K>2\SLTtJBp:Vek\c+3pbY@$5npFF,G/R=P-I--MgVNJM(+(X\B(QdP"^*<;3=X3,[FLQ
%2I5m+/A-oF;lO]aKt]&U`oA^0_pDmG92<W.r7&@Pb>!i7LjroFM4_)[>dr>cAq954IJD(.6G-8>53_pa.h8GeAeX'#(7@@t=e/hI
%"V3`kF-Oi1.$`+U.\EJ85"DT"N`,ZmV6YPuN`,ZmV=N=:r&Gt[1JN7oM9e$K3D/D^UK"&MX1s,`m^F:p^AI^!h&jE,@]AEAIsLkL
%YJ9+96%Ae!X,e@[I!A0[h\C9]a'^M^B^f0TrEFa*31k)G8AQ75L7=R,].slEo+Er)]:0c@hMXR7p#GN@'q[_S+(iXIr;E8[n,Gnl
%s%dq?WsmM?2k,<l+4KB<Qb;U-`/j<[l8<Lo7Ie>+2nrZ6O-]`j<QQi3lUp$m^]1V<nF?#AouFQ1hnAmUVp-k0bP&^;hS9)&oCM@Q
%C^@d:If9!#q[['$?G6=S)<e:'p?aeW^A?ZTf,oLIq*/l<s+UJBkPqjt_;Fki(B]aX:TX^B'u3'03>q)M?g3F5+cE&:AL27__RiCM
%<Z@/tDBQJ]nT9t+l#(&-h2$G[AA6cWMb+92N=/HVEH"=\egh?dOXc9!n89J/(A=XO-$!S>AJ87\JXEre1#J32dUnP5;=#X/>,o=L
%WA;SPj[L#oQ]cS<h=+=*Ded?f9#?R$,@3#<mVq3M[(aKui>@"gr8K%unoG0t;'arAO*Y!@#lkEPr[*:FUa?7&KM;PHDtX$4AEHU'
%2feBD,q/uLeu"`P=Qik4'lLO\=o&_M=h'#r]W!ls`."8l8]%/Z2;Vl)0oRku,"A=-qO<FP]?.p8:k6cq5(jY84-U(N_J.H_8Ucuj
%SVooDUtK`s"2)"6?RPS^dV!9,`bEjFBo^PYKXEPdbo_%p]aRW`@P:'[S1!]mC?,e7ZoH,,'VN%3,`)HQB1U#KTNcI19oKgr!.j)M
%PI+3\'HLj&@mJh6jCY?q!Ll`:=CrCa]q4s0/K#j@RceLo"%G:F.!GA0pV8J0X@"Fn;aF!dR:o/\8bD&kGU*.!BsCto1PI][,r,]R
%.?daRZ]G&_-R:(_"N<g`\-]"f`5WFXSA;m<$+R3ihX*?QbqQ8/7#GeW]R`s8L/'dCUL'd\`C;[mh;FSnFrcl*QXq3f!-;Z3bXBkH
%D:Fbh(8:[u2T&6[ZD*l9K2B05\W;"C2qUZ3H=aobD98Ia=VK5Y#mISn!nl1Pc_F0F7TfgH$W34[a3FOADn$\9W->>P-D=&D9'3NA
%Y-0Th>\-W?&?W==<W4ET/>:<.GIpJe7YY06Fn7qNpfgdcXM:WsNbW!r`'/AIraV9$!?_XYPbJ:W.Zf'iTVO)E=Gi-DPeo$t`Vr>[
%&POD:PUfCia>kd`S[G^j3+T?McK-C/S0F/J94^FY*4_Jj#<=0,c9ZY@"s@V-9Oojh'i9-Q.\iVh/C9)9%OEDFfjHAlVs(0^-+cX]
%d\.^e.a9T9+K+Qkj:J#@OuP_$Xb5pD.@Ct3=>=#8Qnm@35Xb_eDG,^iKMQ*''qlNX^;s#3R]%6liZ+L)7hI_*@[]8G@"(C7KI>tD
%c-(P-;Vu;9H!rBN05cBF(p(jm#:G7(UAUj7JBu(e_=?V[$1+(a$(rULfe+3D$<^8\AS]VBe?1/k5=G:2'/@IiN4[jr!IGk6Z3rO-
%0dY"=Ft(f&6e*We=Gg!S7#^6iVEL,9ANR[aPCo*KWE^Uk'GA&E,f']0#[q`n:75S@-%#esegRN''D<r_E=$HW]X5bE+aVSYE[sii
%`b7..4&X'TJVR9r(k?$C"^$eP6_'<*r!B1PHK.h,6$T]NKt<3!,2f=rP'jU*@Z*R0oWM3$oEX<q)j.dETh14EHUL:Y1-JI)G6DkJ
%gcArP3UANS2;lnRcqCn`i01Zd`]bfWrjlGd<%^$D\OWX3Ko!jVEXLqPiQ>sq/R[h["RSgL@MPZrR+U?c+>gotMG4=%b*AekLq0]/
%Cf;U0Ji2d`Y`m/tdXBJN(h9.rQr4YOc,l*6A<8KV4-ms0$8o'N;j)L\a9fgnQFq26J?3Wc/qbL5'Jr57`HgBPZ&=k6O:#;R8tn%b
%.?JO`TH#t'Je6sr+\[%J?-#fLQlbfqQ,]SpMDce-$*]i-1uM\79!GpNJHR2KF,Ud/nJSB!aB<DHV$&>'ld3bu)GBubF^bt='nsQ1
%GS7,qK>D@0^dVfY*.\FV.1="@E*#7^=5fL[-?&:R\jK@&EET^iE,44m6kV)=*T9SRo3V/KDWt%3VWPD_WF.)"WCRPY3CU#-&;ohF
%ZFbqD-j,Pc%9T%^(P7i>C$!9,K-E'1J[>E`,@oPR-1%!=Ff>jn#p7*,+j^6k_mm'om:4Lc=^jjua9se3jCM.1"*r1slmeP496$PN
%@e&MEk7@h!jBCf>E-95D5rVT@,5-EA"dKK>"3%j%+Z]D#,nRs;oY`NLQ1EU>A3#^QF%p=P2Gq(!b>!01N,JUH:Fr5Cb(sG=3"$H0
%?i!"/]VOU;pSCbai`-K?Nl`'.'/3Xe=LOAZWOmus0DCPWQaO_o>SHN4c<`OfBN_/:#=2Ul;rt_K2>4r.gkeF:m6uaV!Q^"V)KgJ%
%+BIAJ]nQigM+IE@RLCZMp'pp?S8&Qd+aP\"c59TNd'O/W_UO;&A%lNKRddA69iQA*9s*cZ+q=WWL'88.<KP5/Po<;,ET=EX4f[]Y
%`hVs54.#qfNJL,'40OB:,hm<<;?<sj8]>!CHI_.E?]nVa$0Ci"e#L#17U78i=becO.aDS&intpT(`,TXK7uZ+K9fJJRjFOs$-Psu
%.4)osiUWV+,[$u]F#bo:7Wh3*Xg+\!4DRNbQSu)?-j#bPqU-!bW@Td@QBErtY4BZ(pdpC%P>rDB2PDU/?qEg+J!Zts627Tg#$His
%5,K6-%Sq/[=l3p.5^5V:g?n02^QdCPb2^$HMI(<jR7%BMF@&9EQlNXu<$?irXXcSG(9;7"e4hQQ/NLu)eH[)5i,e,*Pd6hcM,*Ik
%4-l..4%N2(g/nm1Q?=B@Zfd03(FgKe;RIc0CgI^B[<%na1YU3Sqf;:[IRaU>qOD'3ckf+@WLX<kRmAok%)j3$-EM!ID]np`CAkg7
%T5Lu8r;6pbmmCt5J$Jf&^]4)fmCPT#I_OQR?bcU!gY]^Ep^/C@)_"%cNKTE_)BKZgQ3C*gp0U?hW$HBAB?%;k7^.M\b(M$AF\cmB
%^_7GT1cD1e"HE]N^46K#"q0MmbbV-:Q"+H>;Wu2<U"YUs<GZUc1h9%2Cu<<%>G\?Y`e8e2iDL>p2,NX.FQ])lM$ftsS$Z_^cfZCn
%s87)e>+8]U+B\iE'HdaYd4jWn/?R#F7MteJ6_Z%E1lH;L/tXnY2.674&ua.A.a`ZC#.6AU&ICS6Dk"&;<Q?C/b$P@2&71c8Mc*s`
%<IqB.&0Tn^9ah4Qe-]uNBLZTiOTJC&+YOP.UL:PPc^IFi+<2F_Zg[1ZCZ#gL9ZLk!RKeJmblt[ob!HGOgc/)qMYBrBUa`$0RP^M8
%)']*&>(K.?YbRmD/gUkASidFYK*eEk;$(fk+.==1TeD84ck>sb<X*/;U%@kRg_GPJ>'F/AjZ.0aQ2W[b$uon+QeJ5:X`h)ge:e)[
%c,`oo/!c-"a]M:nEEUddAUbQX.=qHVc7sCiF7tXg'Y-apPDHNS"m!6kAqQ]A#hX&=@lcL)+maO8]ie]km(?d/0mSiEK=/em))#`+
%K89SCJ23pUWnHrNYX,6[jA[">.+&Ld7YkVT9Tn7S''b\o+W$R"=]Q,(&Qg$W/YL$l!)Om!:1OZI.O[i!$p&Vmd,dD;"c@8`XZQXQ
%*[RO<aY#7$4hN;XFOo6B#VB_Y-W!#fZOBO)nCA`Tk`A;iQopYC.+,hr-t73p$*6a/@>+7Z[hJiREUeJ35XiK*'0.tg#(dIjUiP&g
%'ilU!+8c$MYc`ZtbBba`,%[2Mo<H?YPjKH*LBeIuS[UoC$DLs%Z&F,u5<P/N&NIEo[^%\]o.ZA9M^Y:?@$`3&2Z`YD9PU;<'d12_
%"A9s8en^&/1o5n>"X1O1*1J1`arJM'aC=/O,WgPKiOSa>Yc#?[*DpVW1e7`hG2_]@-u@C%E"IkiV4o2CN#S/f$YUWJD4EL'PVefP
%/m1J(Pb$!EE$uWjATg0M'%uDfQrYLJ&#^GeAJ>L[o,2r,`0D[n5ZY:o6ARrb?-NO"pL%%LP($TS,8#g`dhW,"?^K-I1g.H;a$au\
%@bW^#-"5"QrIpdnY+$SE8iK^c0kN-"UO^oWQ8n@7.B1cq=cu*,S!/Yi,)C2E\i2o%W'I!iThj/?@IQmQFg=bnfj_]b$-#S^L'_qJ
%*'NO*]1Y)2K5nbo.]Z$".t\Rj=]'Z8#t6[RZ-Z\o$(_>u]sLX;8>M9'NA/5N$9_8S+B#\m]!*QNFO=9SQhsL^o*[)2;KK)7Bo-Mq
%*qFE*S;^*Lp;Sr>0MM0#DperJ_9b4f`8%M(M.1"1P-@L-CE6Mk/!s=="KQPO>sP.93poKPX[_WP37=5u5)8;FU85RP7,>+WFJViu
%WbZWql:PXiPCcEkBbljL:81n=H:;-H!p=qW#6P>\,:#,Q-#Y,H&]m$r_I1njN4PmTX`_aTNWF<0csN$QdK.O\YZgkWX/Sip[#4$i
%TsqT%:b8Ht_LJ45-gi`6Ihe8oF;-$qNnRAE-AeXu3*J?]2YTbM#D+Zm+?>BXD^MuMb"P**kZ1ERZ5mQq0,3KaN>s;?CA*Pg$(_?+
%fbqUbAc"2l0FEOV.`$X2HW;^oW='Hna!'gt/6f,%PsVU8X6=c3.TUH8/^)coLs6e=.(D"uqHB%1AVeQ<.pkr%UGsIOVVfU?abl0l
%7_:+^'XSo/f5HPt_.=nXdP\J9pHY$4OJQGmKtbu.?B68Go$Uu,Y:u@9r`+1K6PhOd5,8?$c)Xq[;F8su$M7M<%5KYQ+iU#fL0Q.-
%8aUn:14"ZSP(!Pu&6X:Qb0s<]Nj))Zo6f0N6o'l>\4LWs6:?AEbDeS\97R%$(?Ls-.?m6Q>[cNFDOY$OV::7u)hNg#bL-lV8oc"^
%`gut2QW:Q0i4%due[X&WQ:?E1ZjBeZL0WGD'S]NY/qFag9>t/o@1+p$WbiqI+pV,78WB7KWkFkod$Db59i5a@oJaV&U=;3Rmb'1l
%U9TAH"'@?/#'aA[6V-G'qo&FIp[E8JTOSNh+FUPK/5]N`K=K6#>;mR1#s+1gk]2C\,pO!F>eo2iL#3ZD1Uj'"e&*jD5CIQ/3e3-b
%bWSZI<K1YP9DcH:#Se.ued3;UDBb74Vk6jhIH^P>e@e1uPO(Jik66*XKfdbmNsuN&^Mmb\@>hq`"3V+S@+#iO/'IK!V@SE>D(NQU
%,-)I_,4pi[^jTbX#T^N$FNbVU2$)\lYKP$Ep^&:'DM#f=0RT*n!Ze+NA<)'>Q:2fN(c3]Z]r5&'/dOOqlC*r:3%jD&O*2rT[UFoX
%A6\+sOOM%<Y;5EsB5bA!DM)(/IK5`tct=%d:$QLo9sW/4L_e5<HW_88E-Oj:0F/O/iIk)n4NS-;V*L82O\hpJ2JX1GRAVZ.K@5Fp
%+_Uk3&eV6;Egm9!$F^u:.Ubu8Q4'h6=a6Po<'9quWEG%i.7+hVfEd:E<JWS32tu**#W;8@398A8c@i0QnnmNlde0HjNOuWGcntqM
%'D=l8'KuA!:Jqg6g)Pj:6qs^I4.fn2/==Dl&f'$6@fd'5n9mR'g\9*6GciL?.TMI`Y%4pLWJuO>NV]9@AD:c?qZhKg*#&5Q>.aXJ
%kUD%SqV2'iT7OntQ0R'J9G10He/&U?&8V7!/m!rf(WZYGbnD!fE1p_INtUCVU8#'k;Hk'M]8j+@@,tDko9jEn64UseL$=4F@/&pO
%4eN#fD:)_6G#[bVUBD#1o3Yj^fnnMQq`S&5oeY<AdF[P'casTTT2;!pN'mtHKo'PC,&&dY.,2YS%I4jX2SiSHI$EQEE<qPTgJips
%gFgH50PHi0*$c,8D@NOqW$>iM_Q-3pZ3IlS@brfK'P'SnILAll;,*#]2J(AO>/jpDko\#[pu^**l"bpU)'M+BqLRlOJXfmfes2KH
%I&!$;1SXaJ><rg[-.*0Z9cf<0Oh#;WK\qj7Dh?.@In"g"E2l2NUK1SULgu)D-.r>_@j^E_5sqtq"<sHBD.aG(Y_>Ne#22]@!.ljJ
%A1rbS5bZ11(Z%_<SANonT1Le5'/W9/$;H6i&i%;:5h5s&\.m;t0)a]4C"L2H>'0M$-)B^<+:uM>j*WhIE]6TZY*9EQJj<rX7TGhW
%N&.#C&5JoS%$^o=**#B\@E.1i9ZRn]A8C>ap1%1UW5Z:R"sN2n0[`jPK3o"He-N'?n/!EgN`gp*=M0?MA@UeHXD;@V\27]&LM*bU
%dRBPO*6L^V"rR;L2@5VpS&T:j;H60,9@]"j7#B4=7<GI>_K:-U;uiU:?jPP`OttNgJ;Q$mKG-T-Q/(8jl:a4>,mtTbNV*ff@%6A-
%&71tI7N#NJ\n2OP&nOBC`g)u</4oHIOjHflWsF%R$./91c^`3+[=<6)22`Dnn-)j6X"Y"rNaiHoK,BQIC)Qk*",!7i5T,b'UEsHF
%Hj\-Ddgm2?8e$/>\U.+K4@'`PoS\O7OXE1jL4u>+G`2aKN$F28aNU-"[)IZ>ZX`#`&e#\nLenhn59^%A-*kHZH_D,gN@p@d.Cp""
%6R\>+q2:m`qPYbTZ_OakM.<'7mcYYn<rq\L;]TC7`\*'6>en]0+:<F-KH!nN8AOaB:\!$RP&QH7p6OY0oND\'2g-]oY[XU]?,-fB
%mZ"%5`p7NW&W%5M_Ai[.!SST)>3M1YOZT:,\^2Q[N)]<-:C*af?4C]6!?S>E4u"ICkc36B$`#V'er*FHA9c8&r61=?:,X21I+9/^
%--3ab<hlDg>DP*m-:)stcD+ehFm<#&U@oLi1)M^f`gUQcJ]!OT`rbq7WBM01*>]'["uM0O/=M7WVD'2U*IKH3N<d%KCVu$ad,3!]
%R]Q$;OjO//V*<jf6=8*)8V<*,LW50GAD!+iqdjUDkc"@M@<\A<".L$X"gdT4YIjd#q7ORF:q<H7`mN,.gRSpg_5;h0:[gF'DmaU2
%82&YYO6Cm_k2CaEq+/bdd0,RT?4)u@<B%0k6WZbar*q.rcjaip?uX(Z)tlq+/f<7Y/r+CEf.BHkJ.aoj-tXgk8BMBF;fN)VkN[R4
%Og-itOh*r%,N>AbnmG>h1.u;H!(3ZcMG%S\5<-DFBGbRIN%(TK&ACPsW&57#K1>cHn*Jmulm3<n_?a>"0/CB(++5DsE5/[&:UjU#
%)UZ>#+^2p$ee4Yc@1^:)eNf36qpgB/mK63g4d",:RKsinH6t\&(GZQXda73R]+E7\N,aBrjC!UZ:AM9;VU4&LqRtT[0mtb!8S]2F
%1hgn;g.G'S-/<@XcHjQ`'ZY_F1i-;i")U<Q&2c3pS5?6?Co7pq(VC<!%iJ7`/9eY`Bc%L'09_k"W`Bm8E?F2bj>a8L6Ct[5opdUW
%p^d<=Sg$@c-]n"G;i5];?_@"g'K:&/O5#a%@nUPmdj7:5=""K',"kB3D+H'h,>qXrUh\O95Vggr`[3e`K\e6@BX%MY2qNkYJn7L_
%clU"'18tSo;hgoT[>QC8AKo\9JL8)?0bJCD8L%@N8LqlK!f%^1"^hF@5*a*b<65uh=nGG<4hV&'5t6#ree;&B`Z>F"/cFs2486Y,
%7GA*"R'8Zf=B<PB&VU@oerRLe'B:<J;kRo\7R,%5fHrlHM,Hc#LZYhq_i1NP*nW)2FsndnXM>68,;fmf)RE"*^@08QmWK(+JY=#M
%J;CeYia<V[o7q4"dhlK2GsDAgk\3;;O?qu%]86rZ4&I@<Qt8*j0cKY9=.!M#f74`&&gM.r("0c@F-_K19f]-e'q#R=O`D,B<pU-1
%(`t8mHAI=J2Ih`^PuTAYP'IE`Z.e.[8A4b>a<fYZ^uI]c?Gjf-6N%SX)Q>c]N4\nQ_7nR[BjDAb7HZPT'1!9;LAF7bF.J_PYg*QM
%L(ZoE7@Lc]?E,;j0hgEMaScTq"G/%5<i%O7KnWs#q*&[OJ^fY;G6W+TM+.XQ7!_+#."+Ad^Jp[VN*q^.d6ua-*>%H'H6b8)gCOFb
%./9`D)KmPTJOsEF?2;"2T'/"V,f.^K"bGd)]:0l?;OIb@&&.`?hcj,I(30*U6@r8nFq+jPLhNQ"#Q>j9G,+cgXH>W>.b:"ceLUhF
%4sCB5<C1MYP>3ou:Wi?L*2bE!X0rnR=F/o)D@0%\.OGAbLp3%g2=+kpE;OMQLE?Vn6-Xu>GHu3TECDu2$5s0N&V"N_PO'+<"JLEZ
%B^gh\FO8W4"3$n5rV+u)1.HYKq;G?\YUt!1+_Cu/pMD!?mAGcq'E$iNLe35o1Lg6t'm7YJ16+d,hbp0$(i4QID,Fkl"IN(2EfcA_
%-tRkGlRm5BE$La^Aks!h2X4h0>6&hS>nu:u_l/A3<hmE]Kl:Gt1Rbeoh92BRs(L8#1&?RW7Xgq;*VEr"d?Ek6kP.JC)m^E=+RuFt
%<$d-4k!(P!8iIeW^[T0n;.?&8+u?>DGB9*;Ue!,Uqh`sH.#K)C,(*d?S2/_3G&C)oFjhoU*cg]0V@lr>6hg'ocu=u("8]E<S6<!o
%\dII[;c20@\<JKarm9k;Ak*.c+8A4bp-$>,pRoTXGU3nDmQnPi5:KkR.%*2f`+06e@@_Lr]_+VB6%]f5MPqqc[>%dT,9`B67?jY8
%)3(I&=X2Gh.H8.eV7qFl6QRehd4V!>il&p'*Z@nl%-\@YM$YK6aum;)L=A!\1bg<ldQC]'qZd?:J[p9oc!t&uMLcJY`n3u#:?=A4
%,-k\b_Ii*01r?)^<Hr',V&h//$.=X4ScFS^Sq(2R=M\^16&/'E!R9\a1P+E-OqB=cW8.bs#rJ@[`i2X/cNAD"@tM`akpis"Q`??r
%2C2i!:]g0C-/e5?6&IBi(jTYYB(`J+BJ'^X#kJ688(70/=d(l>#h#j(\>utH/j5>Y<Qp*/6Uc2EW5>!4;(pV8iaCGI>q"+r&_<!m
%:r!>='[/R9Lh5!?,g76m'EgS\X9B(OO#lKdpF@IqH<^n'T;g\_BabRq4s&k6GnS0%i^:!B=pj@Q_@"JbFqGBD6Wmj@KBDDA]B,a?
%:Zr3D^18CjPM$Cf`I^LN7S^T/iR$C*Jmt0,4l(u6gJp!RF=']k'.S]ZiE3si1V9s>LlKhLa&Ot^Vp?,-BHs+u3/*_2<Fhl8"W>P%
%(d"$kKJN+k>*#J1nkkUBa@nPrD.SOp\-LaiO'R;Fac^oU3sr6\`<ih[6sMj5]sn<BgJGc6Eh=p0d4Y+9E>+)(Jfj:+JuG(?BSEC@
%N=dp_Sj"Ef7-N.AF[@&q3^>&$@qL>E6)mn5C$V]\g'G[NCU(mP-Y#-?RkWhNRLFc\%^03\m'Ni+6F;JVd/ZF^+[/S"[KHW,fmk[_
%#bGf<l;uOMR;^#g241-N1pla)EK=^]X!OkmHE*YnFjb@nBpl2S`&Q-G4C[,T\O;B"h.g>Q#_dg;%ZtW#LSMOVE^g2e#d&lJ#%!<V
%L8K!Je,06i1DpSQ4i8TaR$WS0b%^-=%E:kO\co!`eI)6&#d\2D$`6R`V24uZF>9tp/d09^XbTY.P[]k4B!"IZ"G6maeV6AF[%t[<
%ko;+NV%)#C24hoK#'5-&^p$-$ehl:Oa3K2_"GI)JFs=W'9ZM-NK&0tSJ0oi^dpgo:;'W+CfFVYPfk:XRT.ob@_r8GR_djq)G+f)t
%TQnW$_WG9Bjp`P;-(Le%(J?N8XR&iH1.lnb3@pX;0oZ?&$TZI9*d`Fs$oOV<[mOgX63gJA8@DY81VB3U&QGS6oPQVDoJ:Y=["V?b
%5P>c,PL0aI*)1N`Yku[T2+)h[GR@V/!]#qX!sJ,$TY=KRl;:@qaod8?I-E%fIf?QK4!^Q,(sr\H3b7etTP]i8%[.gD"#IP]2tD(n
%FJ*cIr`u^"&N[^>d-RVs5$P%++a-a[#K:A6:Tt@K/L.gFL>;?L3TSsoBGF7a"uIn966#i.A.2E&6]O"4"PU%Z"3hZ2L4$B/3uWAW
%4SOe9G*CWMLV9&ua8rAa1.dcl%`&<C@\mKMVQ+X]lYZp)+tm,O&KU86*-KnCiUGhe7H_Lp<9HngkMX9:#/"MINeBd!5)jiT1:B:$
%IWT_tS02PF/&mn]$Wt,nD,FY+;asT=9MiBYb-2%p$u[:jb:E\Tb\RQ^gYO/+PMt]3RXchEgJoKil*(K:V-G(J+d`\PJflq.B1`qf
%X;b+nD_&=KI3!BZ%X0#5hnoL#c\Cl#8Fd]Cn'De_%"rJJ0pZdoOWmcR7fc=CgaVDdfppcN&V80eJ%.3^-)*&K&N)4R<5*omeM5tu
%`a!eD^O[oCU&e-D@i/QbEDjbR4Yc2[q#TZ;I?06oZ%D@%CW&%%&A,<d_P@":SQJRk6cpthF_DY@!1nIt6_8$Y4iJhH<fI]ah$C9g
%'BBH=\tiF@'P/+qP\n=U0,iZ"%1JAiYgQ9VhaYU1"VbS;cl!52_dI&Rro>0524o.$T'?\(^=@BnnC_J$<3&mUdnDesTfbHe(G7%:
%//"fN@MsNX_-rH-[>SPM.pV,&l6EX(eZ"'!CY3bmktpNH@)eoA1CQ3[UK@rFB)pi-p5DFlo)_kr#Qs9=')U(Xfl`7h+]#Eu_h>]L
%%Hg<((.O\\7&C/PlSU)f"iS>GAqe2(,q@JT_$e#Ifd8;t#R,ps"9jgs=gRH7"H4Q5&LD7pE<np4^pqeAXte`@l##]I7#;+=,B\KZ
%]4&6rk%nS9KYXkS-RO$?MjqGb#i'(`-ucU$2*E/I#W^hmehMQ>^i0*XW[<``%_jW`":`OVm$#F%_'>(a3A`k+k]PcfFAO+Q5aJ7L
%b>eW$-0"Hf_Id*)n0<YGl\9,IWk8`4?JX'AK.,A^J>#QDW$204eIT&oU[.0-_kh=5HIZCk20PJ4Sj*0fhISruHu6>nFp0eg=5SN#
%RoaOcIC4S)h4ME-s%e;FqPt.qJ,%;=]me)lhL,([e]0UUIjI$6^O+`5r"kj;s*sQ]M7)ukN&bF3PGQ3l])9$@)Q4Z'#(J<5]n/Pt
%\_T)`^Jm0gl@K0^JmIM5jtAu1(.uKE/0!QYX9HGTn;W[0mNSf.Yhju-0]Y5Tbrp"W>`_4-TF'nY5nSjKOf![829(4^nkO>/5X2Qh
%J(0[D!\p>,eAi$u09TJsYQc@$DTuE2p4A)48CX_7b1Gi?3hZh!":t2SaGY"H/X:cPi'NC&<[@U::$V5Vq_b%q0Tf\Flcha]mGp+R
%c3)su71G^;^*.k<"Z>r<WoeZ61oaHu^ip&50Gj[R`tsW2/:-(ciW07N+mmK:$`[$5m39nl"CT-CVDp7nW^6td8S\ff=,=Q*0h+n@
%j4]T<%cIeS;J%jD</#WT8i3OrQkrQ?"ZS#mnQ.P\U*^K,SS%k5(tXj]cKJQPT_e(R+jX2%N&c)Y6?bMR9n6#k&p6r@am@lW8J%a7
%#,'>9&rLSr-t,q8bZ^Fk8OUf!DPVke90FbTrd_ilVHAuC`R(a<P635;'PC9MOa:S:]+:X<(d(=QLWL><_a/a(N]QaN/)k%]hBS[.
%-,^fY4+`JQ1=mDB;ScUrSOQ;<C9c_SCGhu5R&lso8AVUq+ZVg&L38Ak>\%p&@I"ep1MNFmXZaK;VC1X4Lmt%NP<4#C%h)<q\pAe.
%^1igh?CIW8<WFf]4#II/0Gq^Jb14Re:NS'=F>khK-L$qL5q`k0(,kM^P9tG)iI$;CMa;V``G&&p5RB>.g(YB(M[5!cZe(U3a:&;\
%<>joj&-*+_8"<U+5t*8?*K-E,rA.?2XWp_AYlGs.$>P6;0@<FTar6FMS-]-/BpP#-Mf(-R"T5JSTnP5>^a)J%<=O,mZPB;A,\BKt
%ZCZ6kcXc;cZk^i=RBdaJWP>g=-u&<4nPX%B^s42aU2qBU+,uK,MbDBW-1"%Jg_f0oTd3!W`tVFt$F&uEcoFR2lFM3?EfBk]KA+%i
%MPM+-8=G1/!GFt8%upbZkM`!:7$DF]::$2di`%aY'6djL<FFm<[W]s*"=fX,0M*;E0UufJdBmYg[OBN?lXD$6Ft"86<kckACJd6g
%%(nuu^Ck-O$5EPi5WbnL6j]Y7@YA_I5m`DOX)k9fgIt[C0LIQtNe1gF`>h6'01m/@+&G;YKME?TAth'0N8/I5E-[NJ\E5KU!#$o=
%8_ph6%L[r$15%ecNm-VpE7QlV[WUrOJC&uV@u'DOoG8f/;jqEq$0\U8>E2FJd?IPY\aW2@0quTpFTK#[5&q@I&9\#H>\Fp7:%s<f
%)Z23AaqsPf=WrA2"bW]HVP2)UWRZuO8E>.GRa6R<!2QjL%RF*gRRHSV`+qbiJOc"X$:YF1+<Q9)\PW]U5Xs0H'H.T75mj0!IEaDW
%jUcm%`;VZ/IMFRJiCO&'Y"XKSR[8WYnf10V6dX17Qqe6[3@[A\%m&&6$.H'nd&*/7<PgR"j5Mtlfe=rW"\3ne9;r`?*eT!.`)9dJ
%K&UbnO<tIM.Tj%X^86t1HC@4(5N7;=[KHdk$h7\iMIcdo+bMjn\0Z_X&]G#u&i!0igV>Z:_Z*IuB:---R'f"[RUBMM\4gb^\k1q@
%L+#'Z+M.ZQJI![(YsOO+IaUUpeN'[$!N7=@.&#/?Y.Or)=9ZFaWnS1@eS)537AUn@miXp3H33]GFq6lcd/LjmYY\1^BpTT4W*@N0
%s,duMSV"XR5cc!^?K_g5_uO0[P9qL-=s[blN:)EZ`ra$\AG%X:l[T!IbCK&=9FZaj(+q2sV9p1#!cg7c$N\s1/CIVIj_4ch9Y/Q%
%P6Hd>aPL]<TuV?+JG<'5VEK9XFpc\NPN$RkH]n>--Ef!%hk4LJ`XX[u'q58oLH%RF<nMSY<1bbHB*)$?d=;B9DWDl?HV*oS6FC:7
%G@TVQ*RPfKnj&RsrK3Cn"T0V?MGXm_+W)dEQh3UJd)4uR`nNs@^F;VC0h2et>1IacM5:Vm>r7PF+^bf2(Za,.P,lGhR@Fo?Qj@)p
%8@+r-k;"\@W1Sgle<sb3>tTqhB+*TlD<`[K*/'scGU6$A//em2RJ,`U)'Y.V=<T87E1%nW,qr`7[iVg=E30b4(U?O2X=B"G5otj#
%Mhjpnn:VA=dQ!)!"02N0QAA=(Xl,2,5'R,1+?m@HGn=rt_OVi,3e`sjYU;E.(-p."7\kN9"P)L,9[@lR,LBiF@,*BY[Ks,rq:fVb
%HnjcE!a5D36aXb0k!C\i@N"P[b>%8IK@/>>"f5X;LVuP7.iTlc?#s:M,+aDYN;,VrXFt$e,C.d0:SNA)!sX?jO8=Y)Lj!:3I"E2Z
%R;$b8Po#nbI:eS]k=X.6"aLIW*7j_j>o\$lV\cO6W&05RCh4:lbLMZsN;SZ=ao<N6UAup`##,57p:Mq1c\TqTH6$csRefQ.Ou@hn
%.(t9CNTKM!9Eutlg].M6Ql&OWn)3euiD5WMp<Zne0Y,:[poc*OS`1YaL3!Q!4]D-PisIOiP\a_`"=>l`bqUB;UN&LdVbg!m<(mY"
%`>Mi]TUb=JC1FbckipqF0R56`63<lnko7a!P_N3)J\gBI#'<br(`+qWLS9A$iaW;cCE]b<3O?`[RaY!$\>HKD!kLBJn&/*CE!m9"
%)GB4K(f,8gl9Ru+\>Lh+(h/<_%^*frI)[Zh;.-'2)8(&hHlI%o>ZD\#D$rF51JHBJ@8B_D9H`JuG*Q$;$q"EV2h@QC-M.L8>-LX_
%r=B*)@k>8L/d1D!(s=B$]nF)H9`,7=7XC=NP*Yi3,=6QW;Pn=rK@QkGk[[O6K2KF_*K:(N-L4"sAdS]dQZm1U@_e^lYuA&c&WA$R
%3p!^05I),X^SdJAg&g6![D7nCkb[KD+g=gS<B6$`fCL>"18,u'8KA/,>"4JC*\U2#E['XNd1ekUMd[f4e*m]F<gt:_&VFiRPt7jt
%-$!OB;b%(G.E;)oLZ<ml81kfZ8ai(m9\#tl&jl=@;P>0O\2TmQZ91c^RSnomSO/AY@+84c8l.HX+PGHr^!tM9N`9;73&+!<huodA
%km54j5enBafbA-;A!*e2qpF8N3)Mous%poZD-.MSZl]JV<o95o6gq>KE<O!,_it`a&!@O\SsL4859gmLQu>l#2+e#u[.g!@!K\M/
%`M/D^8jB:W@QD]=2XhG[WTFh[RY'W4fnouu'!6hT:@NATmL'86CM#K[KFY/_1hlL\m\.WjU^RlS&gd,^mVunC$q;-bgfka+NI#MH
%_X)^Sbh#;0'"tKm"NXp2257q(!mt]=9N)2;W!fh"'Jibq`MF;TSD6^oCnCo"?rfaNh!e7gD.55>":.Ief-k`6_h@'[U4f5*Y%);$
%-r$-d"H*Qui37O+D_c;7dIoeJ4!7su;9V.*`hYA"%5p3@^1f*.^1-b.)$.l`U/`Q(.&2G$$ntpAB+6S6GTIkWK-^t*#QcT_phA&"
%98**a/+="5(A\2e!oXQP:Bn<X"q@7VPn,S]TXN-R!+UVkVbON,nH*B*<Gu9XFOKXnbUEPEs3TjRRM%;[\iAY*<-Z*V'LCbi`sOGJ
%C_0A;"$u\2pu^*n7Y<@GSP\;G]W*t=D=DK1>#+[LC39m0,Qn^IT]CWFB+3RIFu>J?+b)eoSs]_He\`TCWkq1X2Enq##A=1'1<;Qs
%XY`SQ@b_;YB(C%K8N$<dQb[>7^`Afi8eJ^Fq+O8N.)@,3=TX+I]@(K7[3Et,Q[m\A8WCY;mdU%*A4%_@S,h*Xm@/AO(fa0?n?bu]
%HD`K!Ad$?cQqC=iNV3?.AV+4<]R_1%M&Oc&2)Eu3&g\EI2DO>B7W^cM1ie:hCT;?pJdRVZF6e?O8C!879L<*Tf0FhLU:hn0ZPX$#
%e8)pSUP+@phlU(lkDY]2nXAYORf?EeY1"$,6om4-^*:kC<&L^l>Y.9uBI#Ij$Y!(q3crT%qa7hqa68a4LdksH?lCc,=GEnEFt:kj
%",+14[t5sNZ\.q>-9_L^Gh$p*oKSWuV!js%Q0pJ`AVl5%Slsp#3p`_XBMAU>KZM?@cuG(K!@IaQ=_jfpLs3HV36R$-F0NhK\u4[@
%)(CP2-GUnO!6?>e!*=d]NQL14.*+/JLNrAHlQrrVHT]d\"3`'J7?!"$Z@jCKj9Vm2#S=aNA8VT(3FrAnFI`!nbS&-,;091D`fj!5
%/D"]bKis)].?72)a^[`5_UP:r'gr'a%&8C[kCoH6QVq-9S6$ZU%rcoRNcO7j=j[nQ!CBZb,0TI9&qZTX/8L+RCa6YSb;*R$-GbLq
%DIE(qKZtrbF+POX\RsnQI7I.iFae314PV@)\q?9^&N5F\ae0.FT`*"fQ?3<q`E!I@KJ\]X^o%>=FXcPG.%#]E.90:kYq(OJRn_Tr
%E?^,E"8ANN*YatUd??Ar134BX@)>SDLE?_N<aZ1GXbG^cW1&iAWJ:,?ep"h`Bb%>,Ar;=J4e?rHo3IbHQsf8+["d$<+Ms;rfM)R4
%"p'oa_7l]$,6U07K_Ws?Y`F-U24cuDl.ner,8V'"<mtS>H&7U*J1%KJaDdRiH%B6('["c6fI6]/=cms]$Y#QWUL[==?FiK5"[4qs
%TZG1SL[c1]R:pAnfX??r:gIP8BsS#K(Kc-*:Kja>'+)8Z4XTj?!]%dJ;s+8I1Fe0X"RD=sP"iI#oa]i8W**TgHVRYl4bBos%"nW$
%F-Ncj#+[?b1gFPG$@kt::nu2Pr%;+PAl@^U3'UmTlP3"V/m-7V?#F')E4`'llG>7Er'<0tId/87M\ae9D.iJLY@Y4r)NBSfl1i=2
%VrOJt'?'rbLI5#_ScVIg+t]'d>p;upW6f-j]Hmnm)S>C4Z'U\gF&MCbo;r).=#gW6Dl2O6a$C1%?JV&p\j8&\2)RYE?Xs\m48Lr]
%l)0G1Jj5FbA-Lp4ZTWf:,BuSD;YFW,hY:U_oFes/Bu2PqFo:Z:5f*W;Rr6]<cHs13\g/7b8+-X_&t^T(_7No/I%D'r2g4.@V&>F8
%aa05/hb30N"S\t_hb"1iONS'fNGpsb,"p^/4B3No!<O:NH^XuIV_b,d%X8@;:cGNmdAP5Sh4E&b42^;(NTi.QBPt(/&#+.jAcU2g
%CQr^YSp%@KdL?lt3$?fih$rX^B`k(K@T@5n7d0!!&=dEfcjb+K5]c,hh69L*CM\^NSLsi8_fM_f0u=s%Rp%"T?ru:ALe!sdE/<pB
%#-H=+@F3eWg/.?QaP=.;0hK]A\Ja7]f^k-HbqRf6c>^=.7O&hR_/]WC[)FquE\f(*SmcXU4s.tmW8%Y$+r&*:Q.thc1Ct-Z.Q?ht
%)$W,u\H1q_GP<#@)[Hd=2!L[gi1,aK?=@kA0235'c&IbpNPfj[6uG-^Na-sga,P$[`!d&6DP7+oYB<=pVDB4GjpI%dH3R6N3u3#J
%(=?qpgr)?NkmWE\'m4+!,];O#_EL)4\1p086XSek@uMV+q)]!Dd&mdtAHB[XYc@nRr.*bg'A%V;i,AdOb2Ja#CE.4UEXa)PJ]#b.
%E/YMj*:?8;&r0\LIE0YdMT)EkC5/t;kHlrqCC.q=W!QpmNme9n(>Xqf4dW7C\@%\1Lk`mn\e+irYdb"%"at`W`Jn=j$tXs/'<2%`
%#6TpS=B]s*_A\B&<bL'L#8fC.XX6AL0>Y0kiGY%I75/Us'L8$+B\\9KE^[oRTQ*n<S=H5!\G>>DVM]ORDMZ)eZ<Mm"':bCKdiFC:
%cqFT2mqCK)d3n4\d(!Ln<MXR9j(8=ic`jqTa>5.[YHYNF`#\C)FBq5Ko7>9A9/(6QJuQ=u@,)12S7&tr@,,_kO<3"]gl=C30$ReZ
%-m?1S!95E7Y+]p_=PVQ1#`^dH\?SgYG5;Q(Rmn>BKFKJM)Z(A5Dckf%c5"MNT<Yo2,lf-,5]JkLp&lA?K5ne68'nCr(cSlBSVdos
%m0L<6qa^tP7Z""IYJ@Xg++]^U%)r_m&^rqp@,15Wd4j.f\-_0IW0AbK\&PjOnI1B2';r:9!QOL5DA^^(\-_35B9)XoluM`L%P2Ma
%Et].?='47n(.\SSlWDr.dBLFGee7Gs^ppe>L3<[ZSh',7gj3%jR?q=:g,s,V#0&fMTgNa6<u2%Dk7JTNd@=u,KJP/s%PbD]J]1@8
%T-N^(@;ur@P9diYic_kB20CHfYHWt'`o;_1Q0CkU/8c<OeE#Gj\7'MY?W5#)`]9=1l!.Y:Hfi"A5@\]NL.d2RJ]1@M<^l1X@W>oB
%)S3CdEDtD[bXY%j`W_A"3!82q%S7Vs!96NT`Oc/jNB"Z!/IaKQ2_j*f_(cR]Rg?b3+'F/7;o9i+;$Z.4P$2HOmeP9G(cSiX#4$Fd
%DF-PO"%E`YRfIDkWOXf%2eG;u":^<Z_2"_L1GE]1]TZ+P%`[lAj'ULK`XQT!K/R(gEFUe5dddCu`fr7@?k(,8@XV-f8)r`gYW$_^
%DJW=[MCd/bZ-c:%1[\r3ML=[C5iW&_"CTf`:f8#i<`9*fYJr#E'>(#Z3s'FrmL5)E?pll<)3#TiZkE3BN>mD9$G,$?\-_Y-C7EV\
%*DE9F/feW\Q&c9CZ+0+1K'E]#)i?\.X?$tQ%&>bI!Q<7H3^D(FdB-&B-Z"Rs/m\Pr3XU(K$=^[Oi?j,04>=;83/Qi'!dF&ug+*0k
%%,3'"8&O5]Fi\]Q<"rjP&7)&L_fN\>faba`#U0:8B*#`kTdRppJT!>^Qqos3i7gpK:iQ1Upbn!3Ff5eabnL;/(mKSiUI:`VZi]-f
%I,nKKf\;KDplp@?]hKBa^cc>smDN[q4@=%bmXjoSgD>25o>fQEVJ&&@L:g5'>,%g:S8G!1;*gaGMJ<<1+DWNp'H#A<Lt>hibD_=\
%QXZCanCb=,5-VNVChl+?Xr8V)'*P@C?cl@F\@;\M_P.b]4oKR;\b&J'gPD6GKW6?d2M;K&C!:P*M,+BtVZUj)8-::nEOV@(2PY0]
%@A1p?kcig%3R4=h_/@`"UX,_ofPO_FlljLU]?LJH_!n*Flo(^'<+j]t'NjqF&p9[>*sDdXa5'49G6<!BodBL8:q+hYVF,O^D.8_R
%Yd<A-Z_9'nYAgt=J-,m=a5*W"lP-Ol\D,6?&HQ[\Ttm-!]s5Im1E-S0ruH9Pjs4$ZW7uu2,[tgbh58DtO-X.GDA0mMBg3V\Rsm^[
%TT6TX@rGeMeIm"oO+eq1=@_0oc7A"-($[\%@aO'D\kN3VZ<@Lh#'M2so%0PhHpfh*4Z_db+k"GF46SRG#+9tH!o9`+U!e0sjp+(=
%'8b0?F;lNb1gblQX)p>/)0?fD,#GlhFPAP1$aRq_FIRJ#f/M&n)Sd*<HjRC/<#5/")!EmRM?5=JkVf5%I?<OtF;kUC:]BdLgQ&eJ
%0OCn9[pf#=kg.'"AlCi^gG$)[-?st<r"=+@Rj>Wc"*E9@<h",C#MhiUJL+BbgQ!,dZ-8Ti.,feY#NdqIbchb^0Xl='ie;R"D9=QV
%Qg:$nNj,DK%!!<ce:<eo\P9;$-<7/j[i'##VjheLD+6.?l8mua9.&+!B#ngJ*a$o8\(Lu(:CP<].epj,'kbU)B%52mCQR9f0g]7V
%aDJt1:mEiTD8JR/Q3OjY&Y/WD;T%8/:b`B)NOR0.\X)97[uKN3io>6qD5TW-H&];X;R5;B\'5OLDQ2Z5ZNPR7CV4Ma7G])>7!fNp
%Qf+uKj)%_r#mRS-^ho+`A1&"/RimoR,[(7e@j@YOB)lg"5B:=)gu^VA:@]<CRmL$;:D.hJ1KB(D@2!ULR$\:/=93:QDpb$W8AK(U
%H3D_:JD21RMkjPYDNh$?kW@i`,Ll@JZV/AVof&3@kdKf]-NeHp;.ON7B$bB/S)`-d\*:ThZ^!T82@KQm-,)_%7]Yd)*iRiWR4dnB
%l8BBJBX&!rGQ!$X^"[QRa,q\E/i3J/?=_XCecj#U,+D@XWhn0cW/F74)::poBHRX-0oZ5oW%(^3Y<T:XHUMK6]hq=^"mub>H6cKZ
%jj))+N/RRRpU,V'm@^_%j(>B0R#u8r"GX]K*[TY)rl>H%7_10;C(iKr\'Z`H=cIN-:r&36RqDgIO)rH\b]ROtGKOc7JMCMV7_-df
%%l[01[g@X`$)(461Fk(lHK@].NA.?YPVgO"L8@:fHV1hCm%nZ+@^C6A,h$n]D+9Nk!REa7BmC%G[ubL6<g1$sUYV6Y9%B"Fac(&`
%1B0hUbtL=Lj#,P-=;o&B32>;A!/TDiNHQ8FRHWilg242&fA;I0)pM(MC:)`?KF4qZBt"E4OeoP7DDQ^&AmM1fk!Nj$b\4I?.n036
%d;ItXPL-beDDSdhMO#.I2Pu:,g,.N#Hmb&UDm\7m5&8QH:-cppc"U_E7SXT(k<&(>,^f]6S'c,3SpZsqDHdm;[e.h7`)7:dPSrpJ
%D;Pp&aLc:,nb-\Xh.G4R<F0=NgOa!NI4e;%VXnfFT(-\S@4j&kX!r-Vd@A4gmAs3Pc?ZlZ(1%*2,S<p^\"%TtD.aUTSb$`/cjGQ$
%nSZ8,/g]ZihJE7.g%o.<h<*qkKnX`?+.n"uN-?5g\fhOYXRg<SHX#XWKQeA?TCpj^B:X79oiBJ]=r'$@W'oN!hJH;/YuJ=)DBk3E
%PU.7:2J^%fmShtZ</_.NJ.ce,'T>@TNHlI]Ob@+jb.N_cV(L;T[kZ:,&:I$\NJT9[V@d`>$XfSr]Zm'@bER5j35;aM..K3M;V?ao
%ibaO,qN5t@RH;p?ke,Y`;+GKG]8c8%Jf0PlS*BW5SuoZ[\;%0'N-6/>lA7XqNHUd%c"U_E7bg=r_i/^WSJ',DZ#1d]/!.?jDM,W'
%^;5bPRsYsH;J<_t`-T$l:?UHQ";XD(nSZgZC]rR[/oFSWPSs#"\=7XYM74AJ@A['MhF7mRs5q8S4=cl1NKheP?_]fd;/`4\[<OLm
%D$GT2(cLYrFs"^o,N%AKr>u,&Skee!"@tSE1\,D+/36h#./C<1,_bKIHlF#uccpcP$VOSQ1i,\MD<;.^PbE,91I[gM))Li#XQ&#u
%j%-o/P`MR#/VF;#5g5KJ,N%W<1aiL)6)L>MHmR\,mcfKKc+T9YZ^M0(r1&/((*Xa`:;2]*:&<43^.f(T<XI'm[kX?D(d%OO"/RPM
%CZO6YV2idA\'YVGTQ>$]FV&rhgtPrUjCFm(Dr[1I%c=e*ftp/=)>?$2_(pP\]o?[O+RRt=6A5Cl_AW)+*Bt7LGOB;Pi_+;:pGP/%
%3eP;>HQ2B5fk_W#2I1bYSi5kN3;J8Ojc"L)bp:^#eD"r/L%)-?Dd2K\1U&s;hF;Rke8\OSD*iE+R0ZaVD7lDcH#9>5[a]mV&"HO9
%j#r']F[j%R4K\ffq^D+q>0*a!A)9[#*L'NoGT/Aij<qn#9Ihi/K6J9nL`sa"FrNH;bkZ1agOlM_buqLVnKf8HdVUfX?Ui=X5^S(S
%I8e:*Ceb84G/eA7hA8*`D@`b61$@:4<.CXkD$0&7PC5p0D-;LQgdno6(AT:L[r!S&9jZs2h)5Q"Qs%qk[UHhA1iL[JSN0-p8@FL-
%/,D,_CR\`C*:bncD>;=#SlMe-PgYa3ZnZEMEXZ3OF/!N=6('YFT'\q=YUrVrqljmQcE[m\gl*6-P_<Z>NDaR;:Po<i1PY;`L&&26
%Ch'D1,O-0b[b4>TR)Z@i(?#@6%,5SaaDK5,NS2KImEVpF#BH4$CP-p8VW++P]9P9tG&>aR=\q.;Ec$&R@=q]%`tBDS`iNHFUUr<t
%,6Ma1)nan#O,UtIX,XT#KVd.4'71B6c7,kRS!iW:[+]<r[*r`sd6d_>:9-O>aD_u![Gf;S4)C!n%p!)JcDcg"ip=QRWK!-QTi.F:
%C?+(YA`V<0!!5/"ND1?Q[2.?dN(eRpbFk&5PD]Xg[rH+,8E>/g;/&C#&l^NT8K3SSO@CJC`ibMm#WLkm7d-%8o8Q7Ei)nFg:3j4o
%bYE7$D7#B)YOcE`bDjIu1EpZm'C5*\g1V@o(>]EcL>!\L'[<#P;:8jH)i:r,Tu*n$d:f:fSg;_+U<T>6MA$nbp7N<>1DXg3R(\dl
%0i.k=,p9Rc72p20GNLoF2DKX@c?'tA_YH4(O[bhu4c2en1tmaO(^N?M*c8dNTU)&<B]K#"-T[;H%_CplqN48e-T->43KH'N7,i![
%d:U9]IdAMC2O_22FrkM-0G`)n[-<V[,Y"17BbMIU.)-@._n'6W]b>+t!b"oQ:8CT/W?a\@B`i?6!;JU;2HlnKAk&RJaKg^KOZ$Wn
%2n2VY9mXXOFQO8+M.pAqZ:^rfCFCZZq+.>Ve',jp8XmCI/rr][1r39V0OrN8^+Ha)NCfUB?9Yo^8__[*6+PR*8Xlda0'&-@>JPPY
%l,KMn,9JoZF!b`SNqk@aBaa(f7j;f\,]<*b1T:XW^s8_"PRudl:`aHV$)jITV9rn&KSB8^7N7!'gt,;rbn$(>9OT3p-Fup`[h3?'
%`=sqc.?QML93eb9Bj8FsIcSn2(ITs%cD+*MQWq&lBVU,)e"'!unI-'iBXF11_pbL1BZ%Ps-I%K=RoVb!/sSmFYQ9U[)ND2%E0UkO
%1tjM&k7Q3W[$a!FZZ!jY%G+F$^)N+kgdcs*SOZn_1UIL<jO"/m,>oG>7pE7@3:^_rc_T)Fj3_HR$NRBUUJ:5R.(GO4)fJ2JJ'Oeu
%!2#tBcD-@BTH?"cd7,XsIN",&0/G*8TkR)Q'G#7#D1G2eLbolaU@(e<=%3sBK'uC5D_0UUO^kW#BEO)-AYC!"2W6^Zs#1^1Zpa70
%SOK%<2Fe0nb+d-Q''npUUFfo+:du@?]((o![o42^Ehu/f6YWn>_+e<ploa!\Zn\D'7\n:J0TprIOZ#-cfKXF$D/P1E`_[jrDMBds
%O[pEC`"luJg.WB],YB<0`nKVGd$_8/mqo2a@+$B(-W$NmBlguI6Zj_mZj;TPN(KKHf(QILq;jjQZ4UehHhWT;(Jc]D_VQ[%"Z%?>
%VA)L'iC]oj=unDe1a6cLh\n@W7j;fl)>(g;UeT/mgQ=uFrhtW?c$6U(Bp$uAnRtS:fu9(DRr35>[*4b)RmmMoiu=%;e+&iKg5*,F
%Hhu\koCU5W"I?'C.F:5q^Z:,H6.ho\B!#8^V%8rY0HUi?QGPMtK&OV@g6DmY6s`tg-M=t.-M/jj:.f`al`b?d!+ocT/hB_1)3HTc
%%"?F4p'<`(@dXhakdd$nAhF[O"^,a0O`$%I(ru]FgZo)EmQlb&/JT9MjW^:IqAiEq%oTT&7jZh8Pst6a\en2\Vgt+r49-'Z=W4Tg
%7*ob[CqgWh"7jGu!!+$Hd:sUI(#^Hp-9J)g2gdb2[r>0?Sg'mn<k-],U:NZNFO^V)bic9[*`4-^%gkE3B^6A-'dAU36^g^NHuoY+
%&dLc=/2!n@/1r1m-O[tse4'flk+JGfX>!/-#'i5ff]%5m&/Bb\P7B*H@d*`NE&;8JJDet?j3pPP_%#]#J(lT?JJls]7uO;V+:!,k
%+X0h!4KInd1"WCBJQa:X+8)_dP7\MJP]/_h.j-8h5n1+id?7aI/k%3)cYkY`:[nI)kd.*\CU@X;,+p5=?eN?`$H``R!!%<^4+ku&
%dE_HU+(!_gdZhjL@6P9g)N*H]G_Sn-VZr=n4A4"B:pVHf.rt-3EWCWpaFcYpZD2)abqA#t!Cd9%%rjQja[BoEW%&p7,3'_Q<iZiK
%WbB19.q4?(JUAPof&A$L+:*.CGl9HN4L>`'qZ;4]U`OfY"'P0P#qP9OUX1%0Z,[^^$K&c^N"A&n-Vl@s+JmNa%/SEqU'b;20uEln
%Q_!VlE:W&O+rJS)lUK*S=-8ro6"+h11.l?q%`1kur>"Ioj)3kp:'D^iF8sVh(E3fo]D&6[kb08_gh7BjJ2[JZMaoZ;'s7Odq94t$
%rM:onY<IsmMZ_%Q&7&\#)dROA.X3,=VrQZ-42I*&iaJ"'7"-U9HN]ik"6'fL&1d-/5=Q_c-I/;f.dOoujgh"Yn;87*('PI[YN-_P
%;+`EEBr3-8WFsEuMScES(-h;W,Rd?:;l?<^1*;$>`D`+cbQf\.S!%1KKWnU:Uqec`:OsW?8-9ua`^"PJ'T[?&?(=g[6B[R`TRle1
%?t%-E<7kSl;]9PJ]_YPOP[aQDFF+<@'Og0jSh[fjjmcj>)h*@b2I<`D\<0"S/(/GtaThkO&5gu0fipKD10)[%ot[Tg:J'^UY&>sN
%;`Z_Je.)5H9Y>&t9Fd'<K1#im5*0"1>+Pba6%k<]!/uS,5V>0&Qib>EnkR)%*Er.j5$q!RbXU#5EMg#]*OFFr<[$L+(l(Ukel*I1
%%0Fq(C8Y4fTVs[X2JmK4?+-@<0(eeefPeQY=PeSk8H_>i3'7q$)neQBXMC4@9]j-t69#qHW+WAUisj!\m8;3b".`c(8-_&Zncpu%
%+>qQQR^-i:;(!"lp\8_.?/o'bK1MTF?f_'l'@o_C[B>f"$B!9BV=7mACp-$C*`]#PBMK".=qL',a>l`,.^!3g&*5Q.W[F^O[Ao5n
%!6qRr7_);;QZru1'g`bdFB\o9>ZVjs/4."([7a(AZp\_d**o?TTZ%_ra^S?h@G1"/)T-iX&emH\`L3*g`0^!8@sJ;kW[%Bs?b"1F
%8]q8.VBAN8%mD4<BK2S7WlTJ0iK3dJo>.pP'e2^H##M&K;iooL$*af:-E#:<-pe"'K<J%i3d_lJhca@t&If(s,6!,&(aku71@Q@#
%/6K<JXH,!`Ir5o,+di,nTLqiScP(;KdNLMg0N`Xo15Y`l\?^B_BMQpfk<fJ0J:h2eaupS!n45m_60bF`d4AJInkCY8E7StG(ZLD%
%6LYtl:rl+T=um/s0')?W%h)I[:U0,FY`KdJ)O`,K$?M/G0TWTH!QR:_a@N*:.uS_#+F!+9m2f5'a:1LX`j+pQT7j1t1/HC1Td@NB
%`-W!&OZ)f(;-4ERS)paa&i,(JJa;JV+rdA7Gsdm@4H->"P)E)FkF"VkQ9(Y-js@h-bZUXYT7PoW5FIe([47D%;.G?,XiRh7GSJBN
%nnl4!9V-5S$G*sP]b5`1fG[2\3(oDMf.g1I+WR!Z(Q&n&0"&p*BS0blLd!(b2G_gGlg"Uu$LFET+S;?rcWCm7J9Sem3@fo"QWdu<
%L6sa&fZ<9YiQe6OiF_8`FVUI(5Uhg=gc[*PdUON"8-)s;VVl\aCIh[tSlBUP,c-9RYs[>(>9ZL.;k)NoUm%iL1^JbhB65;3^2@g,
%?HD">]=&;p#%hh,UEAA3edemhr10)U0.;(MCnD_D>qWKUAAd1;/PccWefura#/5JN$q7Oj7d\5k;PFl0)kM_G^Hl#halTE&5,]#<
%.j!YEZ,K9B,Hbj6_n\WgPa+KiQZZ.$+.9KN,>a=!/^,t;$b>tRRO<qSA&ma=7TF?m?ugXf_@<)XF!7KmES3I%3b$;PJMJtJ*-#!Z
%7"b'N2E(%A'OuCYgF!\CH1EN6=KrM/HemhfMu[WqMsNXL;lp/_4%5AW7,JZ!VsX%o:Qj!/+UQ>lN.ioELc)u`%8A>W3cqFJU-hVT
%Jib&b?>+;.3sF0_geS;`BLc1oZ>EOi[%\"[B(S\H.p0l'qV1;uLEF_6_-0(]DGT7VndH%U)&`!^^MZPi9LNucn2Q>e/#u!3:)(h[
%.eQ];GlNjs8jhi,U'NKH<';Td#u$S_:&YUc?8*9EWrb`MGSLq9&ui_AK>'>#3$qKg`cqK7''onT<IE5b=,XRGr$BpL@ZF9<U,AmF
%KiTmef29[-mM(g`"3nEQ#:*WNgU'g;<q.N\fYu!Ugqm/T60H"j!3kiZ(=EVp#pBo,ToN#g&$qPs/b2SO28jmR3(/6V'"Jp#1K\7I
%%n*a)3nbMC`1+4>#8<T?$:#uAX!ejiT=$C4d>5Yr.//$@JHB#+..n`-"a$@"$BF&)qN4AV+.*'/SmD[9"fn<?[r&<&QqW'f5M-t\
%F_h-O2NV:#F-2b6o[8/kej;0*;dd!K-4tsmn5`)o'14-=/ikN`hg+NQ-P?H13`!as1cPmDouI`6646U*1b`R>DsJZpVUd`^@2P8?
%^P8RMC0I"SGlUt2VZ(orod.plR`#X4PSQ5C64p4jeIo@.2$/,_((Gf6%.7KT;h02p;2Slkb#a>QNt(l_.RhKh,.(IV5uUD,[le8m
%0-hTk(26)23%q(!"0r)pWWgtP!]SBF473>$5[ik2Kri.))!F$B1L#s2J.?TqKMjPL"oW!H&Ze7t/BW55J_JFX4><2?m/?@J],N?&
%.+6GC=28WH&7c-l0uqpV07`:!\FR7D4Q1.Mg.<GFfE3noJ,jR_kbuCHJgHEQ"3_OBZj/Ua"@%Y&6/Vs'V/)`0T]-09<F@[b!,=t4
%6dR<L8^"In?^e7W_<qVEWuuQq]l7QkKW'JK]g^2;/BZi0Ko$NRHE4lC%=D\BdA8_cX,5>M[52@XOk^lokE97>KX>k76K^c[j8u,!
%%E.b__Fe3nSf=hQV;%,>,#PE1]<m@reS^.9EEHrjWA_$/4u#M8ll>?l&Aq4>9fWjZE.4k%Q?8!A^]D<p7?Rj'J"1X:cpeCqB%qCH
%Q`_"G8pJE/-"UG<MDNDb"">'8-EW!KI,1JrkG"@O]i]'A<^0fep(#)i=NU=e^i1d'gQ(35G7uu^"tO\Oco`i`d^h=k4^67n!u6K$
%jW\Ld=[IpYo/$O0CAQ[>_[a`tOCS\]V^Ss_Zum##UiCj_]/J*a6u5b?.C$$12'S56Tq[I9ZB>/T-I-5rU4<V?VjK@X3knFC3Z^!8
%^q,22mmj8c#59Wi2j4#jPE5j/d5f&/E-10,P`&T<&u\H\p_hLrMDU^3bh;"&95M#Ho8?#;3=l<ga:BG'#a&cNW$=c7H5\Bn?Yct>
%!gDal=kt7%_E/7o&6h_7KEjgX(D@[0G!t%4+^qbM86'L![(SK>Al;Ha[T`,3\\iMbE8\@:q*p%YOjo2R!?H@eqM'M7Tg5:KdLp8)
%N,5B>MDL7VUNJL7DZu%&AL6n@i"70]g8G;QE`hR:OQFZn%_t[<rL*;B5`<'Up*%9;P%MY>R''&G`(6&_$p-4]$"G?bdR4K;7US&H
%?H8rUS@#P7I*rdoJ:/\%X)Eb)-WA-=n<cVT4+he!,P?.hoT"B*P5';j.4`UU@^A&%X5P<48+7Nk>?hb3;CIubs$5i(#fMuD)fWX)
%[7+b";2gS0;i;J^S7<u3n6XYbJo$`A0JcflR$j`l-\ZKfb!`;KRXk/X.fh^Iq$&r]:6Y%%9^h`*1@]3j;@aQ!!gs>+A[G,HXs5`#
%AR_+V!l%m.1U\uP!&t.]k2T7BUq.[T,Rn/tl=9*?";jq]b*3\0L9U*5W.pqQFRqb?67;EP4HDkX.OC_lo_!?D=pZI3!$o!?k!0St
%La#591?(`+\1<!UcB^MFZg(HjoIO$8mbK"5*dS%$F(PCQ&jsMX0(Y#*K.nD.4ug5\@KmV]$QBG0A'RLj).?3\$V6Ro?<bg'kJ7#Q
%,UAKsDZEHJ$ZMOp[%Mp,LL^On-n>RHD`[FLZgTRnc@[ir$"Y<N.5KR$W!<P:"p7[.THb759nq%m)/2OodNF.XJ9fM6d\6)2KIKcO
%QFP`SP+c"j4CSeh)O7"-&._+=7Z1psUkR/HGPKDK5Cc_H+1<UW@'#)K+Qt"i?]ce(K]<&?]1,_o-FFT!'2$:hdh(H,M],6!H64^3
%7$S"MN'1AYbp;T5i5,78)A@]nU*`:pE&/+]M:?6h?gpB;fOM:9*1.)pq0Z/e#BcY2"+/dJ_X'\/pn28OE#!Ep\B$@p9Bg+6C"!GK
%2GsgRKkq+Ol7c!rl1geP6om75^X#/15DeGE4=j.X'\.t,4D<kJLtZq[=epq-?&Oh-lJ%W'&[ESeU>'q.@sH&Caa;qG8[pm.=oY[p
%ThXJcC^\a@L%SY%rB+eF0p_Dbr`%K@C&t.t8hat8&h%?0K_uJ!$hVf2DJ:JX`55%)Pe_&G>9@(N'N&cGe0iXP*M:.`KJM:tD"[G<
%O65C4.n.Bf/CS:jVoi(p*?kml?kGZb-c39IRXP@f-Uoc//2LCT/M`b4,a1iUqXl()PR<V;"!ht4U>f!$U]<3:YFLD$M(0dg\4A<4
%Np?=,imS1#6t2oj,E7<=aA7r%JVXMk#\4-0#"U1U_XL^7O1jbV^kXj$nZj:33a%]N,(8:KfcE;W."X,!.c2q+mkf2Z.cE/(]2JF0
%KLob\?<AUJWW/9TR)e&!<NU7l-9CP$q$C#[H8pmQ%PNp+7TQ`L;+.6`,'bmJe[2ZRdMsSrMYM0F<B!`,AFbh[)pfjNE$6fS1fKnL
%*e_IPS;LEKlWHjCW)(f(P!F.&,MOu;G$mp5.2Wn/]-:TiRRe%XCY&'l\.AZ[KY7q5%</S>4uQ*`>Mq6!5onjJBp/R/s4Dhs;]'WX
%Oh2coJBIZ'!i_o(<lJpk'H$9^l*60L15IQfS2J^$P.AAk*+Y-?c"_c7i`SWW`0,k!98R%K)E6)&5*T]2;5F9FC?3/TndblsZY%^l
%E8*0Q)P_+Vh&-Mqf9ok+-9/*jBEC@<cOj7`-&FN3PLUP;@GhXW(IJ]M%@UL1<4.d6,SHNl'&a0Qc&VHFK?2J`"@V#X\81a0K@V;G
%#7"fiN*?H$.9O^QeXq.:!_;VZ2;?JeGr&Fq81'rFQ38UXU^f]^WSiG\+\KU]]\Qt/X:CE?Jf[as'eNDBmK'JL29m0T,RQsoDScWi
%@SLRJ\rjBF:&o;i\=nTiO1CAQMU96=&DkCIGTK+1SqCQjcnu!t+@-2j831]$c6"EjHQtKd=g00r%$BTJOpEU&2U)]h1_TbC@Xq]A
%KSO.8!0p[u(>o]Yo`_7XkG`/Q)$VMjh7F0XO=>c='7*"^r88lg(>qfZY>0*n-l\8;D\@2FB'(?A[*b$n%S'qY%MQ`[6.MSA=NV98
%A\oAT-J6qGU0olMCislN&qT8>Pt?Wo&P9>[&O@?.:,pqj,3D'dZI,U%f[F:DrtTZ"8:26o5#!p:",XC4UO++7=dXf),Vpf%@fYI>
%<,Gi*36=k4k\GB8d>8"Ufi'@#0JQ[hPM2+-j^]*57LKa<bN@p5I#"Kur,gHDJ129Z`7%M[-L.3_*$j=VhZX@<\i@\GH\O)^TFp,*
%[Zs\%!6lRI(goelQ*R!s't,fN_>8mMV9*=FD0g7UlK24^7q"/AnG[gi3aW<t$-86P$!rk_#8#+CiFpC:#n.tN[Sfbc!p,a-]*/eH
%B.a48Ma1!:0;)m;"CUPn^b>:hOU"/HOMOC+l%D-<4@ie?&`H7Yko`tISnkbU?qN,4q8))\cT[MY=`O"p6q$[K,\\ECGU2+h+?:%`
%X,mKOc93\]m#Xnu(:(ZK>:_H,[_[-cc">f4%O#(I%OL7UT]dg[l9YK_9^9=]d`e\T0QuS5bhOEffe[kUHF!0t8hT/Och&hHPFjNe
%aX=H78k8$$'0,-=D5N1*R5QBFj;83u6.T7L0$l82;KQ@3WR/-C<XtP2!Q(%(+-2N6*&ZdOZh=etP<T7[;W(Jfj)K`d>+mi)8_OIq
%EnrjZkDWteSh(/A3&np:Z@8R&-kep1[c\GsYO4?%R`NMN**'eK'ehSVT-:qtU0qK"(!n<oW:@ta<Y=T"bYQXGZH*q(JGUJCb2$M@
%D-G%NiU$,o0R:cQMM_,.*K7N.betIfi(.5)8MV%iB(DR5!n4#9hBO^ZVII=MrM3q2^eZ5nYoXCje#70/`)=O_^25N9Qp:\*"L/o?
%K#E5]0,n<W>?q[DG]laen2Oi!VF&iELDJ='G[c5H'*[kRM4G?rD7kM2+gnr_A\tYPn7IYlaY<PRZ\HLlRW)(@cR9WuTRs8?a-X5h
%gLCqd+rLBR2Nljoji.n6!h;.W*OI<6aNRkcV'V6ZNi4d*?@Z&lTLOT45p1oONV"ca8lF<0(leg7%@rT^8X:oV5`=J?3V#mY,Z<bM
%b%Ut-)V6^5$`!n*La+\u#KaO`4o[#f/N?9r.&-h\!6GNn'ka<$``/;N'9!XF9+/'(HkCZ-r`!&4L1i\T0e%6+&l9uZ(kE&N('3jI
%@2q@J1,AUU#nVh,aWJITV888JZ3FCXkXI:qDC$6hoXHV+d=c$^@t@M,L7-:p66@.\%2^fOAc:YgEhS[HP_^3uARV_1g0_:[M;^gV
%1$iC\9b;Z;AXX2C)])!.8,].5KOSa2.'",b3(_Kt).rc1'srdUTCaYEmt4\q*ub-WR.iQgR].n<-QjGMMNi\kkJ0-#(lKfTMdf?e
%gd;:):E!,k_[tp;F<L(U#W'qp"hPdYL.JL*8WgZ/.Z/=%>uG?_TZ'JO.]#!]+b@\lO/GqQ@/lD"(B>sZ_:NN@V5k.45Qk?s1.j;Z
%f,Cs3q9`n9p6C=[<%_&d5WTULO(.E"Ko'u8'`f%c,,6hL$nW?9`"u7r%uVnGFO$U#"ZVHPBm;]?*$_A_,'2!"N*JE6p6t0Vh9um!
%RNIi5l)6-!-mD?a*YrPBD^R[+n.8^5M'sas<"pN4Ihl!Z9YEkpVZC[.;XmWUSFLR@a`'QQP?t%e(UF((8D3KG!G;tA)HWm,Qka'#
%@1o-kEmI'%a!_'.d3sAPgHp@D-t9!@0euV%TNbMWTOQa'E/G7(W3"f!CfH(XP56c1:;lWXR'oL(Oea6:kTh+*Pt/'KK;pOiQk>K_
%+VdJWop8N6)6t`tI&PR[TLGZ^5nY2):a,.j'Z:(CW8-23>>W_iC+sD\_Js^t8S9aV)nS:XQCoAN=F$V#&l,/Zhr-,83@&&o&qq;#
%\u]Yda!*T#l@t!Y`@G/kN&iJ28c#Hp6e&1]'p,[6IKDD0`<)$maM$(!V:#qq02I>-C@s"BIr57l@s'0=PY<Dnf]e+"OfTj3Ukotl
%7gg2RjJOEsi=g`A)r\WW5VT%R.5N:S51)-cAQu/Gab@+,-oX:;<A)7WdD@A(f5s"EVdKf_U3K&F<A9g"HEZVE1?^,NcGJ,N\e`=I
%-qZTjW<WM7Bu/J_Q3fo7_G):!UlU;BHP4]+n9Qt:)CGZl=Ahd-jV+PB09n%1$:S^oil2br03lXq/[H)2netN>Sef);Wa(\nR;A+c
%o0AOIU403I+WhG&IAF0gW$7"RjJ#dtjs`[MKp9q8iXUJpD6tdE"<t,U2<+><l"0Zcc%3`%YV]dKk_ua/pdQ0!gBpMDnI!*7a5UNV
%=4Kc/$b:l1[MpW^<?s(gVE/4,jAfaHZ/]NKr?Cf@6@)ZHX-J&(0d4:b$!aHj8g7d,lm8Dk>Qs0ln4'9R*G!EYG%;6&pHsWdftUXA
%`Z6A)RMg'_@jXPl/.(7.6f&h1ZDcr3-YsN^A4IJt>\JY7[%Bd3^P1/n$1Vi)&pl<q_+g'`_J?qod9.i[;^):@@V,me-gG&!&N:U'
%3oH!=aTD\jUU<Is-!FEB&*/N4)J%UGSN.mNrSgrJ<eR#18-6$7'Hp%\*k`d9bER'7W6Fc01)VFS!/97]Bl+T6MMtcukHg_],Dneg
%:Ft^XP'PK<[LO'j+c@Z:$T+*nBTKAGjlDOJJKKJlRAMm1.0.=:gFFJd8Vdu#jm<=`,A)mn%T:s<)W]S(I+EE1#<#NB0be&sk;0nV
%99ra\Up($L)HnKA9;kWQ0H@G?_P*Q$W>C[`B_UfT$Gr0_AnL5t6^-CZ$-Ss&VAN`0+@^V/IS%;3HtXr:D`]0r31["[824U<'PV?X
%W*Ic6/iHoGj?\lX-3t?_OEL`0M*cZ^^H+I85"$p%&AY)(1kr[>eN1Tcd@%pPD18"+r%o6$$@B@=gS<e";:8kT!08B9OC+,g".fLN
%@tPK.oO26QKdU2c^`kdBXAmSFcS[GiPo5ip+K5kj%t.61"]`R.=rEE!PEH&JG:6re7U*?!/B?,do+Hb;UmtQVG_?8,"'_9,-+RI>
%0s#>:dnq@oGAa>o%lu(Sp4W*(Rb*a084u`+Jo?QnH(],XrJk#_0Qm![8cffk!9@[#;m)O_.cN@b&7/=64Pc7-Ya:JuJC=P1in0L2
%:W7'hZtKHZ$,sHf*hYsc_ir1NQlrAQ$%QJ(,6`9'*DuIEoc-,X_C,3*7Wb4eQ0oi+5t/rT*C523.ggo[r\SAHRSi>q=9Y5/Ub(Q"
%OlZF^ga,S!@ptId+Jah!HGN-=hBo&/nMPhk+s2Xn6f5GVQ:!ER955.>e8$<@*W*9N8.o5U$up\VUuIJXTMS0"(80#L"4i-FY/V;O
%cNBXSJ:K4X^#[%Di'8&pGi!^B?@l$tORg/LIDh4"%7$`3Er^_aX#1e@SKH+8B[Aqc6933T/(h*0<lbe5[&c]tDrthD*E)K]9=n'+
%0oJa%+#SV>KPCLhYeYs-J03@`*5tCmb4a1_$/S85$V&Td8O?R=9IB)8-X's;OFUcsW$,#6rWs77ec79>`Mc+>8!ZUtE?MLYjYHhb
%b..ksf][l4Adh'g?l=FEL0,(E@T;e)GRKpSE7U^L`APV314pbVdG623ZYV2&=VqX%IPagTVaN7IqL'V?)l1iI/MLCu@E=18:kPQ0
%GYkdd<DiffGhRsK&X+R%#X^ndrtNF\7_V)]**rn]=1W;q:Om+.H_)SqV4RsM^b^U/UBVPF$5GVaXU`4+3`9b!S#G0dIho.QSFjH3
%OmJCcb\"/YTrr>W="mfKMQY(>CnWI0ZI1c?%@\pj%Cu]Q$#6dX+E9]JPL8A4`\-%IN>b"e>9WoQAHU*WKo9Gr6][)#7<DqX4<?8\
%3UoNDJ!+h/,dD21cD5;.i%aHWl#g4?23T+Q$O0Yef5:LZs%,$O*t%34$!0A>&kIag,RV^N\b,\$ETj?"JrDlMlr0-E=D.t:7Y?>m
%eT:Rcj_P.S0D?^B%g]nbBFFN,@F7BoSSR`#,A^B0R6Y4BqF-;LAhd2i[laHF#BQL`FVsh2QoD]+GSRF:8^Fak7(JG\5j&oMT4<D@
%?5CK#akDJd55($<It`lE=r*fGTYMVQC*nh$$+Xi`>Qh@j81ffL2A^*0,"-t%.EOJa-Eg*3Y*X95Z6`Aq)o`N@*hq_7pQhu!lKn-u
%.q*A/MC9afR-"."\+""(_5bGW!!f5(.P`t0Ue0'5kq-V4N@`>,E#URA<Gi!G%UfpPP"&;nEns\kX1qsI_GMm*n<,S=6gJECX^U5-
%ZW^=sL%\Vn%#`7]aR1G/oj/\5,m^=D+t4SZ,R#<!-j3tGOOZ.tZ/5h^$o2($K"qQ.Z"Xr0q6jEGb_*5oJ;M0na@c=ueePR=MIb3>
%JNdA2Qtg.p@It1VU:_S+LP)[/WLe-!KL`VIU4F3lrLcU=n^RR39r*>^@:^)Ii!'[g8@"@S5/h0.g%Ja?mGLB2KE.^'d::5Z,LI9n
%<I9DmGLYu^h!,9g2OUZoL(TS9</upUKBCjL\ro`m6^/2i23;2^,(TrVL$/bVc3%R<jEU[4*A<SsP+AfonhQXj=VW/I2@`G?+XcRG
%4OIpZ5-d5*To^p:OE(m:F<,FGN0J+$Amq:u-u;:%PP((Nfa]cWO91]T!PJ4N)(_Og`PN$#/2VA)CdP0'+]p?iD?Z=`Vd[H1,A8u?
%K<.T^VRMS2Os<<5*-MGN/gfsg+_HoI!XT1#Q,P7Sdg5;O`)66I,)J@/#H(7.XJ97p2dPRN`D8>"Uj8'E!@G,Bj]JmV1jOl`jhZ_W
%7=GT:bss_'O<R&ZYIkb>f!31i#_UgSPU4$b4uI4YPe0I[VVDe"P;%/o=#D2?Td.@6bUI.;U'7bO1Z\j&*X^rsVsl&Yi!'CJUD*>L
%o#;odR"8)5Xp*:_O&B3"',N5ui!O_EY\GBg3fFi;_-Y8[;[_i:@0.-85b/TGe.Aj\![T4C%p^uhe$Fe^8j5@9E)HUkB6\;&F@>o8
%A&0KZO-):e8SGQ/,th,/!1GdP85aWZUf74@k#IR4H:H@/,L]3'-E@5ZC1;lerjrtQ0ht;*BT<7IimW`>'&ZgFm:rY'AYG]*qM>mj
%-tb6WJYgA^.'7H%Su/DjH'#.mFQ91gEc@\UBk!fP&UG#m:(fVg(QtL%-19gVOV/L#F-EP:aTt<-1pF#ZI2+?BGcB;WqK4-b8Ys]\
%>L&[u5u&1#aV$@N@"G#=!9&"]d<Lh'+lT-D.r`cq@?hl<ZBa0&Q]q3q_P@2u>.VmJ>8ERS$].!fOM)Iu1tMPf]ss7l,=tQ3*'c'=
%MUWqKl'a1e:kc2G&U%j48/l%O50n<&rQOi<,_L8=Oudu8TshF.Yshhbo$q2Z#0bC/<k'804bR-"i?cm1G):(3(;(M%<l'.#VZL/F
%OoQjojNG@V`mR8rB^@u^&Hq>I_hd#efnT^r9:CJed7J"*7mZ`gfKCp)ICWVD6B^be;4fsVPb$'>HB+/0=J&1<?Y-qq[#+'V**M(F
%a`V-%<[!6/BNBe!ln4,j_BMAfGr/JK(PW#3f*oa*F"D3I$]IJM#3Z,08-\$K#bi<&`8\Rm8**nk$:ARYL<,pbj&>_O/lJ&kM0:":
%b/?tcnB!Yp5%EDX[&^(C:K*DR?aR'"Qu4)k$Io#Y@MMJ-:AH?G[g!H+U(SJ\7Y";h!X2Oq=1-SG0AKJ]gp%#!Eo/(M9Db\em6BhP
%kV.Soc&jabL/asOB7tKWPK@JdqSQ'+LPTK*GVTeAa5fLN:k?gi=ZaA&9N%MjdV3`W&pZ1J$S')R:>iGbeXY/N7L&:BIY-C,]/a=b
%/DnfQ-qXOVU.li,J1O%lJm#q3rIY98<%%-L;)m`PFb@``=@j5TE=tTJ7HSO[/PqMZIV/dd6$SHYR/DE#/@^ll.No66)\od%7N<&J
%T:"Gn=q4\-2KYAuZ?/9G+:F*eW9Y\IC7=jSQ@Zj[&ls<E/5%Ac@8HtB]XDg=P/>pAO[14e^=niT(#+8gU=,":%HNJ@L"IqFq']F+
%NMpL.;U^[FT-+00rX?"AVZTr^K1,Q(D%`?C6Q8.F+c/7j6ZOYc0eA^.b>E['ZWKU+6,mM@%$WMDU-pI(Vl.>+B4P6++])M98]3qC
%08gB%K02U<NIe&7[k,n0fFmLALl]K%,%\XSMrJb%AD%Ah0`f'?R`5^3%cdb=?7AKp0=g[#n.F2k98theW@#P2m5%R@Ppf;fRY&.a
%,QU.A%iRD9E.plk!L>"?%JVrLECan8e<WGR+1UPN,4HH/nas[Mi@*"2Sn%$"DRQugp,L0EV*k@m@s\T`?._t#0]=^!+Gkl0(&1d*
%5D7(VTK0CJ6+2@dm,o$q0mSW2b$4WrC#Rg$]_PKR*Jt$mB;!4Bn"@A7Ak,)`=<:4/SS)%/Te5>P!]58[N#@]4)CYrn2*lgTa\/"E
%,7M\9oE#-aZ"Ml"D%f6',t`G-*F8RWJ/$HH=HQ5/@SanC=h"`$"G'!)G%`j1-!AW5.oOcc7*l)h"EidlaDV6p^s`<18Y3aq-\3X[
%9RPSIUtQ275G?4fdM,.5#8QurH?c3q*^-3Q7I^RH74C/%N8l$[6'c6_l8BClk9:LJbj=gMU9PmY>Ko"HU*Wl)ZU_;7)kD0+lk"bd
%6sq?m<IS`qYemQ_hC>3.j=35t'BBGLT@08A)+`^"-7L"[AU4AKYmjU"_Cha$*m087LrIH>;b7<6N0FF]V_Or>63.fh3fK>_*AZU%
%O>*,Vrb_8hki>TMR)Gc8E=4(/<Q:!i]>dE+adCiB>6P!qD+Ui<\"3Z9N118C/1a\t88B-YR*C58TUF^A1NuJR?p&kj/D@>8c<=5B
%jR_MWljt9I;HLX^,7SF/+Meh^8PerO4;(IYMO4Mabp[dk!.\q^#:01>gpEghHpL5_+^C,'TtZ2=[?8n?=dVA&m70U"&_*?KlAX"B
%J7k.p>>BZIa"X\"H,iSn_cDU^->$/4W`Tju2$dc9JpGB>,4lB%>#?:`-M?<(@21BS=-Cof;b;[SN_#>S(onjKOdce3M_DIX2h]13
%&tPF%XGL\V?A/8E)p/?+AjHqi<Qm_1gptYmNI`l$`[\#\KX+Y.&4_jik*B5nU1$15PMX2k8u.a=F7+nS//T2Tac:aa&P:K.Y?$jE
%oV:>nSgfjh(mjok"*nmNcd*._U9Pu]i-1Ih:6T*S8[75%BWesR,U+mf_:Xo;&ICj;ki%Vf//ZlHFgi8B1DhL>Ld^.irq/+4YR%`O
%cqisqWgO`iT="-N]c!M##_fKOP[0H^JfGqgX&.m(g#l3u7(=g`-%T\ELm;pUP<i]@-R6u5dKU:2Xp8mnE$3_Q'/lUi=?:pfPP[Ji
%9He"%?4*&KSk8o_8uY6J1-=qZ@ag`;JuURu13Q-0P?3W(.[\-#B!Glj7@BQT,go<H1uorZA/'u9Y]$ISKe;)V0]CT5CI:0?GnH+T
%@ZHjpCZX(3qZ+qWFJ!<dBZZ2D7[c,".E^-BNW3<CO-#<IBI<$U$SAXZ7b&\oSL"@p8D&eoMNCgD<acInD,BK?HVMU@K5]YIBFYcE
%*FN0G7<S^>lD+i>"l*h/9h+.<0M)+H28ZXuGL11N=@'XO,h:(J/3mYQ$E>iVPc,`-NQ=A<a!IX8PAH-'`G7SWgJf\T`C<1pc\/>M
%kDTms;Siuip>jC#C6i)NCJ[>p!=n%HV/E+p;8`ZaCJr0H`DH>ang3,C5XEjaPrc&H'IrfB+KiS]$P[Fi24bRrj/!D\I\@QJ]T0ss
%?52iV6:_!),&>0lauI&?E+-&$\-U'^;!OJlo,<oaZqYbK9G'BZa9g2ti"S1dUsYuIU%78T+h1C_&,g3A"]OVAP4]h'f/iSL>IbFk
%^n@\kg]<,6RVNgOm".FNLcY&sdmUX.;HerG;N`L*rDj6H&TB-\R@VjjWSOGs2]r5)0YjCII]%l^gsB.rX)Y?ubDO4WP-u*Zpk;,(
%:oIbV3Djk[hE&bI+fg_(Zm]*pQk:sIA:\K"/5f-3&RXZCf#hY08!R?q0'd%YqMI.)*cXnA),/Xp!,Q*iOe)d[GrW?+(F-buDd/ig
%&u;CZTc6=L[+W5/OFkQIaBCj9Z`>MV>kB2^2]u$&>(dcKHC._@DmQ7jPIEl.kuDGVr*;mI-`H(@FJ3$3":S$\K;6TGES1'#O@Dm]
%qa'kjm?*]bQ3[Sra[nU6DLS[pPUU+>jkSY=WFodr,_GAK;6HZL1J05f_@jAYBlsG%+/6OZK@+($"Q;aX5##'Q:66=_mKgu3::LQ?
%h%e&u&\_5M4fW=$6sTf'lE',Qq4@RS*e%!O7*PhO6t_f<lA@W4!2W6]F[25-'KW[!GhJ#')Lj1f<]&BMm&\Qn13EXuB.OT_nce^Q
%a.Yl&jrip@;WEfIat[CnUs#>]ZD%A4FBb8%"Pb4BGfdeqBsP$Q0Mf68C&h9RXMiWSZ=++d-AK[[k9K)o`1do#Zu\ZDnTN#Vo"!6+
%Yt@R1!bK7;Vun0G5GC"4#W>E*``PWfE%)D%.DmF`n/rA,a`TXe-=eQ+.iLuu0X9l;KccbTW*&^i"=Ppm-gE!\LkN*V43:;o44.We
%ZNuMa;cU\XXb/$7!Cqg'"5^N6@thneV$rf7;K*UGdL5]6o#5]=5nt`p>4cQl*3G1LF%G4D!9EBu>87#IT2S>.?FSmX%RU<Q-k-j3
%;#to>SX$H?IfAOX$]KIMRJ8O\E%2O#ToV!&X<UiiZokIT;d;6X9?'+Kr+D:p4_</@-S\'>"[WEj&B<1"1<$o'HG\-4`'P,c\%DLq
%L\&DaeL@)3AedTM>5;@X#V\P8Z\h2H&/):D/Lsu1LcN+cVPE4!+pa-H/Oa\g=/#%h7#7U'rA4XU&)eXDQn-$&fpDp?XV0^(0WQWP
%pqT7&*+MB:#Ak5m)e_j<2Ls7us+6c-+pH,JOS>BQeqeIR<[GI^FG+mqKo,\DIg2mrJDekdL5HjYSkdBg,i@0F?tElnVW5^-DVu\^
%?pG!e"g^p*RM6E)8<$+,@iFVVZkeAE=Zh/D:/_9,Kc*jL.%9Q?HV&f6.:^Pra@3LlJd?`=Yh$(bf8boV6r$46@utX\+V5,gBuJ&:
%2)hJ13Kt_0;,.M:I8na7O&a"]FD3aC3&Kq%+S=_/bE?79$!P[/MQ2K/Z_fSc)?[M*M.D]5kLcAGP`*CQZ\Fn%$\g;m'3f)*/"PQ?
%kmreZQ]t*u'=Ba=.[iZQX]SBD(7;CD5oBZm9OUU]Ub4R1@qO.Y%EC31_'>O+<Wl7_nDe+l:g"'o\G`B@!J9c*F3c^dHgE:$@#@E.
%#*#(l//?$\Gg"])Ti3M2]U"/lF7bnNgmU@36&EN^FOX9O*(hMge3.DZ&c*<c^d3q-7JWnf4Xp+m:mVhOm$2t>LaC.IndL^_dtu-]
%#`sEd@soBRX=eh8A!?1JZ/ruG\6W=B?7RH0-2aYbEIV_@_DoXkmi(=;GX@LcN7.m&h(6!YPRKDYFW$UHBJ'^0je@%f8WsL(gl'Og
%Gd96.Zn^h#]oX1I$b:VW:mIJ?]G07bIF2fC*1Sm]B8!)(JHglJ.qfgP0SZ&s+it#))JqT,lTu=s*.>gPU_%.dZUhW>Ym#,2+qL"i
%881m?`\_;[@FR5%.nf>n>r.:/ZI\:I%u&IV??j=tp+6_%@l(O+WP4H/`%*<hOJA[@ck,`,='iqgLegBa?RDeZ:'!EXU3+JJenTd\
%):iK`5gX0k"VZ]MYq%VO*CH(I,jp<f3X3u/is=+pioeJ,^][$Z4%cQi_X+fp!1@X:#NUodH5XhV'=`oWdc>lFRPl]t&C0B'_TZ9H
%A@4[\ln(ti`?^3lol(X"cQWnHS^](MOKtNO\d'1rHXSN@(FHFa6r7@>b#SX_<$?$TF:/:5c?tp;4-=\sdO4'5<1-5s!MNE>V@<E5
%+g]2r5E_^:EtE:'PWLFSe(rbM0nXH:-mV9=*4#F63g7+W0LMgp2'.+3[4$-J0lJM+MRP5gVZe+D8buGQ<b?1sP,qeIe6Ru0_n:Yn
%n5+kjX[#BiTHoKqdOC%2d#-@FIqT(Pk3>Ak-#,(EBu[$e_j`J6fh#0q-03;nBq5Cb4+PZ"?:p>72&kPO4K<(h%rDhH1UlLTcnn[%
%#Et&#MQ?l=Lo+S127j/D#Kg%,/NuJU8k@0GZ3N*h^bs(.SI&Oq`^@,=\;ERP*5?0Le;Q]bGCm(5E<(QabFjM`%/iZ?*Meuud>B4g
%ft[bQDM@4>^2'MrE\5+\8eab$_XXG4-7fjsr?,&4>I"nfTiA%*@(6f-^_[1on0\YX(S*VXr=_D=OtRhX;.cVX`$0:b@h7MFn[0Rb
%6#ggpesOs+c\jIj(3(Mp2%#!T.0^85&PXKgMtkTIX>Jqn@=VXeW^LoY@O/^(+d:t0<Y6GnqUT0h-+@)*]gPLSB'NN`Hq`LS%'lt]
%?p`8N!M)a3K!q*n(uJdUQ_pTg8.qGL$;I=CNC:fYrZ@pL9QHu**0gY0IYX7tTht"VU66kASHr(:nq:;!kSeFJlSN:;Puh\Djl$f)
%FFE(e"J(r;82g(2,>ZEAmU8].C4JuMnnM([+"\\aM$((;9dDk60IEO6:CTotmP*!8#u0Q@3TI'iTSOk@%G9-_eiZmmS5AE'K*nMN
%(aVZa=!b\'Fpb#g_!NES<b,=#]4keVdiHhC@RfZblPCJF"=(1??NN>B<8pJ`@TbG7P8Te(8PPK_-s73nD/L6r^#G"e%F^JpG4HfX
%,0<Ya.^)7=X\6>c!]T[Y#pm4X[KVacb@Ld%ceNtOQ5%>Z:$<0$-#Z4mQ+jXSI<BHKaptL@#XOai82:a[,2DT(>"899Mk\cJ0OQGD
%-Ne0N#WROt$Sb\Z4X7+'q,sn[%R$I8U:D<jKL$fsRG%^K--q,Q9*R=$H)=GL,So@49V(6na<G,5'Vin2ZaTafas(kAX_s?N)-F&]
%8/;Xn#pLBW96XuWnt=El7[`%W4tss+jZH'e\&qpqf@?.(,bYVK-dXq_:PN)*6k[n_5QIh^7qGgS=4G6!:dsCY.H8ic`XnG:1-G^C
%*^`*KpmGU8'/G^TVaV'1`pj4>[r&i(7>Vb[e6!)fITjiNo#det<,q0.*A4'(%+>Fc/U^qX&`g)Ml*Wd6,)Sh6IIXUG@,sqW6-EHB
%dT$*Wh)e1hU4\C@B%Xipp6(9Y+IsiPMZ+n(GsU)WkC*<uj7tkQl03EhOPENj:bF=OS3qsj42jmNNmVe\XVURhi,mA,8ou=2FD4*u
%%KQpc@E&)6ZYErl)*3Zq(i%/e<ToP,7bZFj6ALemkjg,g#BSCoR)u9mL\%p@3(h@/Ef9]%$+`Maf8Zm<1E^2-$d^o>Upuil*6U7>
%KA#n[bU>Sd2AG=6hLcmRkO@f%k^0;eS>23Y2tZ8/X#.@I*^j1M7(*<<MQ$V6;k$/+-#6l,jq)/ohYUPnNg=`-7]AD894;e7dN$$C
%5`NjadN%$n%fqnA1flgUi\beJ\YQ&e?"T**]5U6.arL@EE,Nuik-,BD[qQb%M:o4LPaFh?3VCLk$?K+>*P9*,eZGNNf(A&00*Jn\
%01T\LFd3f,,DQNJaJLR[f#"Yb/QYH*d?:XbB41fSr19n2=Tian@G0/l/.>lY,@As^/;edA(cKn*MAP.*/hVqHO93idD7SXOs.i<2
%'dpDE?!.ZF)3joalH0jc,r,S'X;j6ai5_dr*;gu0[`q8&i&mYPZ"qLufu_T(CQ`_&n'W/96sm#TK.kahjWIS0`4$,s@9HOYDl+m@
%T]co+_BpXCD-%.<b/mf)&HT0r3B<!/ZmueQ\a"JkK>pS\%Q@'0@q^1/r#COeG<NK.b>_84RU%!-jS3cF]l#lNeeUilSdW\Dn7t@E
%@D%]-".5WR;/U3<8]jU\q:A&6NqYjX<nESBT]i3g4k5caX%<(F;)o#RdCV)ib+V7%(hTL_2?_.pm%SNdr:8NZLruDoKRB5eS-9XY
%:MEdnZdb#5^tVggc3!5ur4T/RJbt7G(L:#NS4:T_R>]4=L+,qQXbk2O]La@sS#W!T=r#TUVQ+YZIhKjb'pW825G2c6iJ5XKSnlK"
%2Mms#>u]+$ZAAV+RAcWe3A/!Y'pZ,T$NM1$7-,ti(M%L17HH(#(i:6]j_Q0]kb<*2.B5-^C<E5\RM>0a;iY*ee,Z"Rb$"$,@>eig
%Eo^K#<*[n:@m('-0'8UCLm'$JZqJPEMYC$%;FT[Y1F9C*9N2KqD"8`K<0"n93MoYQNeD;KNLc!M=UM]lfsus^=\f5a]-/Y:R3:e^
%-n8lC(7]JD3OAni!iD]4N`&LrNhUP&)S<5I.>LM<+%dH@&X@"/I+OT-5p=daAt!b9MkJ4FC<D\/OC=9K.46^mDMZG,1SJk)PoK2B
%7-3L'WTF$L!Ya1Ad[R2jfRkLo-U""W>`L&WRmI&;Q'6Qt.E=/40>"*OAQXS*8ZF4p09\DkB:<jC@mVWIRW>?,O]lYQP]LB;JgiP*
%PX?q*JCmRp%R_0I3bk+(Ndt%8F%nZV2;+\5;,[r5M9Jb5RW:ab3,E?POlB4plEh<7`+jlm2GH3TlC+(u7-1NEMV9pb3OIGT%&9bk
%A_@FXh5R=m33kqVTS^gR>)\\H1Jp0Z-O@\7':"as>hDI+`h1OEjZqNBWdmfC%NK3rqeDjGfP?0oG:"epNEJY%R]%5"4fZ$97HJK7
%;:hq.b#pKHk$\shZR"mrAOBGB'%g$<+nDtu,[h;89N2M(Ot,!]j`heu5###ek7fp$kGiP^kCgRUWQNoP)SW5OE]0j?gg&=K;@=qm
%;,rW`P!rMJ<R-b#g=Qj73Ge^p=R2u-33$Q$cW'!WP4,@del:a=p3<Gl2H;aF'AVnL7o_R&/[?HUj\YP%^r]PR%PB_>U7.er*.ahU
%!$kgmK+tT7p#JM$.Z\Uj&Ds]Q7So;$9p`0?&<l.%o4c^;K0^(8W$I^=;hLPHaW]gV2(;g$%eZgN?"u-80G[fn4B%A0E.g+(9gm8F
%80%\SS;G=\R2PU%6k1f7WnpH<cC22?Ag28/p@P>QLn$o<5U=WD6k0YM)*S^r_ZsVWZY@Lsm\'JiPE;P6US9T?L)a;,Oe^GQjC/M&
%2[R#H2uYN[jQRsjE,oX(bn];I%TDo$lc$]S'[bpF-#7Pt9TfjC-[O2mLif+C\3-e'aY-f&4dCT9,P'4Z0['`H%=h?iKt2<XrT?Bk
%a'"clJdm0VM625UpourO@Q-kj,hpYD+%N%ebP7aqa#PW!BZ1AH*$cf8oOOg@7lI3#HCSJ%.G@W_Nh!]50';_E0J*O$92.S[2.%Pd
%eE#XtVFJl_UT&V\fpBf4U?Z`3:h#NcHCQ!TYd!H6Yt!E,l>a8S;U<nRnB-uQlM>ME.?(6g`sqUFXI#LBa0>n&`A$St#t;-LcO$!c
%]QD/\B1ED/%p@?8jPqf[9]AC(O0aeujULlBbK(;@R7cO+URKjE1\E_48/&Y:a2(ggL$PTWB.5=gdtW/gN4Aq_r*Ji%8IshZL3fA$
%#!s6Ij(LirRd8sQ@(!*Y_Jb7Nfp7cX`T&M+&+VE3a4Y,_mr9ZqLM"CC>s&TK[ARmVO$eip*R)I^?q$/)Ul39e7>kSR4O0+UBINKK
%"?r&_5SK3b%#nE!+W^ke9k,P#*etL]11;XR8+Kc0la_81Kl1(3XIg=B$62Jnf8]qa_B=9YNoTP`U8b:9#8;^.5]cHT9>9U5O5b-p
%e,WOk7nH%*QCpOu0oaa&PrS*`EG,rMR\h*<8^*XZL3=OY9&5u6*Cg3eZqa=WcB9I(DFhgAVimt+UuR+lQ>rk&F<$`<_RE+WOd$:'
%Y"Qg?`MaG)9#oVfbh])Ti7tY8Y=lnJ!:Zk%8B8R5'i_\7a5Pqp,*hOp3mLWA4`;ahTf(I^$HH:>\Z8RdcB84Y`XU``9+'nt7bp&:
%^F^dn\oHr4.,N9lj4MSH\`q,=L!&CL2i]IWa;_^1Yb6nQh/>VP(:Oc!jI,;QTp]o^/f\N;!r?1^c9gET.7>uN36PDlMPG,14AD-i
%FlbSh"*V\pEh#SH@7s%$e-jUlWpAdRYmagG2A;+'+!Bf%9fUE&0?KGa36m[31YE5r3-[4O[$aJ*@8R8kn'.]hcn%M:9frp_61QM.
%:9>LP-)+d-'9>Me`f*n[%P8kNhSeHqMTj_q9K`l(9nMi2*f#c\@XYC#7o(OH:':N(=V==l7b-O<0Cmf@`8`NO6X]VJMT9^p,X5TK
%O0c(pWi+irBH<6R7e&H(#tO5>*Y&T<cD9JSe]B55dW+?WB85nL3Y$o`PCC)b*'l=eH8b"IbOjTN2Pf@uF)S$;fVIO]^7o7"PE)u[
%M:"3J3;c`2kaHZ7!'A?qcF)^%eg`GQic/?G&DXD0`sIsEM];5,[O=d[Q]EBO!5,Zk*s[-;R-<`(ENi(K\&0O7#A?nD^m]Wj"Wtfl
%2j9;4h#oOHRX?(r;:fpHOH1XK8"HV++%JVQW&8KE:ZGAfE6RD'?uS-sf/<@`+?,NqlLJqrUSie>9Kiqdp[kf(HlS6G'Tp&YjPq3f
%>rB,Lb/XNr+r&k_j%pjn_2']c7j3Wr28bi0*1@&$DYe@=/8(EYM=`GVaQ+="o]'TjLYt]$36O:j:SWB/-"e8M\!_]8i*@Uk;uJ[j
%-uceil,SpLQAXNn5E6!l+ePVR8,htY$(md1!f3SG`amPZ6OQJ$\pg06\.e+rlGkp94CA.g5E6utW7dX*a-"idC43"I+;d/RDUX[,
%a/9419L"OU)emBgIN/aE3H&O+E@CJehW.NuNl4+YCFFmo)po1rf$3jI8.7mi^SW)CqCP=82Z5TJ%*@n7qJk"NTOMOIOCNPF<R.(c
%*8Vos=Q!.ENjWSR)[5:VfnD>(-6Pfu&:U5u+=AboNrjA"WO,>&jN+PMI%Vr37rg9qaI3IWTt+!5:A*Y/;D*9a9g=Y\4lX(Jp#GO!
%A?ThGEMDhtL/C/Ff3lkJjl;GtSuA[AjQ$#3?Dm(.aGH6P0iO-CjVZ77VB/7ACEi4A5)rN:r!YC[30L>*qQoG,&JslPcb2XY1Kf5P
%d>t'#fjs7?U$7_$9kkUNjMV(19oKG#;,;q7>"q8B.KRbYSdEK#@A@No$R64n?s1IK&os^B2>@Ue3=qL\E2H:LM:P[uLraGm!fpb4
%:G8[kYnl0AR>;inYLqYX+t'.B268!BfFWIK2Ip#tPlG0l>18S.GS#l6VBJG9+L8W)7-(9o+mEtr,"KbEdL'3;C?<P-R#/o3M&mA#
%A+DL)I\$?c,.HCW%mQL1.O%r$jPT;'rq\kWkPp#.8q50ALka7UE-M2Wg7u-b;_MHjqoc%DlK_.CjeH2\i>_cc2=cfXq4GG!mIa2e
%eORCL<W=j9poD1.rmO*e]t33qkC%j+5CIqQ:]GZfF'J\77=E#LlS%,.]m@RkeKMT?fY$A;lg($ApK'-6md+$TEVjqW8,Uunn%ZEm
%5Q9-f(]W[`o'OW4GIObj5@34FA+Br(^\IN^k+2M496TG^Dm/'4H/R]:Mq;udIAbcKs15+7rq\iCs1:5Pn+Fd!]?fI)ot^NQ4hj1i
%O8&AEeUgQUU4)^Zr:9AQI(u<bh]I"X*h&JF0)T4/?*Ip4-bd=+rp&gY$[U5R4RDK`GQ$gof*co"fDY$@2a4T#dQKc*\*mZ'nac(d
%[oZ4G`9G8<qS$n*h1+s>\*gHV]Xq<%?/('[gH_ccoQYSo\9N)fg\\&OqsNbCElj?OEW*U4GC0(N\(>OO+'N?A%_gnEJ%`R!1_45#
%mrK\e];Ym[om$5l=-*'Uhu(O-[=-q:5AhZNrUmFE:#>[D@t2;k_tECaHfN=0_H$K%?[oV5GCOo2]DIM)^:q<dd\B5Og0]=NI)/B%
%m_66C^Nb*L^S!+;V0cN%TA7-Zk3gLegL\RiRGNOub2Y/EX5@01H1pdnfc@A2(KSk"p$>`*mY>uKkMb)GfHaMDDVq&A!fV#>ljh@H
%qss`\/qocZgg.Zt?+WJXoN'R]FmW5]m\jF'B[3>TlH]?Rd?u`"G$jk@kN&j.32tG2L#Zq/cS="c]D@RC94P%>-!UC(MKd5OZi2ZC
%2'4r8H&QqErREhc(J>>#Mc[*bhd1fE`7,VWh;<MIlKZRYgP7`5R6?UALYoaKE\L1ih4&EZaNcX@AF7Kg?l'maDY*2gk@QC2gT*d#
%ld\26eEu)ZP')IXT6E419@!=c`I%JEBD,hJc>9T^D32U/nJMIZbf?C6I_<Gnj,tXb?+@(e^A6pRHH?E)]XYNMI;N07V=E!I@0-h&
%eecEE=onlKFo1IH`Q`TCh_43=rRICH(\\:<)nBur?+RdsIJ;Y+41F$`Q5ONuHZigMDQdD#g=d%`gWrO.V,tFBqY"+A1`)fXe'%LO
%r;ZWUS$+J?_"I`ek!;Yu(dZnfh>,E(a`HDW^Unabk0<S<mE:93FkD&VPC^#lL]/&aYX;dkc\_GaV*gRYlMKVRL\@\h\XslQOEkNO
%^]L%i^QpGKs4ZME?N>EOf0fM,otg(Doj#iK^SDD>YeS(C_=^qQ_U2JI#Ce'aD=9X_Zgm&SqX)n<YMLn:=H<*6>d,%BC_+Wt$q*5J
%gHK0\mdlqIrp'K`.h(Q(,Im:[CCGKJ+g3W]%in#D:u\q'OIK[a`fSdhnesl%A&pbu&Ogm*j+XDqdDV"V283/mZ*&*,2/^(HN??m%
%f!t5g2a2aOfGZ^*_r<n3\FBV'ldbZp?bUl.ouZ$,4[!\Lbd"9Wm*0o^Yf"/ds0DKSJ#T<g&dr?$q7c^urRK0;h04p(mKRg4on"!H
%G;kGQo?ABDbq3,1j":4IZ`=UamlU.T8XK/X*D26:Zm'$26?Z02fqKMd"CSOF_INl[PDMHnnQ5Hd=19:';srr2]&^$/])29WlarXe
%[iaL7^&%Nlro3Xff\VLXXn^S,T.N$o=8_E(N2<m()K9gts0`J%Rp<S7F1*X`e&?fD^OEYJ3iHDrB:.g?f*!9]?,kdoYL!"gF>Q0]
%X6h=5]ff@pV-5;q%&oa&q!dF8X358FhEP6;_4K'T(9AtPq%J;2m@WakJQq!IJ,dPJeP1?f#KNI<^rm(tXME!d]_jmB(PPupGYo00
%pra#WXME!d]WAol$G?<'JX?>'8#MR6F"dUB?e"$pC'<eNb&X,-8K9k0EcR*RcOLi[F([OO_MTWb",BWRZ%VK&cj;4gI#!ukifFf#
%%f]Kj2=C1%AZN>OIf$%$lNctRol*%OKB:Gja-Fn`4WO4WAf^dM\U<:?cc1B_UQrg_Zriiin6K*"Vj5)4?dnX[`cVuZ;A^^R2$2B,
%9_BJp&/$7-*!I_i$dPNGKLkn^qs+L,)YPop0C0"D_(P&lU$KP7e'`kSe=BSM[eUf]96tS=B\Q.+n]2<M:K-lKBeL7g!j@o[;6T\<
%81j)D&nBnN*j(,0.8%,Io#isnDm:5KY?ig)CH.cb90.8XS(Ab>f:Tt;[_BDb]6bhAkPt7pc,JdoI=*A9GMcY1?GHI<hotm?qr[ce
%<EX@u^?47g`;6637go38/Bd7dR!;-3MLNWaI0AM^V=X$"&(?`c5<ETFi6BjiYO9.%jL"WhPKt1M3W0GjqY[t/(R7Q5D>j9&l$'pU
%mRla<_9SiD3t9UE(/+H,LVU/09C5$;jgiU5K;k.t"hL8ThDn>Xk<pkR'BRtOYc*SNDW_=R69duOS^f,L%\m^FM*C]mX;0e,*O9Ga
%q24,!aTu(dmN;:>edCuc.$@dba:G%:DQP$GgiN#HX5qjLnZWMD[=\<1%`bu/r%JW$[=Wch)\;Z^rG9g"@mlE.=;'lh7C^YSqm8ud
%6i/XbZRHsApNY8u36E+Y>(Y[*@XGTQ?N9QdmDZPmptVb`n#KB:I<Y_1]:5kU,n_%b'4j?d$USl@>eIWDmJYT8I9/MFUg.iuqL/&(
%p?jSPYMWYM'M=m\)r\BC?Jd<&N3fSZe[[@%0C"/!q8;%]&gU2#pLqnLmItmj4M&fJHRH:87fRDYT6e]@hs>$p/tT@'*rOFY]DChP
%n&\Hh`_HI*7D7LY?CkZ\-!8IaqtG7"Yd]J<-M]V96h^=+iqBp;Nh.KU`@6mZ]NAQm+$<39o:\j)l-:B#U3bI?Y5TXmRJ7qtk6PNC
%:TutmIKc9IJfR/aQuVV=:2_pJng&hY,pc+&BMLd/efF[k0^[/;C;OIb77V8mT@+%!\b<KcYO6meIK)uKc7oNWh:[D4bhJ%/DQa!%
%;Z(NXotJ-u?fJF8Y2?t*^&7J!DBn??babfam!,D\muDIXfl])4VHNV5YK7r0EDR;GfDCK\2d\17?oYq^s5\caK1A(rAu?Z^fm/ar
%LWm@.>1+qnZ0U^0jmCYY2lh`*6g*d(@ei,8QI#1-X*E'4MC7)YU.IYYOW^1$^jJ@ho"3'UXRESEr-kk'o1TG_IVRo/KLjZ^hk+,I
%n%gWX;r@9bXiE*`mp7Y-jE]GXG*]dK?J[9%Q$<,k`Vn=G2]#+BQnMdZ\pf#)m?1I-?Fi?TimlSGf=-ZO/F*RH?+g-\P/ubWg3n*\
%a]UM"D!gJ:?oK/,G4Y%oe][a73AjM@>kH-EmIOiDhVBee>*kTE?GF+_=9?Ic0&B[=DQ[o]/f%9^?=)Dlrr-elk<?Fu?_+d<q<m8>
%"k0VXZu7Vc(YZTDjo.14f67bnfQ5sH+WtX>WP2MOGWZKFEcHI)HI4d!4s9"?$ai`hTQ-)oIHWr5F%/rc-ciMYViT.<Jr1%ilhF6k
%?nqPnqrC.e4[_iLHat8E;.IXrK)'d[h8lQWTKb^Cg-->.P>a3f2>>=1D?3@Kl>(:R&?KYb?#pO[3@q"CA?@.&J[?9kg3\XKmq9#G
%((A%X`N/<K9CVt)iP(90;^7WWFo<@tkK",1hr!7>oC^qah,b!DB'[b:_0<W#mX,Cs@,:Y0ST!?[Nb.CS4'm#l1mOt#?BcHbkKh-;
%CB'C5k=]iPT!/[lLC_:j?U!>+-0Zk*9M&C<M'^XsHXnJ.@7_i\^02j#eLs&OmX06WC6A@[??`3b_Fd%8$tdC4J^.aU\2a=7q,:[l
%>1/0n-_3:1rS!C3rUe\;&X,o5<LWr)Tc!Ek\)/i;\<cIS2<R_7ZMR%u"K9,;En1UFh(!&c,S!=eM!P(fI#S&O_4^`#*rUDsX;cp)
%:W,]8=H62De&M13h=[dO]d?2I\:aG39nJShQ$?=KB:o(KE>(sGJt/#gXFctgrZ."bORlGi3);--^++1&Hk48-FFp-:oU[B]d@kuN
%<Jg;bhdXh8>%s_&SFuNU#u/HbBIkRt>Z3NRDMkTr)@(Q%YGiFUWlD@^n>e1o.D'6=,@u']DS`#pR:cZ*Np!1=^=qkQ*O;mBJQX#f
%Pi!(&H2Q>9M`PkA`@$*d5'a@ka'F(uTMfo$2"pA'XGFk^R_n.h&<.ua=:pOFom)U8c*)rCMJ+!`QWXo[("$+qNC-)j86ZA6%4cpg
%IRH1o'#pW85;_!GIe#:U+6tliRLO=A8B7Imr&g($"cgmUa^Vr3GQ5Vg'rIF@ZRTH*V)$WVa7KT`h322/g95tsIG3&KY/6Ka[*PJ'
%Ac(<""$N]j_WpTlrn\1[pD+SPX1riq?!.'=_s>Uo_r"[[Wk8+SqtBb"I&,<K4$7`UH%h>]LMq>1<ekU9pf<1=ZlQk/K_fZYn@p,[
%qD/&!'(#FPnk9SLaa8"7q9(-TSo7[`YE-ZuJl7@Ke(QgIXQAVGg=["_d0]X+9.&<sAor8M9D"(`8*`(Ams2<Y?Md9X5G?>;#qiH"
%?9aFAEsacM-a763Z+t-=T(Tc%^8^:!i(#?3ZKO(aqSH?r0Q;-=^b;!UN5r6VbnBntN<K79,(U!2Y`@i'3V%.OK#4*<9/X!J/;CQC
%;B:3Kp*?_j0,@6^UH(?$FQVL+AUe"t@f#0OMqd!eS%i4a>[8u">IK$eYQ"KH5oB+UrS.=nSkkj5>eg*sk2Pssp!rHahd:bPPXg`o
%C]AUeog_+@j5]$]Ip?I*[0mLk'05i)I/sb!1u%lmMgDu=aWJQ3;(q]"a'qnq!X7<8^[LJ.pAVKgr::a3^D>)!KAXN]!*)OqKe;Q5
%W=&n]=D_F%hn<?Z\&Z\codpu-b-uRfcCqlKp#5n-`p)MH\Tmf4qX*sb9?u)XdXCe'_.Gjt>'p#dfSRZG2nsf[e*eG)H5^3s66[gZ
%mAh28GIL5BhrWt3fC.R[I5(O`PDf1cXdeY2X,@,aI$YX.QbU:>_FHJoFC1Ro$`;\q='mO7.J13"FlhWF]8Q+oFJg#cD_LMpRMKr*
%^:NsurRKGJ03CkS?JjNh98^L;ZY+8tHi89<P5j.sH@lkRA:8G1Co/T<aBY<7-H_Ls*"..6`0i$35/X'I%(cKt5.X^XbL9'P=\6]c
%>a,=VcBkW6@l\jq4;VR[BmCu7.#TG&iTHr*KKX:"9"??C3j[tCXLT`D`G'CV\L@/aOGgDX'05i)IEb2@</Z(I76-b6m8S.((<s+:
%hni,;(M-0NNb-aja=,:fk0tsYQ;:Ugqtuc#/Y'3s_e]2`a2b]04<NQchdW3rE)NcljSSOGaPFu2Q_-p`lPNF),oGRFE;r%qR,VHK
%F*7NP<cmEhX\Ya`=Z<o6\'Zdh>!M\>DSZmc)r8*QXW(R%k^N?ns01YWJ%pE^2a"N;1k#@Y]A#R#]=b7)HLX>V?R![<qC`rhiXaqR
%qsY^-o)7l-mV_=%r&l"npK[Hh*('U"XFF"Fr/j#:ogcbNB7KgHUL1ZLs50@F&cZE"eF9s9n[JNqs7CeUgNR;]SGiHRJ,b#\lrF#W
%hu<Q$04*_UQ*ZuQ34C?uZe'"#n_C%Y:"jAm*6r&2)9TK/EZA;hNTUW">k5AXkl&'^EB'HE/Vi-ML8Xa[b:ftX:Yq>hF_+)_[qdS%
%VeY8ajndf1I@0^#PE11_ndCD;r85]$0kL@K5B$(3?_)V!%I:%>+6WY!m"IGY`Z"$cbdieRe_\eA4qGYd5mLWnqdo_`hOTE74TGDT
%rIkbH2^nmBB'mi>)dh1TrXs/=ng2'-^YfKk8)nFQC426s6bOOj80stKR/4Eort%OS6bsk!A2=.G>b)`*lu*^=UZRYKLgIRL*DHFd
%fT'shhs3AdeGn)(p(J=r/AiC4%qjA'?l7A4Y`?K97lQ(poBU.pAiIWbkKf?hp-ReF-LX(c>Q*)jn_JXMl#rYA]A=`C5AdT`aiL"C
%^81c&q2:mp%JbAg>ar]QT2b_Xa8PXSFb%+TG'7/^T!OpVn!aEMk-*;'1O\^ps$#-(nu&!Rs72d(rSg%Q@fPiG8&%T-s7FWMJ,<Tb
%gULno7Q6?R4&a2M=M>0?CRn<XN5hI$@_@)Y0VlR''J,0rk/)EBEd?5JdqjSMEuO?COC^tb`E_C\'?;^8PJ>;\i,`2SIXYE*kJd%I
%V4;$i@.)Mf)[[B`3-TNCgKY0M3QdV0nQK2_ds3[FCeS>dTOH8l3A-g]T?<@?@CK:_AR@G7R#kiG13JQd0'EREH0"[<l`RU1-VE?i
%lU&(X%NMpC>kcbgF5;V!.>-I1L[#,#3S2:sIia$o]3_<0&VI-&;r;[F`lX_%f1LFm]%CI5cMgkZ\?2qO6iCkm=kVQ>o=#PS)_H7,
%;HI\jXNk-Yrp]*b>l*5Rm('M-?SC1*k[NLlqbI![(d<"IAr#=<]RT.Tr9be'OSUOr`'Imfo-*q*l_&]'Ht[opTe91!Ng_,$D.&9_
%K@b5W;b$dl4XdTF3Z0:Q.Ft)E_E7Pa&-DSdbb6dpm/$J"2O!1`A[0=@E[Hisk>Vlg9P0JO:GHkJ`O_^9^`kYH/gDaYMlgV=e6OKp
%*SI#'lS+`d5IWgtk72WQZeUqqBEG*Lp6]."B/7Z0=sljhD9V,bkB6a1FiX72Zal*j06J=hg(0)FTA4^Kp$@$6CNm'()"lGF1<4^@
%h6D+Ub&#)Pihll*jKSNZ[dFX&^2kq"-J<[8bWkU%0,Hg\<*R.X3n;34lfg?tahRbd>2*uY0#]J.2eq!^;EVREVTZU+=(cHc^A-jU
%m.HoMiVi=g(o<ihGS7NG=hj9-fNK7q(.[cQ0GJfsPj1Ar[F(JWWUhW\Ad;CM/5NOmWQFJ'NOmM<lcgeA^US^m)]]mBGrCs%fYmC@
%g*/!i[Dc-!p6Kd0I]h*_lu;B_c-Nu2l98NH'W\a84[omOC5[+f#j'iN9;LegMRRG>_6!<)/hWH&aZ,7CjY4p5g5*LVAS&"q>E:Pl
%N:kfqr2Qe5]9'l/DCd>o%123Ch.c2AX*pon]FT-hJ)O'a]k!&%q`Diq:14h%eQ>i^dlCit:A#CTk]cs1I\8Y/ookWO3I3=lr.dH,
%jhbZ]_m#^V0J'M\'ic23c\G#&J%]<)J,YeC'Xl>Pn#@2sPt\j%M?j*?$&6Fb2BTnY6$"'":WHTVU+DOTjF>m$iN:__3cEHRSTD@P
%@'fFNSp!'C?Vd,<q(YV8gN+D(BU\t*Y4ugV\!Q#p0WLBrh>e"-FkGqAc1]=s2fVqI:"<j+&%&_"VO^F#&)sM[_s[6_-i[/DR*5hC
%&!;E+EDq(W2V6EMVI>qLD8;HOGI:Y[)V][(h0o1rdfW8V+52H(5/%L1[Y:u7*24UtaZ]T7\;bp0I<PLIcJs(nlJ9,pIg8o`[nlE^
%$d&quY9dfWG5K;XkKg=YW2j7sjEIg)=u%ODh2gqeDnQtUA)-MGg&8CODhm>\L7cesAS_'$QV,pLBASCkif<`crAU=/4i>4[CmmIN
%-S\4Pqr@)3p0G!;cSo9XqptX\c'ODinTo$7Gg5-(o7`:S<dQ\9gt))+n%ZP@8rd,VQ0gpQ6[<bPq;':7MfS":jlq3.R6>WB1`9?/
%]a:o+DSHFS':6b"p+YjCcb/N@%VT.0V4PKbCk*D.Bhk&%C+`MEXdnA2%tgbd6@XF=rC[h4U0d34X,.B/\i9^m0Ofnm^@TMOGHT5&
%28-$35-kZJS1"Yuq,/5sC.Jc4Y/'mhl?Gg,Dfl1WI3g`R/iIQWN+Zfo_Z9Gf[kI(>,[pSs%sV.l7h"r`Ys,"lLMd[UR6_Cq5qq11
%o'Rhh>9Z2OIW3d6p;--6RfBT1o@6%5]@oo>@sk5)13%=B2!%u>2`9?.Ze`Q^SJhh-jNi!h]?NF,2BKf_]Aj('5'pZ!FUi#$=(Zn"
%<s.=_I^[ojFmu#H2RdO2IX#ef]g!<.lTcECL=q2P5<m'J\B"k_kI-jsG/0.3g&8rDj&S:jltf>X:W*B,>IWUSju2S=IKXJqDqoit
%<-(:Kb\Uo$mI[%.MX>H\cVL[u:]KhUg&7h0[W4(H#Fpj:K0O0H)<lk.G_@.945+?A+!2O")4S)V/SDfPl@kVtg[/7Ko@_/SbLsV2
%IHu<YF(8_:^E2,929fKbF$kubc1Z>9kH-bN\ZWpe;%JMcV8u02(T)"C1Kj%um2KhYkNsWqA*]hpVTEN>=Q=4aUV:P=TY15PCmUoG
%j$$]9p+O?W&Oq/AOcW]K73WCR3kuBS.'jjK?F&BDrSd-2J<i@qe]YS:)^8JU:Y5WV](sh*rKgTPD^>J]s'4?n]%KQ\*k594$O-RF
%rW,O[YProlE?dmgph)e.s68P1gT15+i@d.AQWJ[I]XYMdrT\V$f<>22X7,^9DT(2]ec5W0Dsm&Nrj>1VJ,+BF^?3aC?X:ElHd@:u
%ad$Jd_1'#NM_AtNIeW:,Pm5e]*=)DZJ+\$8U$,%d(kU>Sn\_Wmm/NY%@`n@nF8C5Y=lRU2rt`oZ?9_Zm:]3rGKkmo<o$fPL]EXjT
%nR;qcJ,67_B(<';_</(`5kDoJCI.)-#V]'/-3<8u@04YrIf\[:K!k%T0UER=:!3U^EE@[9nT/%iIBEdAEt9s[B*p>J*ueT_]*$9g
%GW#WI1b4'e!4./IJCuOb0Sa9M0W,]N/anPgjtY:g`W.f-'go\64V;9/HSrZV-P>L=5PO9fk;'sqLeBMESCSPKO,bra>qort`gG?p
%o+-^5^KVOek,ZcnXg!ckeD[W@Kl4<M&[BbjCu&#)=/:CLJ9dJq'?l^Q[Ve,2cXs@+-D;.nYD8jPO"go`'8!VTbYc,Xb^.Rbq)XL(
%=;XY5:+ko/.>k5DI!-HgFXJb`_<U;,g[W\1#cu4h1<$-aH4XR!gH^^\e<K:J6XSWJ\rT^.SRQVhX1G*cI-l#nK>'dF!^XW3\e[ok
%Cn/8ofUd)?3LtU/q_q#AB'ZT3qkRXkr%%i=D)Gs4:Hk?^K24^3?&W*a<j=9u4T!Fkf8kT1?Jp59kDI9)lEJd1mg/X:rM+g-7TlH7
%)J+b7+rfTABq2(2>7/!FMm*cX:8f>-8+63CrV&ZAU?&g/Yk'"J3hsE]KicJX3g)AYU9!HTcN/m+f@QAuI6\oH/UD=_W=J+E)N@t:
%G5Ci^]0H;&Wj-)lCL>7'3!Bh?/nZnd_$1o;hd9jlaf5O'l874CD+s+P!N2RWdJLY*r4`%'o%%]ibBiB!k)YJQ"gt)&gZit1"/_T+
%X./LZA1R%i>OCAfh;###3,<R(-f`cP2^6p`hXooc44J[))MuJMWcrk]blDF_CaL2HcO&ZJZ1j*g!M<LRaUHYID)>9L]stdnNU73;
%WbeZFDlLXa;%J(JX`M-9=`$gVI7m#sbIGrT^89u'V3\P5#''EGPLU+UUN-9N@s^N(WRK\Pfr,!V^PfbZerYkq.c8n/9sHMo;a+IB
%YH'h:5*PA<C7Vd**MspcrH\T753Q$G4j^tUOf'A_7YjdJR^u'a?7FO8eI2HNqGuY1$ENkmm,<JsRnG-+`lT,<p_h'U&._;E+,FnT
%)gIB>J9rCQi3krQrfBJJ*NPT_!o2I@?hYNInE%_X!P9NVZVaFXW\:e*!H'+pE9r.+8\b52hj]/sG<1;*_@qC)lAS%/NN0=!VT,Fs
%be64hi&6/gDKepmm0F%I(pbJ;+>[dh.^2'q-P:pjB%R".Lk%_8Ld65m6i_"$+p.R-7g+!"G:OjKT.(tGIV_EF4A^&FX(W_%&:`Ds
%ZhTc@J6s9.8C&1dkd=d&U$KTS1=+a$60A-AjNK&.n'g^^1*R:LR^9<#k%sR/?S6c0'V-*n",M6/J8u)*r.'lZgD(??LD1A?l-M`u
%GV\7RHFteZkD)W"+?+PZ]I+tdHUo9?0nC]:o]<rFC/!PZ6NT?lP+N9uGVBoKcCM@XU^7qn9am!j%Ih&MCu3Zjr<TV5e%aUk^>Xs"
%n[:AKF&no@NCinP)E7lmA-]<]-^d7T`OZ6[`,&^\/XEso2&,iUgV&"7mEjsHinN-&plR8(DtnV#IFrBYp=KVW>q294Z_mH^L?P0H
%Z3!h,Y4[JJ[4B8&)e5;4<h@E?pn(Y-!OTd&hf?uN>k9Q!I*4D)Em;'uo.ARAb;J0tc+!URK.C`OjdL,`@Il).LTcBug>S]=PLI/d
%?`fF"?$[r9/Jb44RPn/]UlJO0qXm<Aj[NPG,ACNA"s=9\cdWEUlq7/T/%-KjB26YZk%nMX3m\-<0N50RB>VY73%7[O0;-PdDY!A7
%Rq-%h\ZgY']O7n>ao%fSmpKa):Le,gFAC-1:YYQ9/n#b@.h53XQ`b!O;]\QdBUkQ?@s]4F(M#%r2OEJ6+t'g$\O1L:4ju1PEU&W#
%o1?R3&5'#"*P<E!BSKEtll#I9*n6"-I/qrgVMDE\gSREng0oZUTjH?.OXraC/_Sq9G@T,DYqHp>Oh.Ir(^&]t8m[Nsm^)g.e[2A-
%\!k)f?')rBUO24a4IjlemE'oPmeh+AS[!)\+Lmo!J$u_6A2`A1=6B2.[#t"d+!b]9"$5OhM5Cr035o9`)p7g)Gt6TG#,b1*M5_T1
%-k/s81]('!IAt$CLjc7u\l;;Q>Lfp\1P]\2ba-H)^?:J8!-=co@s]58!4-]M5;[i0;I!0GbPJ#KJ(;R(CF*Gg2=7UDDsc*?-;kb)
%Nq(qDCt%9NWGFK<?`gd^c-bWbDk"NtGW9BF-TZ,RgF$cWgBtU=J_-4D(@hgDY+Y(f\uq^l$0AV_*IrP<I%@(Ar>>%sVb_/&$A-.5
%Ii&<J%0S8paOJ,Vajcs\fH"5^]-"*#ld2<VZu'!MM/@$;gR?dgo>P#H5I#(E?;CiRSanS:_3qa:f5_q&fn$gd.q^9JZj"gW[;PPF
%47%K(2lIlALXeNQ<u\5Af>Id<X.*LkV89%6A$>]ui7.+VC5uN2j90gXkUnM1]Sh<D\SQo%5WDI?e5GWcc(G7_P1L,>Gm@]I*,'IC
%)o1^`D/`)o?2kK!NBfH8"m`Rbg0Th3*_L`[.i;H\P/ZUEom)s@0&#^seF$nAL/%6Y*IFp5C'RhhNCPIi+Z9>C22tS;NfEX3)r'[f
%(n=1/:$+9G4aAoe7U10rC5]mZ"g]HiS9ad7@U3\S^L/'_[D&]0mQlK,L"W]eZ?tfpH9g%e^S1?/n,.4BSTEW79e^a+2E@gn&hn%_
%6F6-.*CHlLSkb2:jmp7B[b-NN?[ef8ceqOMBUaFT8NR=eA+_]P*0e:G,QU'o/#Yr<,iAHa!K@t48`1((5Bf,>H=VaYem,5PR[c9d
%;rt66Od3erD*H3k1Q$+Q;d5()K&HEsNScU(+)3,/fUh:$3?F?:gmDJr/+KeY\4)YIJW"T?jWVrHr't]'El!_M`SWjK4sZ$Ci:"cJ
%P0^R5r1WO`G1^[kZ74=FA=,7U`OF-0rH\RbcY'jdr6feM)%3N]:,_IO3`/?nPeQ>3PJ.d@[k5)'RhPg1CkNrH9qR?W*Q0<h[(5Oj
%BnM7\M?La\4sF3KrEQUo$.KcW=;-4N8bZmh1mJO];]WIu5_H/RIf3#QhDg"mZ+VcH\e\2M:Sb`J0M,se0?aXfP?tfge@l'sn%>9;
%Q+H:+#tTHt/g%`Eg'=;6Q=\_$W/ImfbSt254_[F*^T:qsGFbGq3eG]/=(o3@!PqFdF^3gHl4nRQM@=pbWMc7dF"Ol'`$1aeUM^",
%>;N,hVPi3*8sTua'A[.W7r40?r1)dj2FoA%>ec7031)Q3ZA(Zr0ZY.:=bUEg@G+X_Fqp<KKk5U-@MP4-=U.8o@G*LLnc8h9mu)d"
%KclqE>s1q/<Fb8%P;"*dcNd(E:,)4hjNCTQ'KL@l.diP](`oY<9h?;@9eREM^igAFNmLel]YY_4EH5Mi)p=K$Kp=2*Dm`0(F2//n
%F[^DG!&A=$Y-W][e^[Sgg<$_H^):Y8^/LGr\o\m0&njZZ+Vqlrbm2;[/lC5P:NB@`f-5_pij0trAeKFG!+8URj%&rrM(Yf'0FJ$7
%os>et_6s9AYu7m@.*1Gk+Eu2IHYa^pl#h$"1Z,T/=Tl,>0R5$?^n#HP1gEkG>-NXA&Zb\K7&c,]GrC!a&.9gY+KQD!Q<c_1_Gr?,
%3437YADc*Sr1L5f@-b+NqRL<;>3.J^VC+_M!PIL,>itqcj(*7?`$JDoY-s[jRlWoWWd@aZqP%3$F1M_t3&3W!fQdL7;`,OO2D\Vn
%T0:>3@;T[[H@9g^f:D!B(6]nlZ.<D68R*k3I,k^8Ir%uM!:2O+FE%@$[-;tKbO5:K_4@iW9Cs<jl,"o%X2>_IH>J0uA_eZAar]]^
%NpT`9AXcCm'\Q%Y%-9'&7kR,oU6[j,ReGK^f<X#X;`NFDr@#Z-gX7ZU3Z[.&ZMb3)lW/?f@LpuU_c9dnkf*4*Nt#Z@,V$"($]_g8
%#>(8rEQ3tCI3,\[s#<`X#KJW'f,:5TH-k16<2cS=,to654@6A=lImr.lfNcc7oil:!q4!J#ZASICZ"k*TUg4`BHN2g5^-"2?_m'Q
%Whri.mU<]1d'#8^@9DI6AQ10[EnlEH1Isbt2K6cAXim[GS/HU-R9Om2bD(Muh++Y+8Z\(i[+3u&=mTWi8K7!`UYR?NZS+g%afDM6
%<Q\Z]>;6;9h8Zl(<_HPI)YKePpBc9BWG?J"5dZ5L0sj)IJesfIY)31IU%\WU??STPK/F]0>qqtB.(dY0V*>6^6UT0,7rC"a<KOT)
%i'=en\"NE\G!PA&,&]a4\J&!:^[Hj,ZeL/aeS\.::L*t&s4#i7@1',l*RMA>IM-<W]A:h[mQ@.oACK%t5_RhhPjGsJBbP19ZkIKf
%Y"pE@lG)'[Y%P3_>aJZRi4A]d,IlT;AH^U2&Fb8GF*Y(u\3:CER_R8T\3=7YPP:S)I<]]om0;0`!t[tA4Xk&*"4tR>3Wmtk;"NK?
%\`Kgg\T;lK4b0\REp.DESP=@Blp01aMf+UM#=d='K&$?VXSiTi]D)tCO,@q@S`2qO*Bs_9?Fqt%lVE#qbCr_lA3G$FrRlbp?loC"
%>I8C)XLG.W$s=Zq,O:d42Fl>0q2aH@cNp"mIgWc0n5!":7dr(B/S&.+nI9#7dXa<<p#mG^eq[PPHJX4S#Q%Ga)=2sbnHo>;%m,mG
%#=r#$=W[rVnp@DG*dd63ZG-4@>%B>X]7_EIepG!X**ZM1DhbC[+Z@Bl7gj9rX`n?X.CLi?cR-(am)IU&Nk0eD5KiU1CjjreXd:'\
%qLe.FBa;(1DegTsJ[+n7)j+uTBXN=,kK[LfXV\seiVr9?V-rUXZ1Xc&`".4YbCpHAE'5\,khQ^XW"2=h3s_--c!cHmVC<@Ok1QK@
%RjL@I,_t!eL?VYW2Ogu[G9#jc($j=RbN`P[,2EY;]/$u$q77m7L,$F:/h\<ZMbrSST$T\[)qW0A1EH$CBpp5BZNpY_\>*d/_ioaW
%i&50ndWI)(Z5[o-!k,HU`okHL>QL-*?s*Mr'jt/FQ5*e1!L=I.=TOg'?s*Mr'k$j*""[(nFNoca_7N:fVirZr=\_bF+?#_510t.l
%('SI!1r5orm>WrA,bA.g2H&)N+Vn&O!Z[V7P3SD(Rh3aFGBs#B>ng`SgP,9;CXfHC)E$iiL<+3BUiXjHC+a<);eFln8!X2I^/:BU
%jlM,=ffa'\>43Ou(7la1.j=Y9de)eVjCZs&_W&/_A2[)tS_naF%9lW4@I&)Sqk;;R4^lspXAITr'e5uM[uieLkghNHa]$eHhmL[P
%NZ,$2^<]X<]<\!1Co8f<l,n1\ZCS.7V[^$oZm+Cmm;srNrTVs0]q6^F:`ZRp%-PH`@8NjtP/sl2Ne_GA[BUW';&a"%\kQ]3:n+;1
%ktnaY1AO[&L<A24[=F-G]@(A`'N!?a(DW_=+=>=\BPhX#Ea;3ZLSQ8UbI4>1W7hU4:!n20pdCZZCnelGX1:!ImL5'u\e^?K"1G]^
%$R2AD[o'Xn^/bqQWLSqMgLns/eL"p-)flU]&\C>Ujm>oO_!W*ioq[+?rUo)l!+H_*)q[#@SV^$YGeqg%),@87lNc;I`O_:M?18A0
%S5=.$lk#*Dr,TWEfk[q1!'su^m&RR;eu_f;pB#(=7lFJ5P-bagYQ7gf[EBV<CMJfRK+6:!/_@$B>7f+k]X[qq,ba=r7k5??m8$W?
%9UZ<'\tf%`>BMe4)c:#!;2l7c:P2LMH7Tb/)Sp6X'F[I#[5htf-&;T6(#ti!)m^&mg8O1,I;hqqIPDUGlK-RA24#i4U5DB'%";_K
%N2DFp72Y<1fG#dGAcs7N@`nM%\ErREFZITAT30Fqd),Y-7<X@#80$'D`i=rCE!2;9]k`V@,ZBS;Vq:e:dY,e!Wg)%[ND6+gpVEgN
%GR0:c2%R"V?"pL";XV8(FZ0?1D!9a]e,u)CUj\5//k/9N<_Kt3_Hg9u/<U+2C:0XVm0sCb/=Oot&b_r_+^'B<lXWh`b]/fS7_M0[
%gZ")a0!8!Q-_Oe9PD5k<jWI$&k\%EEnP,2I\Y3RG#:K6>XabB6D%'UtW)`i:V`r-$kZDD8*270Fb5,FPOKFhbfoBe95!/Qh)]<Fq
%lUo.C_Zo*1JqA%i6`?UkfTTeBg_V$C2M',YKX&sRac0XkIUeOJCr640<W)m`]kL[i445h\I\,jds2!A3J8(uel>@^N?6G^N&g7'd
%Mua/n'AK$5B0JGmrN.R:m00ecF#%empH9BBe5E8FW_K><:FmJ)-WXAhojlg6JK'joX6>(s:IZYNG`=^<7Z63(fp.C%,8c])5=MHp
%.gDu[8l!l9Fp0]P),,CJ)MWeKDUT)_9B9M^-%ihF1OF"O20,i,816?t*]t^@:g=0=3Z%WN3d?jc?`GZ=l^Q0KhM4%dE,F-10MRrh
%S(9"K%"fck"'+^t\l#Z'/"B.@*I9b&MT<e(L8@WC;RoE@j.5s5k\Y/N'%eX"aZqENWYL[$lFicmL#a.^9LVjiF=_a@jYIfZ1=n2%
%YrK'.8Qq+,dR$NS1bcGd@Z[!mX3taY$oO3e6!0D*APuLoM'l=MTqSN)TY">DTGA?C<Cs>J$/8QhY"s;DX(#1r,dG_*<Csa'8^6d.
%CSh8q;+YF9B3+/K9AriJ@Ur>.Qi'Q-4Wp;2nIN2a2dVa"8U)1=O2L3"TI*KohH-Cf@WW7('@)QZf/a4Fb)B6-`^V=qq^<lX+,+J3
%A?m1jF:nl.,kiduUrnlh_&Fn+1hIXTN^ZT?ojBUk(tD/CELq0.6&lWA8g+1uAXXWu:',UsWcj:FJH>$WJA"Cq$B6:jq4`V/daUuM
%3[mG8l<#=T'Mi5G9U/.]dc*o\ZC2RuND@>bRG&\pX-4)4?1U:h3[r+U"7lk8^]uGUMO]$"dJmNqJ`q#4^#Q]0JAcX=Z*Jm3enZ<]
%N7B$6B6ed0GBpQ>H*hd@[!-f&GBpQ>H*hd@['t.&[!-f&GBpQ>H*hd@[.fcFp*O^4-(X.W:P63Uon_#4$G9WYNE.Ud3rp&;Yn+l@
%a=JA\5iTEbn<-HC7Y*WB+QiGWPq9mPT.UFg4Au8<r2\=7lTjs@%]Y^RTXr'd5#bd_ajP*F$1pE#EXl8`H"SttoF=N8eS:r23]l$_
%O3#3L-/c<<_+u%d,2<$'IX:!VQRC)>&*p<;IB)EWPk3"i-lr2(*/%q8T@iQV@FNMO(=iDM'i?FMg;a#^8W3Ue%&a%eam_DiamejV
%>':c8]8W%]7a!EZAXCfMb@oR?[-TPOFr;mDN0[a=b:]Q$5<i=pHWDK+9gj_INKh^Y)3DCn+t7Q'j21=4-;uQ1lkEGV&stIajuF\`
%R/[&/[3lSm=s=K95)/tjiI3r1U1?CQ"Q(\1YJ"H6\Oh^EWn%hqhr(!^23Sgac4*\cnV[S/b;Akf8-l-l*W'dh"2gBrA7C&/PZZ-F
%2Vs#=2.49,Rnfn]8h0K1=gi*E*$E&7!,EqG-W,.ZKb=O0$4.)%M=PV].//hNW]KlNDE&3AKW[,KW/=]Sbe,d\b>mVURc_4LZT:ZO
%0ABG)Yml.*3&+g37Eb5$7&kfPWp^8PdoE2ZE1o\ZYsY,K,-Q9nA//`H893%!EdT)6qDg_Ib/=p_o<8nXQ:r,HoHN>5>r'toUbY\M
%cV\3\ct9<I%VC!_=^L:mJ[ks(Ah>]2=hWc0YTCM;QDP>R73X\-298`VQfMr)\?YHeb/YCC4LgP\R?T`APiW&cY'+R;E:`"TH*("[
%D6GAZ&u?9_$3o_b#FVh9D<%Rr'2Di:%MiG[_%'W"V)PGp'!q]QWL=oT5Fa]0\0"]<*bNrdMF.![V4Q33G3-P`79V,FJ;6!Rn-VFH
%WNj*2A4DE)$m2cI=9/[[1GVVH#V$8g,#F$&l8HKlPks`4RL3[OU9UF8E8cY@,S5*AJs#XA'E(7_^rN"'UoW1%drBuF_M=MJD,"u]
%d@=/D:rKssR%IYP&bf\'Vr9bc-"B8r'QLpMHlh(j)Uijc;AS,h:eEP>#(2:R%[Ya@d,PWPndtE'X>Whb$WI4;W&!`2GaSQB3M@Eh
%MY/RM;A/4]RoCgB0Tb'a!K(Ob/^WNOP;G2JJ7`n$S_AqKbGcJr%<23bY5f^4=eqlO_okHFA2T;`Brcc^p>NAX?ZK'\4#=?bgpI<t
%:-#6R_)u,MaBC0%ii!uhF/;XE:,#/5'!*PDhP<J2@>Y-^G"AX.3sC%s:ul]1S2kg&7aO-?="6(.lstSN.kYh(+alQ^>VBlJkUfOL
%(NaN:V$D5^@*Mf$`nguZZ;W2G(3[QhE$Y+g7`GQE4d6m,#lTQA%&0F:9XUWNc3Z@0]*\+>X=KS=:E#'XE+.ZkVlIf"iW<F6au"n\
%&jEfr_Ub%6k1W_7F?K*u2g:Z@%p4SF5nML"=BIAMi%Ya(_=.hr#(o=49RS84/ZD_'4-Xt#+B"_lUA\LO(h7<V^'0^3OTdfC"*nkf
%cXD&o]rkOhNtL$pblVErofOAR'XaV\%/XZ!`DD.>W=Yn"omJ`qhd^d_(d52Y3-t'f=^OIu*+)cHASW:n#1t];agCs(29(PUES.=E
%"W05'7FlVGc"`aOp0NKR6DsYZ`.:8S:Ge)/XD]*;`JRX,*96p[#Q#2!PR!2MJ&>ElY=Wu08G/W0g0Rr#HGIJNS/se5L'QSY@JVEB
%CNrBkLF!9;*'BW%qH.omOlp4gZALK\91@Pp_df42XRICWJu?9.]-kT"'N'#=8oLH.9j,>D3)@1(aeT=oiW0/PH#Q8hLA-a.#sD(D
%0`;,g@;-b-iR5:DHMkSd9Z2<BX,YR\3*5q5428MNJ[E5M5<\E.Sdd`o&`C@0Uu?DjmJl:WIm#rk^Lc\KcamcYn(-?^G&-a)^ZI$C
%rOmBR3]J'"Q(BgZc,97JZo-KS&*D48@nHX,f'IQA@/?E8F]uB@0$J@HoKMF(I4Y0j=@Vf;pcWR5r/Ue-i.(:3&cQ$m9;eP*C"_rn
%^'+%qqk7=^2++jre$)drKY8^;oo^S1]nr/JR;R3FB<@q,:%^[#BR.<keggd%(TtY_Ybk@'`21q-N]"VeYnEH"q#=2Zs7QA02ZDTj
%Mn5=0Q]C;#;5.tV#utWbOBu@M^ZZrLr9qEnkke9M3(WD=89ri:2Ud>;eGhVIZ!RN#[D*E51&TofYO)"&B!2+;Z?^*TB=C&%m9e%t
%Hi60ToG\/%\Os'_/&BNmo;1QHi'=%/>MeV7S9EYqOZrLn`5MZpGID,Ge6l46-SI]"!er!4Y,16+qZ)*o,4s0F\1B(L$D$1/,aGA'
%-85:8.R/:kg=tNG<`ZqKVX3:uI1Mn[bTZ]RgGmsO8INLEpkP)iim54<CA2p2n)^!%!Scs_6+bNH[3Ir7Um`^98ebR^D&+LK[PM[,
%NmIO&g)P9>r_WRMr`NkjXZ]PB=`Z9c2WdG)/WMi<S'pSIT?m<BW?!lI2`mp&<OM:gESJiamX<;U-UgYFd=3C;nPK*+>UBd^CIL9W
%C@-h,""$s]:]pKFKV)1J^tm;79-\DmY.HRD)%HG_C/KCh$J)dQg2=CrT_8'LYM,9lc#"]qHL7C]>O4@`n$(R'DKhSk(VBYAi"PtI
%bN>JX&h/J%lL!&DDh#9nrj7%p7*mhGn4Mr>8tpFaE\.*nXgD9#;ef+WqB@hJQP`op$r=L[5LlqEAOT&$+%g^k-[6tt-')M_&Io0j
%8?AV;"a@2:"pW7=L;ro]&(?441r2Kh,R_U[JN?1tqnE8]5NcHEW!]jZoaWYpYrY/AE387MYP@0)1`_:NB`;a2*rC#77bIHMM7Bf)
%DVa:nXEL;XF8"upVI$,@gp5n->u^0:1j6Q+7t1/*oIcXoQ#GNb;n+TDYUg<N#`9gR]+87@_7DF%2^aUTLc*=7#b;8dbi26WV:kV5
%jQ+kjWIfH^i*b1YQ,*8X)Ag[0]A5:6g\QPCqqpdT,+0D^#pLPC@NmRj'ub$i!Dt8S8X@<I8BI)1iQTAUWIWWZ,iS17kh3#+QlU:s
%m@4_*WEp*2%D70E*6i9=Trn*d2`gnlh0#^U/iDF#%2Tqo1IM<r:F<hT@I[!E2,.M!P2^tL_YQj@(jG&%bhn0'?4>R-^UJPoqtl76
%Z"(hEhfet8\;GO4aX8'DK$UOF>fmef(QU?Ao['A9`T<`RN:`8frc6"dmdfCf%:=o!ci9o3\GqgESGqjYrgOps^Mp12RuMp,>A&c9
%3C,$OY*h6q"k,/s,X:NY'DlnS97N",p'ogRSZ^HQ"jDGh7V3InaAZ5ShV+MQQMo+`Sf^S&h\RjC0k(%T;$J"\QJg:B]T&.$OijMt
%ltAu2X-8^1rW3`1T+kqP_hQcn;rH&f.K78XnVo)A:j#2imF=Y?Y*ch[T3k&(I_Fr33KI%AiJjU'AD3M%F*5A].`\M^;Nc8UQQQTI
%`?2V"%$k6)bJ,9(T(.L%8!\jf\WDON(!#8hUN'&j#]ekB8H'ntGSqM$=i#),iqtPkI]:&1Z/GEO$AQa>pgmk2+-(iVj>&FgJ"8<Q
%TYnoH':FO>e!'eY(:fBdItJHna^9H'nm=tT34_46pc6/Ki?dEVHU,?--&>^8R'E*IkNVr(ec54G$fo1E;DQBTA<KNL@2Q>0$KL+"
%Nqb.H5,4EaJJj>J-LmPR\@p%8".85$jC`bCs(!#fcXIYg5R@fP!EBabAYS0&S=U\<lV8:66F+sLZ0>5Es$s"3AWCqTRAUZj!$G9^
%]XWhu8IVpr`_oB-iS\>11WYaWO,t[NOeahT=C`m]1(loG\s-*QJMejL;C&f1<s"qsY45JsLpHfJ+:KKt8?j]gSjP7/h['3K8Ycb_
%$8I`p^IX$Re"UB-0^6n/b>0n/s&NkA/l]P:j11uLFp,b,PZT]k7^]Il_-_[<GPq\bjS6L3+o<qRL[;402h(iuE,iu4Ijn"j*WO;B
%iZE0]s3X6&$[Sp>P!4!PFlEpRD0;V_mp0*[s7YcbB"'oA[1ui:mJZ_f(Hh6-.J^ALkD8>S%8%fN%QHYr'1lO17pT',kXWDdlWJ#i
%#bn:NJ=>W*ooaI`D^p*eT)#0dU:*!Q7KTnL[;/C,D;VO_guW+kR)*U,n^$aB&JN=&cG@1i9.#PUFb=#8R>^-9?0(e%I;[(YI[lGU
%J1YpUiBtS?!ZJ:?DQ2lE'76("Yq*LU?8pdhA_7MW(s=+5lpP8HE\,LE^Ln00I7$5]83+/##sK.d:Q?4.s*8um/B7NS6qgDt=i;`h
%+Cmr7cG62JPke)M'l&[hB\VFZK;Cs(,f3bqVH*u;iMn`CnqC1t:87P&?SK6ELM-+!/0/r#Yrkc&Rneq5MCf0D-NLc.-]a.U,_@MQ
%l:rT/0MkK4oFOJ*ELe4!%/tre,-R?#1JS(oEe/A0WO".l)VA$Q%;Ycj(5c7b`jR[S(a4de4!JmM.p0[1'k3=PM8:`1G8YmdnNTWs
%,LpUC*,-*#O^d&_O/S!eFsaLs^N6(.&U7dr;&o%_&\[_JF2'@/dn!uT+e6;^8-Qqg6uJ>RM/[Vu+s]l1b^Rg%o8i,rHHj!pP5\\t
%Tecm[Vht9h84]TAM#2FS:]:tZ``_@O?@Xo(&-`Hh=$$3?1<2>u@Eh%id(S-a8_"?%'4VBa,YI>"LGB'T1)]^$+^p&njog+NWHpHD
%GDKQK4#P!G\r/PQ1LnYp"CtPrd#d2U@b!'ajt;H8`t=HDTpSBa:)HVZMFYL7-CM^U?^Dm!<5`cb3n76)fFSYS>^Cf)&E#!WLPTWC
%_)J8r`]0dtH.fM=4gY355V("taYP)LiafhX8qi^M:5m:Mb^pu]8T>9QQj,VY>p_DU6oq$/j]MF2_PaD4g06*1+c\_+\@s4VkUn]P
%A_9,rTbYi7`8rBYn;<7j=UH9eVJl]$,XlM<8U6]0PA?Q66__G:H\C,aed9a2&e6`@E/!:PfRJi$!Wa4:oJDAf0h,UY[8M/QV+,.(
%`7r]hQRV<4/=&tc7JQ.99K]%IMhhck>,(m,)>&W(c!sPt`(?Is:\`MO<`YV$;EibJITALK6ao/boJMCQlHlaKkt6Ea/U$`mM3[9Z
%d@P]r--NM2)tX8d+Bnp.4-lclBl=glQ3XJ<_@KDTjM\nQD$N#936<F7@UU<T6uT4.B2PHCjJ$*OWLP/q*f7TnDeOktMo?"ieC7]%
%i&0UhJR5*8J<2$Q6#pR_mWh^8&_h;uN*t\@1;]m4]T,FF;,A/*2i_Um`j)<c80Wm$;P9a=Jkds/=)qDeS0?%^Q)3M-@)@lMa2!9P
%k[_gl.bsKLD]>$;\A(uk_1;q[dQVY['GQSm$e,oFk?s?,qB8296-n4t+s]e9OI!i+\ER/Uen1^i1@@1-6Uf?_"$`c_H!lEgGq(tR
%'-#c-ogk`t8EU7K=(#\mrJ]:_dT#`ua,9;A>B3\-R]BP!V3"VI7m"$X<\mabi5(As.;kOUkN>5rgf6XpWQk0qI(JH"Gst_'e:^Ii
%+pTB9U/7.`SWHgpF%ue')iU3<A!)qn\mqIL9Hr-U/:GMtDKH8sUhn>.:%+MLP7AYKTr.qnOY2GW:WfGp.<OR]<3D$=UZ6%<8nVC%
%>HqkMomK$hIm"91W[GAVkup`Dgi"3o-2fT$j@TUo&&gE;aNFG!dF:R5lls^HYJ88%<&OqqNl\P#'<.!!kV3<AN$.Uf;J&hoF(S/Z
%ME_r;KY*!!G2s.<n<L.9OsGBB.`em4TT];X0j;tf&h&0V^Gm%""H21Uem7gWN:E9o9MpFAnH[li8jWfsNmrnC+_=9W--<uTTHb`/
%9Zf9oR?8>M7K#/!<:F6/k>(;or_bd$!JsG4-4.SqXXMNe.+<@=6E^*9l'mm:+@cn?FaZdT3[.<KN`8e/BKB_87%ETR,..i$]$e;:
%0'IDK-2@HQ8q+cNic;EV[5,($7>2gWVl;EcaJMRN:IF8roJVVQ6oH7uM2ub?6"L"2GU5u'!^aj0s#PKVbqc!8nt^BW#teDIb$N@&
%6H(%J721maL5aBJCKZ[,W@>e`3T(F89!59IXUW2J[D"-DC&!E3rp/2@*'su<0\D.`WZ?AflkX#W([286H+j[;H:>T$<nR!P,o5kp
%@tI3K9*8]RV,=@sU2QB$G"I[u_OV90Aca!U)opQTdC,E9i$]KsRMNf6oW7=eE&Q/<D5HD6S`/eADm/U&j&m`oF@ki.+0Et7Tc:K$
%0i(6?mk";O^6=CZrI:+=7cg(a@-eD_4?`5eBe7[['40<J"JLYkJnR,:oK6&8J*r-6N0U(9DW+Jj?ZL)T9i+ho'kn:5KLd-4QpmCp
%:<s4u&L=c"BC$(EZ3WY_9Gn5e<3^h'?],d2/O-%Kb/,hYe"[WBaQh<DZ-mq?ebcJTPBLkDDiU8cDq=tgWSJ\u:Oq%m)Gg8-m4!Nk
%/^=7kUt^M+9?kjtd+LK"g![@QQ,0-h[s%A,7e,3?N]Q"p6/0$cD!mRU5N=sQ<tfiHAoIJ/pZ>knlJ4#\g]$'rT%V-YLZ+JPR!!'l
%#a\6.`W%5^m<*aP0PttF8c_M-g7tQ6P7*JqDnc!>9X`RA9g_(2BXck[DXUqGP,@KiA;VHV"Ii,AMlh+,X(YjRB3\tis7+).G+l/2
%qo-MU[f&(N*9Z!9)ijbB^OZ+V93H@JfYe-5W'`kt>b"amNdV!8rG)-*Df+Up_&pDlJ,^<Unfb`cn3=8Q[Z&DZq<moG+T!)EK@/8C
%"/bdGepdOl?UC,5a]LbdU@3Y.Sb8TkRc^6WaLn6gkO\/#D:r9,4u!jb$4WObXeU(&nE<3-_)D6<-Kp`/SN=5E3r<%>huZj+/UnX2
%JjeZps(p%s=#":Zf.\L9_u13mS?tf2IB]u*!]'Q^,BI^/#>-VeBO:"$HW2&l['XmtH9,^MLS\'BSPd#+om;%)MU<?[o9g=lce=$1
%Bq'"NiF>?L:f2',Hdoc#gMP`c60#ntDNpJG]D,u8&*NK\XP*!"r[]q\^ULfg&<9?fWc<A^lCX'ISR/obU_I:E?fj<uZZ>,hk.'u$
%o;p\(dA<1[)orK`WtWE-q]E6GD+2g=.1kpmSTa`nEs*`(gtIC9oca9ZnkQW1)uWgDM]m\F[GPF0X]HLRW&gs7G'gtrHMaPZ+o[Fr
%2ksu'e0tELRmYfS]J7Aim@<l?[=5SLGgbJn1,%US[oCVgBWp;5m$Co.Yf'0:lhF*r@PPPF/+#>"\^t^UB_I1Y:"USj5>-dI/Yun=
%58.XlQVO$J0Ss6$jK.\45IfN453PE_YrA(mXCSb7l+#>`*<SY/K)N%)C#"f=H0q5Ib/FjAm_]+t_t[_83.t9[_G6Q;A#!V3=o6\1
%^)(ji4=jLX7fCbYEsS9pOb!FY3l=/.YRNC,;s`hECNqgP>=!Eb=oHA'p?WWQ"XlS;l-pdPhCe342Cr_3G=Kij%a#(+>/j]]4#WS@
%f'N@l*:>dIbe8AOhX?u*Pd]=#F\:'\i5l6Cb/U'i;*6ot@L6.sE#=kQ0HLn1$jt5@8UG\m8Pd"`NFQ!A$9m-()k@$pSb(5aB1\QM
%)0MtB=<$m..t`#OFuC1^ZIa2H^Y@X]G.65(BAK9I-57:BN=5<oqt"_*eGgb7CHP@e7^I;`ei[c8T(PnH^'M><4lQ,oa`+RV!V!!u
%ob&=']ZLf,5'5-5:"'6IDW_]N#m2@N#"CY,hT](o]k@!8:Bj5]V;FR1!W)o>R_@:>IoZ:+e?EE>BM%A:0Dfr'$BlIAP5p*9G0Jhn
%410hS1JrqBn'e\8)cs1I\[<YO=)X>,]X`AJXtO]VaB(<i2[4K+3sSQa2:a6==0AXDfDi1kZF)k/B.MN7s3r,"2s1)As1*/]rcA%\
%Q.rdN?F_ickUL[E4oNG"#J.[UYWd=2OMMIZLA:(0-2hf8KcdI9_`q5OqpkB5I>,e&%Q4ma00aiTLECEZdB=L]ms`6JDQ_s%b>j"u
%2o&c>o]u@V'IW\AHhqmFF6hd0r3]2T<o\#h*mSbVIYD4]GMfi0&9<gSS$dkZGQ&iEb1!,F^"qo;k1[ht=^9528!RoZoPgLMqtVGC
%=^qi)lOVk(%sAJhNFqe5ou^`f2kl_e*4`_nfrIF5Q,g)?lV]ooa5^o`o?i&Fs+)Nd0+f#BpYnH%n+Q9U"bcoW&*FHZlLsM.&%<$T
%HG:\q$6]3$FEmC+9_@&T1&N3+C4KC#AFPqp2#qNb>2[)0nGDh'5`+X*s**(PG/i@PHT((0FLpj;SZG\rq5(:8a.)Kj<!PM0hqLrP
%\t]c%RYmENeqd3mX/)ogV+R]N7gbm=2p5S)Hi;EUg1J&-jeYKG^!`5CP:nRfI$<1"d;S0@GM]b_o3?HVdW270g`;Et/T=l_^-2[.
%orrXF_W/_#B05q?6:%!02LFIRB@2t"kr#UBT='N>HWrGd/ZcXsF)/2ZHLXj[F).bd5.H)_ZuXg2nn@X;inUY>Vcb'IQS0CraD3<l
%0CI_GP2'8U]YF,MI;mb02`LMqlip+GCJcpiJ#OMB7b?6n5F-5kY:Z=Uf8#F_12`Z5`g)*hok7;fI.4eR^6Z-MC7RG1>P3%4f&>7`
%NVtdi?s;I#Z')i75H95/:efe!/QPXCN?Rf1k\/qX]QU_d:ThI4Id,_+VaB\SdA+C3]j4G*KCn9sGOI&o[IVN*U\a@Y5-1q.Dgkeq
%)4"&6lAIUH2WsMs+2BQuYKbCc[a+.C+'teomX"X#b!G]6<'*_0Z@F-kDq8-onTB9IhQ9kZ,=$QWqfqn@%mSnJ>(='^n4IgPqf9BU
%ZZN=IOEfU:5D*D8067N'NL"fQ=$'#<XfbZA`&AL4:DZ5KXOh@'fW;L,DVom<kh=F!X49>PT/m?!#E9rc1lIZhl(E+ro1J3+U]"s%
%`k>SLK8'&4Q,_+oY;h+/p!lQ&0ao:.?[c+\oNJ_!(@F:f>u"2Phs$s$o'dd)$sF1p_XRu>?+*"K^BD]U\(^)I38.a(e<ZT.aR%$>
%\Y[8g[@9?A;0.!2\?T@e\9@8i`aURi-<^<+4*g42>3gZC=F7UYDM@Obq`t,:mG3:Ah3GIQiNg+[YN59rP3QrXG[<":#(=&>LtIJu
%:[6-J[@<Xe(>]O?(l<b;8A.h5(adtKqCnUM(@H(Cl(?O5D*1kdCPs.(<H%dEIg@%l3a0%?G@QcemiC94*PK%j[^uM#ksnoOM_Xk5
%<>B*_BN9Ik;>B'G?upP#YuNk/R(-%rIj/pbgV\@EBT"OGb&71$6N(<fnQ4-D<Oqk`H2d0MlPGhg>4l%s@&NU=rTf6(6Pu\h]\37Z
%#l7Ti^YS\'(1(%*f9NJ_qNk9UC7R"uH1g+V`ZaQ6gC.b?pN)d@n+YXgg!835a-EdHmDk^hq>J?k3el4#$Qoh9:<Us"m_*Fc<E$IZ
%Zf_,Lmc\CspX/2@Hu]DMHB^+AnTo/nFL;34BWHkj2&gK.D]J>oC\R,Ak54h=pgEL\g1D@MjS%S"[@_q"Y#e/!IrW_B./(2q1d!!D
%iG<m>4_icUI!W_eDq5\!=$LWK*BYrUU:&gdI/`u_22+Um&UCgU[l<JfT$GrJjS&,`6DM3Xp_EM=Rm%.JSW/&.e90DL-T>ISfB-k(
%7iT?f[In"@P.p%]MX0cu62+s;q:5?]98e/mUh.Z/gQ0H-fR:'?!5dl9?EZ9D*)FG<RX4Ah^I\rDo5*oPhbTi&Zd7jgk5;RRl=O>7
%jU6;$J&ZjP2`6t(lX4e/0%-b)g3Q>rVp$3p>bk6_bF_RK=20^f:TE7-bC4$skk0)^j7.`gi,iJ6s-.HY>Y<mR[L\C9_.Oj-<ol[.
%8;kdhqSB9='(G91.?V.1o(<)0d:%^K+*Q\hotrkp;;Qf*mj1K-.PG\HL1.]`Q0mCOh<[dYBoSpXdgJ-oCX@PFX]:GF:-4q\pXu&a
%lJHL:DYdlEh;X9/(@@Z0bh`*kb%[Ha?]h&F7d2'=f\RK]OF:G;I5j=hq;&V/WpHhaY-RZp;,.'JYC'Y`HVc4[PKtmJ*].b8g"Wi/
%Q(>8;`;Pr>UJ(d2anh[<E`4QX^JS@0XFBB<DONb,?=S=P&%5VVl/Wn$h71-94aM/sLL3j/iRd6SXAuu7f71J_GSaa`U%+*m2>RW6
%To]+)bL^O,l-b"TkJ8tNQ2V[b3o7&1O6?+IqB,F-#64$ki1In:r6no3*m_O6X+-\DmLTe>UH6/=ZL/5j#V+%?5M)Y_%4d+))6g@M
%>rF4E\%-_Wi1KtJrp+65%@Xr>#QMH;\7'&CM?LQ'H5N)Aq)Qb"ecu%oV$d78g=6:'j7:q@V?<WW63mO`RLl(:G8/G\2B,jajigh=
%L,]7Zb8YqF1KXn#'9J"k]tO)<IC=>ZXOF+_R$m.O&co\=o3jKn!WOT5II9$#-:brVo,F1SgFEa)-1[%i/#)($%dQa)N,dbJ08_@3
%0THO?,E97-rq#O8F$cMq^s3As)EdOGDm"mIo]I(Fc,P.6#B[kBF8?`?')fMH:)0=5)"f2WmphEmhml5Y1=M82nBB+ri/9["D&K&f
%9f$%&O'a_=4pS\Q*"ej#RLN$:1%2Xu(n3a/UsBHaBP_>$=0n=5<L+`?Z%rO#%O_#+(P]g$[aj4^H(ZQJGD_mps80blE5Qo?KHtMa
%F5qR0T]%^S%g7c!k`F-H#.T0`.e';_&$-HH#5'rm9H"/QSEP\*HIR-HYGD6ARJ3D3HFpK[no51pfj);Bh?D6dJGU6:YOk)P+#Z#A
%5C'T@H0'5F-u/4QAB#`p\dmk&rHS:k[24V+cGr`H)m//(2jLE99HGp77YV9h:m2kQh`=qc29>kD<9o<4oCnK+qX!2=H`)JupFnr$
%\c20N>[BKQgO<@Vr:k'XT2P>\]<^7nDlrJU*:/4qGJ_4*(<Fs-GoCfiXY"tXlkf]5I!,E/prtHHrHk<I\@Z"2MgWWfG$/tVYhm+-
%n\?p^G9<C;N],TnI%P8$F7ft_E2V)*cb#ZpoKB,EnN)4SQhnm$[bk-t[j>uF`7sbQV8uC^R+m+A04fn6Am^EBVu6J.@K1T=*3-)E
%*^"BGe;G9dg5p[[W(Jsl81NHM&,8G#:>p:rkXYQD8S^-$'dED03.MOrf,n)U/JqoFYPNYFh<jM!)]qO[\OV_KZW-OsTbI6nU%:Yk
%i3%H4Y!;iI2@Gbu92Ok987-NZ]9TK7O+HJ&Rhd^b>p(!(GsR=fGGVrh\&/)Y=!#(+GUiqs!RLI?rVl>H2Jf\^CD`%F_,#uaqkmNi
%npFk'H)`t.YM[>6YA3G?NEY$"XtRTRLL42"qq`)qIrQddhY$=(2ULbLR1u]@nMJr6Di_*PNo",G!Mhr.1+_pg$kk6XXr]f1!5IdO
%6"2dq$G%r6X2k.`(&%sVo?k_[8N4M_HA&$Ap[)O7F)BrcfliTtIf+0^g?(lnlncD=T4Eho(9]C+bL0GO;>'akok/[Oc,inDkLl=D
%Q01qe?=JT'r8H1mfK"ZaRo+KZ[eD=fS<ge]LKj/^:E19Yg^0`O*89c;c1Sp2kXDfJjOHC3@5YX*qAK7Z>',kX*d[G33itTE->1j7
%[HHP-iK[dkhL2KdX,iV6+*NjOj\?!Y]!8b/\GGF*k3_u`"@UilnAc==H_@FJ2`EtG?TH!6`p7De++*=WShJl(3Ek)"J2YWd^bE^s
%,d+$J?QLcK*t<+;Sg]s$Q&WDUS__:O=*bg\^6uZu\ZFT9>4K7B*4rFh@2n7\KKIjS#'VitYPj)WB@r@>K;Ed"@r6Uq'tV%CDusO?
%Y2ADD5bFO:*4,OMa'EGf_Qk[f2s9'\)c[ro@Jad_mlZ'1?f+)i(C^bt?*,4(\ein4&$@?I\^\B7[nQ<"PQFHi]t,Fhg7N;l25qWZ
%>HW.mgC3r7krDsYjlq]i_oAU82r4T3LKE'A<^4l4'm=,u%g9,LIKM!\5=?NFn[+:hjgUf-Z69hZNe.aEKf9KmZ(@KRKZ[Q-9@r0_
%p;Y.T]h`%=XJ5&AR,;R/7.2YJ>lG^2iN!C=L.h`06@<WumG<bjonOocG?+2(Fh.)@p9VZZp?of[r>YJqUt&t`5O]+!V-r^Bf,q_B
%gdVZ^S!nl/?JBJ0CPGl'A\0n)mqdHaG4SH,!(^/XB%IjbO65TfSB7PNMo-LS^_ZareV!0L7h\?d5cno72\p;S"4DD=(;M4XrD`a*
%rpoo!A;>'<8fqB%UW2G><U?$<Jj8&%&j:VdInb,podtlcT6rXY=R"UerWEYC7<CXMlYdj"T!UCA;mES'U&XQZX<oT=Vb^Nt>D4E)
%m>pkZW7EX8\FT92[Bm-jJ'1)N$<GglRih'jN,IOiVI,Rl)<7Q/6dRD\Ng)hM:VOPMHWkcAYJ;9&'Ec8.^H8sr%]ns!gT],l?TlS0
%pD0$FaKJA'3+p)hP[U=NQL`>`f*?*aDF6DL=>/aUCKFK:o5h[t\U%N]M^M_ohVEtc8\Ci9Dl_bVc(>t,Zc^kA`oHaBlD\]fCW+fd
%ed"kD)+s,c9);ur.1MJj?J]q]*o/AD2?,GA[0sFYa#B:_dFN0l6p`Ga'h,mOGN]-(pE"X^EqbTQ*N'("Orma`Ft7:@9d\u"qSDd^
%@hn[dpcc3r=fZp0goRV"DEkX[LHVa"bK#mi9e*WeOQ3VCYdq;F+*e]S>eYB(IH=K+E'69'I.DliY)a#UJ",!sGj3o/m("#\mFctt
%7r.k2:JM\nVY;16Isns*`\(7";KH?(-P"IR6,),ZIsJ8Fk&l,S5!#a2\+c6?=.Xk,LA$RMph,pgXn?+ch7$`A]MUfmI2FNOXmYaW
%qr;<VlZV9Oj2';LrP?P5YeIWVM2G\Xrq_Tj^m&cO<_p0lMK-@UIMF]nn_<@!.[pNsQeVQCDKiX?YWDi70KM2`[c53`LX5^5CgMD"
%5.L<+<'TRWb/CY8"TlE_6'!)4j)NW8c.^"IG^LHY826S2M!V:hl`\'F+ten:lM'c(BS5-'9,1!8]mMoKSZ^Bp&,0G)"8X&B`p7qt
%m3DH?B+%.Z);h$Tcbs5a'c9U<^JqXD2$S!shXUHrh:$0=VDP.^r3X3YH3DW7nZBJ$,2&oNV8pnZC9Z\Oe:^Zs\B/qBC8e2&NS[,t
%oO-mZnpKEO;bud]-/EjP$1%*C=f#Ic(_cp/$rHtD<p7GE0F('IFL^mP+U6c6Hh0jKKK!Vs?=:)Egi&5cU(QbRh-MDepGSWG?[[qm
%>&OW/He-djS:3?_(].n38]=O#hlM%d5a4s&Kfb@P54Ss^3p8r=S$$*G:ICc#8j"LnDkE`YfNq]A=;uLk$,REQ*m@.)DYNdEdFB>j
%j*M_ldFp20_Ude3l49.tZ].I+f@8L-[A^CeDiEt>>@7,a!Hid%0mEJKL:OkB\gfppVfQFR\WL_n-s@a#+)EmWSR+H=\Tnk$q_++q
%<.#@Y?kkd)q7TXs[cZ/f=FIT^Y]X^^B_ZR];EK#'9MOt>Jc5B=3fLdUSiQGDosO5M]PjGZ8)5W^^-Hf"G5bZl\rhJC$KgdGD=1p\
%:$KsYoD(?/_)u#k>[(@[[]X>Mq5LtW6"%k'HM[JWUQXFTNpp;'M57q^V3a(5iafRQ?Fb=_'AoDULVEZY6sH&Q>4#..Sl%,&V]eV)
%^4"jc!(L?\>!4i\%nI%_##tVGIG+M=7V[a)jB%Z9J2+dE\[d.pSA''Q]0DdEkqhmh;6:urcr##hD"NU;S[.sbZEq%NCNFa4=5_Jc
%f%JSLQ#*FI(%"Cl?ntPR]ll7nhVXYQ?[R*dV>"^8C.IadY:><Uj6HKpoCuhon`.$Xp*@<Gjm$ILk/R8_LDO?YVU$&&^A,)>6N?F-
%W8WBXb'$k!EZuC^EV&l"E;oO\qVt(#7QDq[f;ba4"KY0fGkO&OrH-VCG-sF)6QrY9/Y9ZEaLbetDh+=!qs3CuAkR3@'i\4']lt)m
%bI!u:3M,&3\?hc5X]'NK+S2:mmd0]"m[mhc\E(1CqtmMO(#HV%XP-rh]D#[IIGKO`)-'u3:GmFoOU`Wq5CYXS_OQcnj?,$e(3btI
%2314$[3>k!9<Var?d)MrH\Xs=kI`E+5C_`AU_6rO#n.L@q\&8LO(U_q2`F"?4[0>SqPpju,2ID&bE(8i1goGnYC\GUP54]":fsXC
%YS+'871Co39(].?>2-1:mOYiu(>h6W<jK]"f]C@Q_'U^0hbtn;J[F7B!B*ud75"#g#C$l/p]cSk"14Y,"a/4A\(Z5[s&*4\pi9kc
%,O]h75/'4,!O?A&c%O*/jbp6b?aR%OCqcg=M:9I+hjbdjp,?/q?<!Q@cZdgo_rhEf@I3/b$U!+T"^HKSmDdSDm')qkMO-F@k^6Vt
%XR+Mn[k[d=lf7-@45`ENJHN@#_?"LD\*pEdXW65tJ*=PUk-:ECLtmL,5pm=-5f_p)B)K;b[(a:SJ(Um:.[U5KJ,]H$k1o!3<dFC^
%Z0r8`LnHgId6SjSD!^P,#U^j:htWt]7=4%15"3%W0]d.H&K&Y[$KEom)pQ]9(+[(F=.X8XT)6<C8%c#i\oJ@-fXZB\:ENX[DEZX<
%/$E=H_/.hpg3a$Xe"Yl"FGTYJ4H/dd&+[o/CEG0j6q-rAjI[2GSh/s,!>cM[47*M:>'D&RD_H""?I)tp]XsaW^)?uh%ksY`r`Ii:
%C5ieJ0[J0C9_;46rA8iZAQX-Th<mIB%h@<qM-!(tR)4[$MU1RWTBPu;[5f'>EYTt0/`,!FdP&YL]7]81WLmN^WF^Z5@:kb2?-MB$
%KRqD9SrEbL(j&NE1^D(ab`&d^))Zd<c,%A=:`!Ll5VmeJ!A?N7"s]Jub#7otXb]UGR9L!t/%ioU7JLDoC8daI(/2J"*0n0lN(`s(
%X):A^@8$(:i^B/Eg3LQ0^0,K[l/H3moJWt'\/8R8`qP<gWS]1;jp>@fHdo%+1lBdBEK-p^Xe`N>M<e?BDL+9a.a-1rSV)TgZ0!q2
%YYLF2NEHP]a>3_QI/FaQhWr%``Yb>j9k/)r&uLM\(F0TIMOGB=Be8l]oMBO!Ipl[>N==At[Rk<o3$l6,Uia,^AjJlNIH!DV9SB7?
%I=4"U/@k[m`AJQ"4$(VQiDoH)T")o<9aNPC:TPB*6:f5.j;oG0hL`7+0M>uhMEEG_`PZ#qXjA&2%XYR!1`u=H2#a[8r(pWpT:c$=
%V+$upp&;g12GGRf5&[(IKr2>rH%D:"U&KD^P@P6'UXl)Z3gt#AAuZ^%p?jEVP(hZX6XLPQC:`(<NaB-f??Y%P>SrIVrojT4Ib$Vt
%5O9E_0-E-;SF?*o'stMqmpdD#MV?V.X//6\-k=!X%"4MK2Q_G;gEtbA?c8Bj7t"ab_Z]Fh6-$CqWObOLZ1g`PHIgTKT(IC.f$U.?
%d]W?Ekc("$A!aUi?)'^shf/$tW_ugJ`UI&FDkuiE+;LL@]:INF(SJbG61[mIrW$GVcZ]#;k?kZgKsAYg@BTjaLEQb!BCEP`P;QDJ
%B5N4%K7dTZZjA5d9)anNi7MlOcDRb)Zb>/R5!4B*;VCC9r[j(0Basocbu(83B7!IflT(H8]VTo/l0Vg`@pIIN7$o;_PoVK_3;@Gi
%#C6@.4tKUpT[Os0fCJ]'P:fjAE4TPKmfGU6j-lY=#%Dic7&#csG(rj]U^O<HP.F+s'\\cC$I:Pl.lC]faK(f/P:rYb?XE(sl:_qD
%hF2dA\n]jI-V.i%&p!WRo-F(Oh"tC5cO[t5\+,^GPK[WMd)6q9BRa>bT+j\H`s8s5"f;F$*2<HlLd:DZ&%cc6R:_<GZ+Cn71ToC]
%^XgQ/rD6<:kEA2[Kj1cAC@<47Sa?$<SaJN3&'a=WYYAB4$bG%u;P.YWWL^?\eJ'^C<1Glp(o/0YQ(6?OAj$;UdtlX:gI"HtpI<oI
%YSYgC',b]10^"\(LhAL;aXLU4go[2C1YN<BU<T.N,TFmqP'9.).*4)b=+7US-u@bFYJ3fM"<iQNdMt)AU:Flqe-j9K-?&-%rOoKc
%OT<%A3/]5j/_\4K\^"nH4RSa-J]2n^::ie2KlA!9*6_MeCe>kLB"'j#5Z'mF"o_3@l`aO%P.YPq6,;A49S_KJjGU^1QRWMO.3$T8
%[4seo6LU#,^nqPkAo'TaZ0c_j:1@-@Kq8&$#?3e(`60g!"&KFH!5CC"33+e*9;D.UXscT8dj$B@5O==U=+nD!+XjoO.(YpV*@"Ai
%%AoRPR'm*Ll25iGeAKKK)F`)5Xk6("G2S/=N)EcW)7'[lKT.A,.@S7I]2L0_:"]0'fY;Q,2C0\R-\'FqUgD7Dkf@X>5.N,2ELgEU
%T+i37\=u3/.Q0j/s37f2cecuDF3,")o$:q9Iun*VZDtt1O;O=meBB>FiUHatS%W-X<l@FLGh-[/4m)UU:Wm)/Xf2T6HW]$5J&[pC
%7mgRKlOPPi2)Cs/NVfWk=eelQrNl*!Zt<GdciW%$fmTMVe/XZ$'Dit8J#&eF1\E[`4rdhGD/m78(=0p\%($EF09]m1ctkBonjLJ\
%<G^tUm1a%7)@hgsTN0aQXC#eo*Yj!kd]gnuA@Tm%eT0gKGn#*F.M+eE;6PE#`-N7VX@gD^/E&LdaWB!YQnd5ZDZi.1D`CC5@@R4u
%-bcI#[,4"e*;#eFR:u,]*hF@<:G=oc5<(&%6C6oKk$@.p?D-ti5?9IPXRR@O?Ak1UTQrIUQ92;CBVp<R[T',>cQ,_TD2<@A`s%d,
%[MpXP]6V])<eCo&JlB<bC:E(a5X"J#estIWSp/C==e&DH0M+d*d5h%t+\DOTdtL_U%Mce/AjcIRoTVd\%JItYolZb%jkj_CL@%G6
%%siD;7l0iX[MuYY^#:N1UDf\H?#4hm5ZI->h6oP!.C]fsD520!1D?-$rim1Ua6+H1QpGAi'".h44$Dj>raQXg3iuh?ctS,NEt67"
%\c\uS:]$ni)\/?@ZQC1!ekDPF)P86#Sc:S&l\nSTTqgjYh)Y1hmBD)c^;,L#D*2%paYV$sZ<cn_.^d_Q$l2g1W_:WBASh$0T,dcM
%gDsS(>sSNdlckL#@4$SJ#I*pO>3HVp@tEnIG'l!$)VDr6(7t&rF6"d9.ZWpK?'_^8c6nKLB\:-LDL'QhGYH[;[]S"++rBA9S=\&.
%D76FAen4[C0>Qr-"cG(^:4Ym-=INmYfg4`YW2k'Vl01mp%fI,jTs7)>R3'lN2LX@Z'rp_n(Fc5iVu%kH\mAn=MqGuZBNIg0g3_$3
%j%-'p=?_uMA4`/q@F"IMB#kLTn+st"'0f!m-t,$UM`B$<$Fp':2Vm58WCUIlB>_1"\=+E#WgGG4@JSfK7JnXkmS4]mku,7nEht6t
%EIZ?j7s.dGp@e/VdEIKElDk,D3FF!+MCPo,%`@#(<640j#?.7#A@-9X:26"cUH';3P!,n-PEn]poDEE0#n$gK3l3R1=<8--C%h!k
%qS0q?5Cq\uf#"cmUr[)O/N@oDk;F6e%hZqJmHT>d*tGP9(51$]EmXN5O>F!;PP3q=]jKLIqZ:jf@@?>B/'b^e+j,KtFn@bGL"G1!
%i-TIR8ABFgs3\YC^+@UCkA+3,?]S!(r;W]@&D5XQfB=WI6V0b3;c_oLV+-MTD_R5DDg&d<=>-e@`]j;'+0&T_I=a+Z=Cshb5N.6Y
%(&[7f+2@d?%$@T\iicSOg%nq\H37(m;3pHZ/K);#:6/[MGo#A>p@o83A08X9r?qU<#_)UOYWk`2.Qo5oq[f%dItKt's7S*nBtulY
%EIt=KY7:=cAmE$Xd*U%X!<*3.^]!K;Du[sQF7Z6[Y@njDs0p<fDDW=,B!=UfM&bDu`I?jCS0o1A1mhhK&?67XKM[6'b/ZrL/FtiU
%XoXc+&M"F+*f?V\V&Vd83G+C)[I@Cj$dTMdVNR8WPi8\:"Ngj29.Ju-i7nRb\"_)%)75UhLo%?XYm;=?+!euQ2o@[i;GImnQ*@_C
%V;C3PSu7Ba;N>f>.hJYi9RR74k@u'NS>Q'23DLc"ZfPa.*Reib/>[WsZK0@?I>a0^-4#RQ)$erZqClWZ*RDnHi#%!MZAbWsfRp'_
%">D64DbL`0\A[QS"bH4]#N,XfLiP@&@#u#@!+fl1&B;N2$pb3H/nIF\i+:ku1nfTDH-d,%*=4SS^2d#B1a[5Eb'BM`;GF8(^@LPT
%)]FU[R+"I5LiO\&0T_ks'#>rO9c>euU.N\@lHltlM8VucBcm[!=9G7o$bRj^fFT3a'PUrW/ok,?OfIgLJ!$N--n?Z:R[J('1rne=
%)%FGbVO'&I$=f)\&4DCLURV<`m0s8H,82n<Y'COs_?YmZb(*Ba(^S\nUC@#Fatub3@M_O]i*.h?!!<'-4J9GG^oRs=M9ul+6tD@"
%jAr\J+sJ?6:kEU+lcH#/E@sk<826QhUKhr.-)kA%S0`L9AslhA!/`&Nd"k2L^Z-l-8eA34\(/"(WKGuIrISPraj'eArZs]FV?GQ&
%7/<)T>UY:YMZcUK%gX[)!Q#9TN:NbM73l?F-C7?/N"O!QP,LQi%R5O&.d)Bk%tq;^61TU!%2q^?/pXP0K70?q+:pUP;nLJ1Jd=u:
%C7$;^&D2s:$8[^(@msr1-"*IJDaEq"R4B[1nWgs-H)eU_g;=hSo*#\GA5,u'cTm<<=:.28-r-2m8D<J;ikWj.D^.'@-q?g;`T%s5
%'PSkT8I-$N"H&>%bQH8%^r)P4lo,&=+054cqr*K!63uh483L=O1Tmrj5R(uEZ8`52L/r;gG>XSs`KVgcKq@?H[%X1>4W18O>Z"jA
%A@P#NSt[!1\JEIf-Hr4%p>H>c/#"ARMF^B[=H?F`L]*N(RXf[RnXuQYFX+:>@2q.T#P'8%TX()"J3bE5JmQN>AAJu;C"KthVhkJ[
%9_c5q2JMJ*!s5RiE4:@r8Us`8e8F7#ardJt01jY[,e0u`JKcQ8%SnYT.$mY`.F3gaR?1T2a!;We&1X"l2C*KCcjO)s%#%8f[X_S3
%+GJ>A)PHku]f$O3b:10Kba+<a>bN-M1A=$c2;:g13+rRq2HJ$RE>.ok"A2rrT[fr5[1$"Yk?1*PGu.:g!>Kc7/jbc-A@XAE1183P
%MLB3(JbnGq0BmH0)=3#9Q[r6@H(P?`Lc#G.`L;DtZ'O>Yb[Oq\ARL\B6l*]Z@$>86d"jQp=er<b@3jF:l$?eJ8].:T(MhYW8\$Ju
%J1+PQnq't2;IrmOP?7nubGFj-<JHI8[%Jet!,%Be/8,;E/2FYb&o/Aj-5-Qf##rZTb'^I[+f?j=>Fa)[Nd*i.!)Zl?AHf=C:uIDe
%(Mam;n'%,6cm.0g`oo7"%G-7H2HI!>JoE/dEJ7B5aZT(S)N\..KEVf2=IkuZEm4^^1N?5eY'Ehgf.u.Yb"=F0/OKo,ab!b:h`SV\
%oD$?>CbW%T;QFRY)h8c(CLJJ-&0su;-qH7$U"Jou8iD3U=E0%WC`^Z]C]RL,2I$KL)(.o@!lkA6ABU(^'B9(TA4+o]^(eIV6rMFL
%'5YJ@,#/4HR%[Z_#[dei32M(U?iq@19@*B#iodN`Ze,@<!he^l3hUIM!?ucc/PP8@k$3b#V81X*;7];qD,t[7!L0KUdoEr?Gmq;M
%qB5VMLm&_*;)\W)<Z=6BfCV>"YN\?4Y6j$A1tNpF3L`%u;_GFF[*E9D-@2JI2<AZ:UsDpB;U-VN+N^%;,M(Pl,>_$Ii,&Pc_'@F`
%<-arSaR_;QW:;ce4HPi^,u`YIN#T`MdG4q=ROS9`\=5M48#i9Q,%5(+?aEYoD??r9j<A9)K"2V3k>8^Y!6UHqHcXdo"JY$BXJ''5
%$!CW!<\j.q&X=nBi_nuVk3-mJH-d,"&SHh$jD4lGQGsfNc6eVQ<^/*[c=W)3\E_@!Ri]Xl2Ee!Y2IR0BR24cBC]\WsUt(=p21^Hj
%()ra6HqcX_M6o<@^*\pY`m]g_qO0[tKJDjk-stF8hY<N\`;,iCd.j%i15PXhPcKYQ9(Se?C;NqY.?"@$XsS+U`4M%&cIL,`0;rB/
%:#Jk;1%b0<^*\An/CbA,q3kgAk!rZNNe',$LGg$k9FMCFXCr-%RfL\;Jq<u1656+s83&(L2UEu'0oSL%?i(r_#8dP7kX!VILr!C_
%&;u5P3J\BF!KI.j1bs]a2<RZ-,[jld?mq!jJWW@&Tu!kHm_Cg)"&LQlKa'F^dDo1tmZ0%HR7FM+T)A^Y(eZVOV3kh.&IM`F##Lfi
%8C>Z6D9Rb8OWkKYHD1TNZp?bW6%V\A*>=C+W<'LE(/^g%$;j4[p^HO_"E5uh2\AG;Mi=SW:i4X6)aC>b3=#4plo&6l,,'^aP_]3-
%_ua>Dj"k(j7C\?t70\>$@i9=k!^UZcfj*bN%[%WU@1<AP#h/ne(hUK&#UChIH[H<VF*:@s2cW0]JP9ah3CUs,rj#LjL!-G[*5]pP
%5_Mdh+tX<DgA)q:,L\]0ess-u/DdPj'Z_(hTpi'B$)G;ni_<`<>T2c%;m^MJ%$C1U+Ep,f-lWTIQ\"=V+HU&+$,e)d*Z@PG9prG/
%dYQjk_B*@0P)M\8"X)GqP1sma'SE;O;iEP&g+>qD+[D,!_FGG+euY"-d:IP.*4$8:9$1WQ4'U#ui2CGpc\$BX8^F3i)k',</rY\/
%-aA_;N971Hq90O8O>g5OC5<KIHcJ>3cim-g?6Cs0[YX`PJPM,`d[C=Y>M,5hn_>4oNK'uV/2RUnjKM+&0GQm1aL.cb,siN7FI4(\
%POL-"L7(*1d!g]S!M,^"3uJJq,8eWqKZHiUI>!V-/Q%aJq]QS=Iu8dmVB&nJ$W]SjP/Z/Q87L_b\Uh+%!E`fu8@>4X2Femi2r%eG
%\bP$cBZ5hXO71Ka8<)%pZg^6:Cd"_j$?d5^ga=-5U%L)kN<,KD#n%LN$kU^0Y[k_LD>g\T7jJqVGljEs!F+n9J9nLM7]"G:BgDGW
%OYSOU_'[B)g]5.N0h$s#P^sW9+Bm_,Xb0_Y(-)7ti<-056C7l>5`MWJ"M+e]U;2k5idjr$H;J"7,ZAjr\nm37*Y^m_'Oh4IDMSTE
%%>5:1WDBofS`!p$_^4g:Q"-nA!XY.&8"VT4TX0;#c07MWCCDYhm%#S%h*Y[]^H\M@Opl"8R5dM7-8_HbO=lSWBHr2i=XKO74@*'+
%J5Dp_,`0`"%ELgj]+HN8kQi0-#fspt'T+[9=ZetT/-+),GZ:=GDeqcARbPb21:4uFK(aDi5m\THd'k-L1G^Y/bQnhB/r#r>m^@dR
%/$6i/Z<L%eL=pVnKJkYDi`\@Z]^U"+>&ra5Bq.a9kFn+e.V+AA)BoQ%Jbm>++]DOj%D[W@E@4>V7$'(0^+c"q"*lB<K,WR"]V">C
%YMfHa*jbD+N$\[D@WaA92'u!AQ?cl,\bZ(/35OFk"%A3V8p,&='+[&i$Z'd21\E%b#@YK6'NF]bQ$cLGJ2!5MX]rlp^/*ZAEJt_g
%`UI9<8!sm)KMX`U8e7V<"FtR4Gr!hI:aXHBn]]\=Rt;U[!$sc$O/%eSBbGs[gB>jt_M0d7q)"Lm)Ag<D#%T9!glRp\lcN/F:V#="
%Gc!p10Lg^;Nj<YeU;="'r$5:fQCsf/?k!Ro^,g4<K$L++Qq=Huju`]VN?Hk(L8p*-$pYJ7!_afg%@IcaYOMc;"/KqQ1]Sq^EZR&j
%%EY"-!6?ts&C6NH?lB<HU%DjU#YML)B1rC<jI$2ne<gF?b(TC=!uR?CYp`]Y!)78BMR!WjPc)_AL>H`0W<m*l<.]a<LdB;@`#198
%8Q8H\%VZ2j=DMZ*U0)00aeK^C_a%>,"!*P?&Bb_-R`Y%%[AMS!djq5f%1URl3Mr,cD#basdmd-)daTPJK,4J22`/>;V*4_^O-^Dl
%&S8Zjogn"t>9K3X%Y\a*nk\H#(i]p+VThJ(g^8/uF*jEQZpK44;IA4*+A^d=:a9iY`"S>uTu8O5A7Ee],An*_4@ss@M]A]7=t/b!
%l\eu?9:GFU+Y()lbN1"HrIPCglOi^CN(_?tpD!j?E62Rl,mhX1"U_a6%u%Fp\o@p5'3^L%fe\!'XmJdmLh@;daUnh=8/&4"n^OZ@
%of<)F//)h<&EfS!:(P+3!i7;?2@]n!%m17C@?-.(L:'";$^nn?1/)HJdk$>4qkkku'5$hATiiuQDBr&E"X%&#K]X-_)M2d`RC7Qb
%bSKiKVp>lgiM:HTWH/T'-7RD]As<lc$#Xu$\%jsTNN9t,3EeP^@$>+*$F6/#RCHcCQDp9?Yo/lnoIU?t4:`Cb[7:$P#lm4T`2sfZ
%KYL3@V'\QZ7URMG8K=/F]o=L&W#t0<gl$h#6UD:JS,6oSa!7kic+s6L;JiOJR"/\>RH-f85l\7E!Hb@NK#ph2YmeN,-3,b$l9uFJ
%SlB=@Q6=r1Ci$[m"T'A=kNDoB5,D%AW(TZHBU5*SL(@!\XHQX4:P%QjR+>h<<T*,/NY-Ls-)]h=+G,?':N<Q9'?X8C5qYsLL[$u*
%ln2lsrIFGQ^bs(j$r\:4Vh!E=SKb!''G+nRdXM%X5@9bT5dZ@\/[d*(JJolj:VT5X1m&W=VEgqLV2<-P3D&C<bYM/&&<DeWB!#0#
%3K7S%0L=mDlq^;R5Z#Bn/!Hi\6qHto]1u9iO;(7t4i16^;7,J)+3C$c->$c9'K@,[Ec&<:Nrk0a:$@Yd'G(D9:5:i'RK>&I2rR1t
%;c)clGW&(qAQnji)%X9P9EksBb`Kh*V(;cljA3][?'^'QeQE4b''e9!A18WlWhWKG94>]onQdB#HX)j<c:aUb"A2S-\`_1?4a7m'
%+;*p/M8^Qb(=OAf-m/Xl3%oQSYQo2/$6bXS'\'jQ[0`gVJ6RMiUVQ,]f9gH?UHj4)Ef[=WSC:nb+o;U<&B?>X28BPgOg`dh7puIi
%Ib9"),IBUf^Kr8n7HpDdE4pWIC'WkYqG;p8]n?r9AUMfPNWf2gbQG9BdoaS"r.aEr,f]](Ka9rR3](Uok[TFb$CO\F@e;sH5pNaD
%it?p1OZH?7pb4fco+"I2_4>'00o@XrR2RJT#G)*ti$S+Q!\HjIbgK2RCbY8g*BK,0-=nCO0doAbat:R'#imV4DT7&9J=oS)5!>l1
%CDFr:BUE8_KcW1hU^.+b9P>@Mcer#b;7JH<<[(-J5K>jQWkq,bAs(e8-MnBL*&EGMj9;.JTMFY_1ld_C'Kd.Fp*FG4R,P$Tn6J&Y
%CG?>G<5^L9.F3WiQt$p-$%kF_.:OC!'et<91eE1mM"/b`VXs#B,"?*2RO+OLNp2?_p[k[S>Gm5_.SRuJl!X_"SGPed#`97iqMZUf
%8nD$tOs3@lS="+Od]\I`aF&t?T7VetQP3Uce>;:aL%I'Ni\Y5?*_%Pfgs:RA:_\aG5T(pu$L/!j$=^`2"\m@n*ke3f-JGB[[$L><
%d[mMLR&>]O$3J(?(KAQiSG_>n_1=26$R/_P&KD^@S5]54:(d@GIjPZj'X82!MO6YsM'\6-NZ%,E+BP<rEU.k,fOl;(LiL,'7/Dbe
%3)qS*[N'!j,R@NG"]\5HPXQplcSM:LL_4^3.\]]ZaJn/18uc"\$ss\F*8iY.nJ%%#QsSoi01UkKN(&rW\Z8I=j(q$Dnt7-SB-D\'
%4FpBpY):%gM,NTMQ6u^_dkuAZ/\.AU9L*E,))"<b-ZRKG#`=mCN2L+k0EHGi=_,gs,ZD&M-tBMG"N)0]kf[tBa3>J=B!4Y?*1dau
%5".C^JArR=2s1$3j<-g"Nldk<2upnhNWC7RQc;"EU5[eT:G0I*#[rJS/(A*TUs?_oLb(=eK*6$>W-=s?S6nVTP)*@a!(k[i3"L@8
%8.`WA9hlQ2m0(GdrM)LY8T$f/R$r?ZY],S1L@IEF/b.U/Dl3;fNn94FY3+]9^qdKAi$9_WR@+hjo.Q@]_kSPN-ra9jbV$pBKAZ(N
%9.`RM)$CJ3Y,MmCdrB+t+KeI09rsXENQg3:$jDmbGOVk[r0<FFHk;[bgjWmdW(GIn?V@G0O>0][)!,]\c0Bn.2.@CK!DY/&F8u.C
%5pi#=$=P391n.#p_t4sd+%aKDdY.R#o44Wj=3@P)L#%Rm(GiJK.WM$"aq[I?Ct,I89sk_XFh1SS.>`R'0mA;t?:);-Al(gMhHC4A
%B+_-]ZG"Z#F:s6LOdd%?R:hh9Z+1rEq6UEJa_c93m6SBRZS6t+BX-ipa6"d9`2Y>TUs@@G7gUFH1s8ecQlTo3Pr$Bd-p_>RU,Pjn
%=Ve@HH:>(K/:sRq5afjg8L,VWRGFY33uVH\bC[,:G\&Y_N+PA*33e$096C#`44P[YMjs'2F"lfFor5A\-]>Z:D&(,NVp"4%S(<J;
%50:lFeE=A3D8BVQ"U^hJ6=hDDr<=O(4EUt9KQM9Oor:4+7]9k[:(Eh0,:GDc[HLGV+IU>FeS!UCqFPYSh9aO$-tPHgVB_,V\%-3q
%\1F*-8-1,,ck%b+`150#)%.I2jQ:cU3Fa4^04WR35g'4Q''F`7PRheI/3[%*Z&m=AbWjOQK@*"PRBg"UmmSTTe3t)4)LAa_jVMgH
%1iV2Y9%;Fa$;J'9#FaG![UL2FkX9$da/&QRfa#%im0VS7)iGd;\cZff1f'j_J[Q)s6NW__F+&fR[#+$fF2,d9BHra]P@mGlg;Llq
%"J,eVSH^55(=V[Y%5E^kg^t06>dQ<s80;N/s2kb!FJ)>aeotKnJbB3jr4!c78B"\(JU<lZElbcrD1k_=,i_1581)/4R7XG\OVU(!
%c\#_AS2NXC1oGu7@2,-2\-/SWBWZh3k@GmeV]7Mi9gUD.oT:jWbW.UN!6NTG/OS[*M@`U1Q:]IsLpUjn8S]`MTT4F3=34G<>6FOI
%'4K$f0bi\7]hjdq25),q=XR:)K$^MmZU-(]%IRBY*_-!*dm3Mp'qo.`E+=]s>DiXI_'pn;+-38e7CL],lYA/VTu7(,,8VW22l2P%
%UlJ\+[3IAl-J;/'_o`0d)YBm[-A98D>k?TlFMXH^;fur4i?UQW9Xd.6YTD;$(&3NE"nOjTceAqEGakj=pp!9+4&1D6,`rJ@%nnNL
%2oOe:fL3,$/rLk)pO8ER9@58rM>C(EbjG*Qc;9_YJ:%PAgX&/!rfUZMb:t4D&)h)i(Q8b5C5`SFH&2VJ"*6"k'B-Ah"s2aHd)a!I
%r$4*Sn7\C0D%)!L>f8oin0V[Z@fRoQa(u/H1_l^DJQ3D+nHNK6:go'jO?&)\JMlEj.t_TF,j(VUX:,D>3B#tAPkBP?Ob#f,L`f#?
%K+`ih`,u2;I>QT41B\c[ESnn=8>HT^==_8kGufY)2-'p35a2IR#(U5(R6r`>B-8sTBP66)-_[*iVAnmg>hp:f)Bu-n;\2?1ifV"^
%%1StN`'Zo0@oT5r4cj;iN,u@EBQuZ+)&cV-,9&Eq4K',1bAu[33DgoQ0CZi;&an5s&/Yb_GF?S"5Xr1RqT=6e_FYMnkh?g#%)R`3
%4WQb.%RDg*+Cf*CIM;uNAS=n,N@hG'g2NPf5Ak/1BEtHLfL<YLpc6ZY,2.Zq_UsKU@4YiZgQN'm@jT9"PN-/,Z%O-d,Woa2AVmcZ
%<G+N;aIW9S5T`@NT,.q^&*bTk%r)eBJqUC8PetJX4R-nB;tt6L:Z6X;H)Eb)'uCen4u?3I61*?dUa.n$N7HSlJ0Zpsgn+I84;0PJ
%FnPn[_;ddr_]#a9/&jhnXccMo98p!?F!Gi$K;Daf19NY78L#1R:a\IKkEqGT&*0;ZN3h.IWBRD:@dObu\qLY:Jot0L_*"A`h28K6
%9>Yc`]1LiLTj@tK=0@Y2jT3%W+7K(U:m\a.67I&85dkD4j_c540]oFUReepR>R+@ZG73:eA__Z+.9QoXa3"Y7&kY9*8qMf=9Sj7u
%;!sW65F9"D6XB*q6GY5'Wf_>2W(4H%dEJ@o,6Q>]>6p0^aHI7G&>Dt5F?12_235tK->s9.3m8D`K8+QC<Sj#PE-YYOe6aHD:QqIg
%b1i?fCK,E_^l@27'`_KB3k$GDKZ*pG]Rls\B,1Y]hcgeVI7mGQ@U26\Kci*BR'=g(qFZDq6,p0-+S``s.g7&P5`7Y>8m!gc5:%cX
%oW?(6;624=>iM.pBPUU15uRME&)($M_,]:?6Ku(h7+4[^<2rg`K-F.a,1]i,%5c1Ho-I<-kb-inA$2gN,f-J`/5b$B'fHiWnhIW#
%XqHCB*Lp4[ZC0Y7-/(Y4ON+/opea=/k1p#PVW\5hKU>"p*T_Bc'(Kp/:r,Ya;[tqTA#a,G\faT7mNip8nhe0)@epW7OE1Ws>e)+:
%8rfZSGVKtW[?q27W)<^(jb?kc?@'pcSu[_/Bc_fSN,r"l^d'Jo)BgrR_Z4f_?O`0+\Ho(T<M[k;?Lr.p^kQ#>XFBDa-o_>EfWa3/
%+H;/B0FDQ7D?Ncl3B)[=_$'U[7h6+*Qr#h@/2*rVP6#.O"@EC;[q%5o3BS>3a4#Yr5VGi)D?u(HZ"g,ZJoZdFO#jbnN0Zn)pMqfA
%:77r3)Sq&NX6cMY.f3%*4ZA+hJ\S"c=m%"%^0R%[Ai,Nuq$IrGUMP:YF.(uaVt)8?D'+KbJ/*Os0P0IoH(-,Q6pVsL/@8hS>7sJt
%$*n8=Lt+g8L2)\3%HsHU(uc2f8:m35P"e5W+l3RY#j%KVC:PV&!IU!KUh0e_fKsXt^M0Z,/j%*f=>L+h-`p`AQ/R=j.93_9i&7K4
%j0kI.JHgUVs!:)]A:uBjC=Vfc-q@SI592=^bYa<Qd$G%L9%jAA?,euTUBF+Eb%-0*<-/9a"bLTh0!Veu)e^WV"H9]OE_o.7bKQ>.
%&kp0<WWs:W$Yjs3>@:P.+Il[l$RIG8;der'5")0?eXM:3[(ANOcHhJYWA%)bf$m,-YO$%kNe9^8Ej@_CSo<$1g$6K^@ju/q<$l9%
%X!G_*9<\FH!q/WJ>[7rZlmXbY%BpEEZ*['%/7&#G7%jF)]HT(9S&GMp-/^).RB,'h0`RAX-7uS:5SMB+NSVQXe\bprf>E:3o1\%-
%#f]Bt3tfO&*Rl1Qoe77EF*n=pT]&0'Ga?ulF*.b&ToB%E(NQq0ja*:&om3!-&_\-aG]eO8%3D2q`2[V9=@\;O>Sc$!TQkX6L#Eq9
%&!N\n&(C?#MLbPPr^LES3p@@cRc(_cn;M+EA0-ts`OpES>J+Cf6tW<3H:ZDV(Zo$m8u^-F>DrcFFZY>p\'\U+\pZe7m$_>X;sceo
%X(n<d>"brBVi1&S*[X7f*r_S8Q?`?i9aYZQT]''an-9'PiDO)Yh^D))CE9c>CE7LYL;H0eel^1QP37J*`o9Ed&i3X*#PD0Koe77%
%Y4Z>?HS31f*;mj(M4e%SZs%)ig\p&],jfIKD(Ge\&6/9L?l@0+V*iC5D)#=]/%P)QJa:-b)=UW[A5[)uAW/BIluiekItX%NS+@7"
%LiPocN`f^:$6&G:6Y3F."P)[,8Y4iT7pXl$Ec2f&`EOijO__VeF3'Vu@a)/cNq4['..sl9=I+JpOlU(>ak[$Yk.-m7;pAhg$NlPk
%-4>Z\57kL`9L1@s!W1>J6SWU-5VWM,C"eT,rf9nG-SlbaDDS;(m>F%eWi,DC^9I1$Sm_/9QjgZi\APsCcoLX"`cO0N3p6"/*M1)g
%]%Z0P+?\tNZ++9d_H[>;Yer!oaa$2+@4FZ;V45>>M\u@:K`'MNa0D^3?4_90rB$$,@AhD.(#M#[7th:!>Mg6?'De7k/ke^!//Q&@
%hdNs@)N$SO%V>K]U(6@UVa`3TBnt%pb<fo5\_S,V83<iORYl^()]Sbu+l^gigSm_7NnF]R1Up5Gn!`21(!YT#)^1GuA$2>D^PBp-
%f>HK[_dc[V\ibWO6s,64,_TXc?8\ii'u(Jc6j?HAoNYn+4D@"jRki4efC_pET+P[ZnKQJ*0V)@4Ykhmpk44knEbMRE'F""d"KrbB
%!Sh(2IAl00^PBqXItU2=XZ.(OL^,d76$Mj.$5n*tK%IhJ\hE*IYM[oNLtAV9OR_:Bnd!1Y^bEt3!qn$1D81M"i?]I97i*%+Z_T-o
%%gn1$WsWgYj[*\$!\\C<<+2+#*H2OB=1+eCWrOlhTaTZ/mQ?RP[hV=+;Q>D7Pe?E^I.E+D,27)H#etKfg4jJ`[_))*[Uq)Ho!nbt
%n6WH-ZEhmFG#!h[Q'GO^h`Cb31Ft_'))QZll\mmLmdmdIrh.q#:CLjB\I^Lo0Oi[S)dg=,;gcbDBOdF0dQ8Fu8igY]XOH%imJH:,
%Lb,.MqE]JVS#sX>G=KinaR:lo<0o5t1FDbj!lMeD??][TIqs.TDsnZ':N>IXTQt!Q6hEV82I5:*#L2+S[ls6;*A)G]rjM_j4bnk;
%R*^o<aE,&j4=F=[-sSLn*lk(<Y_W@H3Q,ZYWpHnmi?k5oS=%=U)TEK3aSkNhO<1m-gd)CgKGMd,n@D9'b3JW=25$6r(XNHAL2Ip<
%]CG^rMOTY<qk)PhWDr2+\bQT%%k@i]$0P^fGu1hO1=R<Yo!<Zmj6AC0\G7i3N%3erLA5Re7/i25c3&?]cU$r9ES];2ji6sPT0ps`
%FORJMNR.?>oDQXt&"e<Dot&q+'4M"7JqLi6I&PmRGgSN[b*ph,$LMpY$@@hoRr][-F^T7$'^.UL5]-sS:pX5.De;AI6+r9@+_TQ?
%.G2qckBa]/rp#IJ-7:Ftjh<834-?40Q50+a#;o]hCU@!i1q01BrYl$qr/HIj'<1\`CPWdjW%=G(c3&>RcU$r1ES];"ji6ufSjUj_
%FORJMNR.?>n,:d`&(C#f^&A6qht6F*fM)c*G(eIY,cAfB.Z"c26V;P1/[VQb+VZA:Or>`3&fG+#7'[f5</U_Zm4hD<V&oUd5eA0R
%TDkVkr:#-H=K4dP9LPE-"'!f^/-n18L/1:Cgk0b^MY=%ATeX5@(jfb;&;T4(YT!T8oO9AX)A.FQ#SUnH=6*to;(tKPO(uOs8j$cS
%^DBJ9a?oD[7NSPTeOVkp:"d7[BqT]t;'u-6brAX)^d(k5ejObU>.>mtg/)QOF_*-Y`o=1Dh:.JDK,cWfe6j;p3J^;e"uE^pV")p:
%4]E(P^4&1C:k8fY7?F8LPP"'S4HW#AMMd$m4N35YJp;ebMS#_D(+UJ.DAN_lMGn(L$Uq'5K'5LJOA@)C8nd6GA5o2G:<m48`%K[F
%g,.*uX3N)GF^8&@%ppr_Z9t$h(VPGMd[O[srk<9'cq)9UD?.Y^!_uPKcmo/1M^2a^Hk+4Sd3)^F64[q+-j-D'(gTch:_-&RJrb$7
%of"do=n27X[JJ\-rnsU*/a/5^G&,Sqbm%p`5NoK[]76OriKI7#=PN6*IckOWZGMQ\HJ&,.g$S-5ClF:%[G=(5mDC$_moY7hgdTm1
%'RedUHa\g`A?rTU?YIa?RKAFS-D('6?jp;!T$_a[-9>cRhh2;p4<Kc=R7CfhVG/ZsTB7VM_g_>r<&@CJU)SRq_;ju)`iRZKD1MDn
%=?<_l00YeUA\Me3`LCeMr9VHgch@7H('`W6bsWU&8pjXbaB5>aHmi:;?j14sPrl362eJ/u1W0q"3]6P`Y6NOYnF`Ia-%)u[L]_s*
%RPB3.,Ho"ikqp%^eNC;Si-)CcSGC/\?p&*:TOnb/#M<QY4kl.aRnt#/m\+E8o1>$(o$N)Pb_LLXRR)>Fh/"I_B=9-OS#jE5LOcjI
%nC#O6+3Yr6\]j\g7)gF9MMgk*#VnINPRd'MNN\kQX'6/OTr4[M9[gt9:?]/AFrfLp%P$B_<,O@_c9/YPaIL+OXW1^@V$,gdL,NU(
%Qm$'*7E)gaQ$URj$>)9Smgm[iP5r`*qdD2jdc'ahkiJ)Vs62&-IuP8^,:[btWL/301V.5?,._=-4=E0+p_l.Ua('Z\?JruIRD^k`
%=lM^aWW?,Gg&_En#/W.&h#N7R5Cph_InYiZ@XQ2OiaG,)+(ksMD^rU*X)[DjH":ZTfJ.c8`eA^q:lBKUJ=>`55qEHl;"2LlU>P&p
%-!1srRX6g/KDLmRlpogtDK>qMhD]dXN.b@)ZTY7*R(.:6U,8bqAhW.4I7+%^pX89/n>0$1FY01Ca3^7N<d`qGVbR*&A,Vcbodq7G
%LC-[K@hH0L.h7g[@C_7g8hB)bPX+S$)l*V"K^P9J+=]a\/$KSKn0(8iJeGFU/U5C/oRN=X#3MfM+-T/=XFBI(Yb7GGZ\>.()W<ak
%_<2eD'WN-ia7)A5([BC5/_Z0aC8U.uYr%h56/R"ZAe6JoJA-7A4u%9o0Ma8XYjP>Pq@JF\"o<I)+<CS11%])S8&P][Impoed`7p5
%F[f(AAS,*<,c)f@*lA)*9C8DO>5M,Z4ZA1nJ\S@m?0qq44P+?g\!A^jKM3T85e!)a'OR*`&*RE#dL0$F9dFCMnN6nXRl1P@VI36a
%Bgt[aW""@@WB+qD:cp8F(O4@jpRj(SR]Bs5i=hlg1HgQ4;P$kQ^]K5*R\Q#5c2oda'`o'$%Nt6qb9Y-r$mlb>o!,XMY&]#f?p5:l
%m$+71D@d>SO_H865Lj1eNH[=7RebW&*"g2)fG\fZNAle2na]p"3roInXpS3\dfQfUD-<k!)(c?3:IB?#1;l@VV4/Y[Hknsd!>HVV
%AEp!tYD:4rYD7+N]llEM>`^7cnI7;p+&DXY(CNa%!d-Y"(`tp6>l*+5pb>c`PJoOB.,Ou4Z120q&!N]iLY:\q9UoV3nMR[-IYMTp
%'h=]$FZmqg5K*kAe)L-,)NG>7Z/huGdM/YG@J9J`R3Z<_HjqZdT4&mI=WD-2eFbM:Hor#^Vn[e;j(E?l)lN<BW9[mcq"UjoPS_Bl
%d),PqmcM/AdU]<B@HR>F<dTjbiu;Yk5))t`ZoHJJW9[mcpeor$/<$d+L%053C*P0f1`>S)Qo2UrMEGD@\'RSM9sD?N@A_MHY(t]j
%j/Z$k=r^m:$fgDpd4$Z-1`>S)QoR@L\"_mW"r`M_:P`G@+<5)&eFbM"raWKPI;\LFH4;IIInUC"1\H']%!=_W)BW`<dG(;0p_MQh
%U%iB%fbLZFa\^U,m.'UC'UBHRf?hD03G&ALi^f9,Y(rG*_`CZ2SoB&Z%EJ3Eg?W0&eFbL:!V^U0.1s+dXGVN.s2Fb&eO]aO.S.Ra
%7[Ak<bn*NqiB9L^D/p$k6oGuj&W?RA%#ZS)<-mBr+?_9(CS>DCOZ2F6b>K>*+'(`WU1VfZc--kq=5u+8j`1[tOu+BV:ZN/J4-',4
%^:]%tS8kOR:F2McqELQCplg=P`4kA_-16g-[;2LiEt?F_/:^ZIOIWAL>^[0gYkF52'NeZ&=LmiTb]3[ikDa7B3jpUa/q\l[[gDZ;
%o0D0B5#`cjF_@R+@D6'H_T+-)j-07p9W8L(rVtXLQ5.T+/A$0ps+=)cKHM7]5DIuc$NpLY5Qf8!iCZ^oaDOkW<muOO>ANVSNh(O#
%7qP/D=(Po&3Co3RmF^1%m?d4"&c!QcZcif!R>hkKrjm\6*7[>']^8][BG[U<T!M]0k$sKCFnt!4*2n(#X3QLj@(\]CkPjeld1Js+
%nt!/l\aj4e;-Z>.Fd<=k%snLWKXY@?V$hTVn&)3kQ^acE=3t;lP[:ZTF&HfSlQh5<RFTfu*YD?V&CV(">">Y=.%(#BRg3]p[f>]/
%NW^@n-WHtXVe:ZJW/Jg0\c_m<pDGQ=-6@*QN^RlG9=<+0h$C`D6I,Z'hqI;mY./m]h#>S5\+eUl2m@UpM!Ti&!j@U=&0V'L<<Lo-
%BACj0Ea,\Lr3N)=m67,cQ'&3\dRm_=i=eYCMGU&lW?3P:D_SBafa-"r0N7`!)i%`P4a6N3d"_H])d)+2buDoU3"bTdX)lX7rTOC;
%kg'$Q$6IFL?c;4mnuE7q^BLZ^*lnli=q?+:dJF`@4.WYc>aX8]#5DE'pFgFB2eDYO-CRe=1J*'HX7n9=S+"JaSJY/9oY2<F[umn2
%qR%fbOceJ2Tc`r8B_Kq7'Mi-Q'sFJk7V\_.+Z37,_@n6S'e?hg#ZA^Me7T_W0dcbGees6l\9-NRO1GE3m_0>dlY93d$ue,16/ER3
%GbEpbO&o:*gtM73GVG$p"18YIW)GqF[9?u/e-!\JI?sBB!H1[kkj7ShDI))GoK87;I;<@/>I&*_bL+pi"Q`bUJsT-8[gapo+7ip#
%m*N<()nIWsNnP&R7XQER`?!!^5FBL;ZV_8/VR!egP^?d\.9,E$bn%o?S:aL7?N8@%%LIM1X3&E$K7C&lbi'J#@X2t_#YoXY&!ZMq
%_^JCb`aJ,l:^(2dO&q<-Oae1EpeOs*c]aIup2#DmlJN(tp;Wem9@"V)DhEldHW_nO>]l)sG0#"$U+KfPp\`JT[39FIpd@63a+r5a
%E3L?%L6?*cn40DG*O%Nu"0^%ei:cP("I(-61"MJngqqJKVID.sasi&%,m0>lRdg`k2N*2p/!&]s+[PS$(OQJ!(n1qri6rE0^<Vh4
%[RLh;INmt1fc,]Q/j4Cm28X\_;A!kqN^MG9<8qS%K<.#5nNaeNT<>+'nSI9RM#2Jq$S]!P6VbC)VA<luj(f\5C7b,,L4/X"N%#fT
%F[<Z(NrS2Mr2+_mcVF5D@;3JaC;)3a(.n;`kP]f._AqrU,EhuI])W^h8'Nu:JYUi/^sS./1M8GJTUudYT]"YUoe*3=Gp#cCoe*17
%=aeRRC;e#o\6fCL?*=<"Y?/R1q+8cCN=E/,>]0]4p[ojm#'dRr9Z-f[^>B(^2o5Acn@dZ]A'/-M=*bVRL62-g2h?P3Mnm,fO>AgL
%`N0_&99QF;jrQe/GY)%"31`LQ9=sSo5pG;Pp3XTKlTO1ioc?(Vh^H#oZ9dd"ocEUO?giPUJ7ffb$[4E%ILEgG!q3V6GBsW>11bD"
%o-TRVgFWDZ@d(*`p?/"u;$\q)L9c@P048"K3G5<CcgMsNB*H&)1k&<kPOB]-&FuU7q5ro@0,sIR&p&AjA%pNRmlb2X6o`?@%eQ#'
%IUR0d(X:&TO5][;(&Xf.q(!Zo/L%LQZgu_E(tg<<JZ6Z;8KB)&_(-Orc[7Km6h)4l>6XJ;n=:''e%tL'%VCAmrd6]=h_Q9@:e`6S
%hWUV`(HPY2Jjk](MY@rN.sRtEmr\&i%XnY)Y^q3"[?A?5=9!Q`%Q\hXK?.QSq@1,b%%a*+'>\l:peCsAqa:uZ?$X)_p&*WE6)6>U
%2p@qI="7=DB?Rc#h^dnn_)iZbVh=G[n2m:qI%L@>9*XR#$#/7X5m+<$E'/oQ7.^<MO3t:cG;Aqg#2dP\Dk@G5`&rp,>ol?P`G4]S
%QoSL;TS"%Af_TZliDor-"[+A\Vh=G[n=:'gk367`nN!CH\*!.N%O*)'Nl6V]3d@?N4ZjN+9Y438=4":*G<5Lo#N+e(G<cDVF,]._
%Q65JTH&U<lkb*K.3gcOTnJC9LpQ*_.Jp09N:']\@i-.Ekqf@'HO3;`4#Ch0[OH::Q<gs.Nj>K\(7X2PVJY*&\Kf*oc:o[(2`\7sK
%Nj:rb5*$V[5D6R55M`'aCU?PHPeBP/`fZT\^E*7U'UasD?5CoIqtnsa(%Nt@5X/ON+5te,cbkB<r!PWi=h>fbp`"Ze',(G&If#Vm
%Q]M"V5q7k$RXOmr2t3;_>n`Kbr%2:-I)4<[:TnPq<Ke]d]=f)2I9aT"Q]M4$N4@S5R34CA,H,WgUi08c/!slpFNgE:o/X`k2i(O#
%Ii_;#^(k`RgM>OTC\21Na6+@BA%\##Y(?4Xj3jkn,jIng*8Q?W[G?o9[hlZgW+3$O\ph9Dh$#ph_m3Vg\iZgm[<d6\s8?RLs*[?(
%[d@ib-ptGq</A7OqqTQ2r`Frl!opb42D,P"Ye<1`;$?TPo4b68\Okd/:KtF@fs0e@[LFf3iK2![\fEidh,3Lr<o#cp]CG<_f!\q<
%g?38pg/KUBM@lCHc`u=nkA6Z%HEOf0@[u!1qd(04U>E8AieEW!fH@<-*SP.98$.DVFl@3Q*;\@0h=i)?=p_NEK8!@KW/@bU>XP$@
%\r[3"#jB%OK8I[e[&(RtFm[4YSth+;7\tj7i78/0?0?t)[6)<qO.nVK)hMbj\a*Q"!@%>/YR#"L\B`E.Uogs(gene!F8!PFQYWc6
%-*'41YPJI+q7uNi>8oY7I:7gWC>Jl27;[9R)`@j1B(.UU^j\lMEQAsG<*TP%SsQ+$+'#]2\;/f:W+^1._1"]=X8Vfs)"?281<oP/
%Y2D(NJ>C0Wg-6S*3d=1K@tBkHo+c[Mn(3WiX`Jm)8*kVaf_N.=fQeDAnh.C>jF9iJ;3@]6fa3`n.pL"P7&l]TChQ5<PeiU<+`"<e
%F`ATIb$+`U.MXs1]:f\u*XO-G,R7:Jh$t`u$iF5&UHKig7YJAmneHUUZ4ZX8[3t$A=@ZqX?BgR\OMeRBCrelNTQL;;E`!T?W/o&n
%W/N#]B]rd*3g.Jd\i/m<\dX[u17#@d2MCF%59ODuWe6EL3@k\sh_&49\)LFB07"SW&2Y/pZ68M(b0Hh0=*E]=ce+QthmW*7(W:<U
%@d!kWP_tUbe`40\%.8WZ@VX79]L@M35>\4W.;3/75I7>>2]Il8LKk6dfc),IbiX>1kOAj[DFLq^`U>2fl%r*2(1i[7=9E*hV[4E$
%0hmc?!9oWt*l&q'^fXf1H-]P6egRp0,P[GPc/'<crn*G9RDAEK]KFutTDTaV?"1Q1)6)]9ZXlkRS4^belFJ9_R2`^Sla=n;L>3DN
%gfHh;,*$H<CL11A*\3nCbIu9Pf*2kP%9b,3?_@Ia>!B\I>1R6X[I@nt]X<C=Q*ist+pt0*J1bDL&AH+&F+iqq(/,r0KA-/)coMZm
%+YELA\p>U"33m_D("lbJ&2\6uKuFdKDQ7h&c,P46oh/kOnEKe]1GR-WE"P8tY?f[1('*Sud^nX3k>jr%8:l@%-Rt)Nm:mFb,Xi7l
%E&JiU%9+XU1GC>G_BDR\<%<rjUCm&u6WTV<.V^+>'5Kr:5TDEsa)qQfag&feq[OKUequ*&JL)g=(:-;LaXD<R2\6oK):TGHl&kV:
%Xdp*VOblWf'MHur9/(JIgX4W8BLV-J.b;(eMdJDcg3./J_<(W?5VJ2lpXbpu]SKj2i4fX%FX^g07[=c+((N$"lo8n-27U47Gs^i0
%<tVm0PdQCI#20YN8>!&3Z3Z:nRmRd+7Jcg/;4PR`oGVM:OTUr*Bp%Z!#*cLi`47&dZ62,KR$Vhq+XE?tPb9Z3'lThEJ3">Hh4g"J
%#k?n_Fc`D:+E.!B(M.Dum5"hUPMDM=mL_jKbTLS/L[Zn*Mp@HT"Ttpd,,k3XO(;?u.&&8\'GE"*1a2?kjgRNL84N"_nEaoq6`NGF
%jL@*j+;o5+m8BbBIWZ>7Y#X*IR`N>#=qE&BX'9pZ0b9DEF,>*79nGs8D>ftc8-Z9b7Q',65e(JZ#M4eVKe3eM3\"q65n$mqG7i?4
%7#C(A8NFt'Re"&#q!EaAJ/\OQ3[K]19JD9u!5:nN]!6RKD1c.9DXbuDPCL9hdkk[3i"B50bq=8nf%!Da.'(;f(.m:`_DS>$%>2%c
%T1GB5g5\W0_MED;+JBsPj9?c!=Z??@6ou52'KiDUH!5Rhl"p*E?Gp@Gc<YH)>jGT\)LHTS['tCV7gG+?c=,LhG>FX6or=s=c:4.H
%iC):@4GHU&nHs-H3`4?%FW$b#<Oh/Gp<'$Ejm[(LmjK#4+/Dt^6C6@b;=EF?h)UGknU=dRp%fHZoho/.!LL<7CD<Wl^eKcF5;[KW
%r[:\bPGeRO0""\8=#`mZrY=5*NpP6"U$9*^E7\D6:,f-*fd8%Un]'S<O8`Q\VIl7#61)eAFtcsTlTfJsDdh&`#l]($p9#A`7$E5W
%=4K`23an/7V[(]A_lH2`oi:g&Wds?.`\OWEb[,Zof$q&9"dDW##`Lm=`VUM%F&O^([HY;>kTSXD>b^Bm.fk2PXP8)S/naB9(CcA'
%;:#SCf5Us]?J4bH\(`dsN*jDqiX8TtUeJSRk*/TQ8Z>cXCN>0&FcT1u>j*0PcrRqk,nLNk$>Z>S-X@8j,ht3\@eVKU<%5q5E+V3*
%1X[9fi#j62*):$?2LE\]@%f$9@FGYaPlih)Am:4`<P-VdiZ0T^a0_Z.%M#h7fS-_mYo]+BjJd/%mAk9#aJZM5R?^YGL"'+8e7Pp>
%dtLPulWm;8<k7_%M,'"&Ce8f2@i9b/R)D<XSSSTJEHRO][i+82Qk$\^OB>^+WlK94!ijQAWl67;WU#ThZil2F2g$Cgd$2MO;2X'5
%q+XIlh>8T5<Znr9^gs7#6k`Dq$OX+'YV1Ql$$>)%Os!:o@\hR.8)DARK43:FW$(M?j_IE4=5EsN-pbaA+n!ha;@;MG"0lc6ia`YC
%7#XPZOu-:@];C/F1iio2W<S)`HCq6t1smV3>MNfj,cSoY*FDUB;P93A+C0h\!McgVlsrn$)\DHE3n<TfcXVbWM:'M#`=tMhC*/Eb
%S"X\Xl5bi22aN_]J:ZW9&fOmeU$qSp4.Ul(FY)%oJ?mHC6G\VPo3d+XrHLUOh`?)7n/0trpjs+6RqBD.@Y>1`$8grLZb5IO#'c#&
%W+rGF9$_!<+VQ$lY,-nOMFLGK-t.qb!]m$l+hC'(I+tItUsRQJQ%BcZI!DC>L/EPP:qLN-fa*7R>`<18jbckBTFr2sln]::XsgGl
%f%-f==ie["hZBh1bR9"``0);hfs']OTH.q8EbBE%5V3q>1F]4hr3h/N(mfiqf#dMe.>\O0PnN,O.il%u%Q?`agMFA[d0Kk3<m%F=
%I=VKV&C^J4d<EGRC/O!@>%ommi'^nI7-W.B<2>`'(c%.qdX$l/dg_P7A$U"n7=(c4Dq>.t"YHm[ZJ@i'*r!K)3JZ&Ca?g8VC)TRM
%4[e[7KGL.&]s66[=4U$iNO41sYAni/#,*]C'L&N_lWuIU^-NRqZX7u>'G.(W<D#8R3Q+brdLt(RL=hXo-A=L=6"*E/n3RJ6UMDqL
%K3ZA!QD'Gq.Qf#F)_sL\=Jg=37S:q?1_>D8XIU==aY":pU"6+H#P)L:l!Jf2iDC^1^\0+>RkiMTN*lD!iaRX?$?d$hb/[Wr:FU'<
%2tL"+9DFPogYqPh%u>:D,[Jl7.p$VH%>%?PBPKF^8HT[g;.Z31FZ(`(%Ahb5N%qHjMQLUiB//j'fO2cY`D1t:#_O-+*e-HQ(>4+'
%\J1Q1M:g[#Oi_]b19@oEX6#)6b&l@;isJ7Fo5t.Yoe4)fFbO!U4n]&MKuoQ&A;Trp*kSihTJi_rXmgoJj_-Sgnt@187c=W,WdQs;
%3C9(a`SNQ;7@E1/.K-,OR+_+E]`lYG1C>1feG[?Aa7j91H#\#naK4'!-aD>Y3[B5mRLM$[E0`!N/@bCEnMUs!)G&):GLh@I:a0-"
%>(]\KJd[l+Z9%eb'R=#XI95ea;`CJ[BX^`kaUG:(+X[W^e]7io.4NoOZ``W:Oi:?1b2f)%"([M\WPs=G90mOJ_i=q#bFIU?gj`28
%2HYn`[Z4CLfsQo=G@s?jp.T.]drWI97B3b&b!fi40W:e@/N'o#.lbU4NpSfiF_94T;*]tc,AsBu,h!^\r%g^=!)e`WO?WkVW,-H*
%n'q7Z*N\&&0`5C7*:+g]PlXc\GKOu"T3gB1&gBD_SDKf&(F%qnT"1'f6^I+:Md>WP@W$eUb<)[ID7qL)8A./jYk;ogr;\;ng*1-2
%3LHIdWqs[]opPa4>dQ)-U[$T?`NlRBTb]K>P1)]q255G5`hV`p*\`8$`?*:`U^XC^)!T7U6h"g.[Ym5YR"E:s=CpPe(,ptL:d^3p
%p.!dHSiS[]3F:GM"W'rX6^+/&*D1+ejC5Kk9+$45_!5qoZesu)pn9'V$tGHt0cWHr_02Zn`L*+7F2;`pp#T-oi3s;mOhJEAe!b?u
%,tDJ,*1FS^XApfFein1Xf'q\'gRqtJ%-*Q`Z3LpM:E">.%;pgl76f0W%l5_+Hn!*MNg;SPL2MdReRV1Z6Z$a'CN>-F?tr."DN4PO
%S-XaR1^.1Ur)jSV>25K+A`oPge*%-oM;NN99R$r)!@C-pEMp4O_Z6]++S&u=gTfF8F:2E+B,%##m8dCa>^q((4MUCPJ"?QaV0078
%^Wb<r;:#EVQt^G`BHbs7"fR:N.>95T+?ac^,K8ag=u*mrNN@a@2*Up]f1\<)@29p:=(,cJ/71N%(Kk*<Pl^/$f$/B'^b2@]](cNU
%/<'d1?i`tIQO@')X`?0@Q6b(G%EW"!P(.0'&fPHQ"VN7XXc\YQRhCBnA$cL3WnN4OFCT$30C#[E'>0DZa<G=e%ZhV8("2BTl5G,>
%L7#'a1AuqV1/Ct"g['r'Cp\>%lEifG9Ci?;agV*N?1OQ?#^%%cO+DogZf!c>2YR5cA#%jK(&k-skfX.*a54ADUVsN*r,U&(*rSuU
%/OuiG'p**HUD0iA-.JA8*q.9W%*aV4+a,k1?3=gWWh3J.F2?Q>$>Z:r(9Unm;X\r;f7mRY=J%O#NZb?=?4&=]du&RcXot8?E!pa>
%;D_ru?)6hs31ES^JCYX+8B^'j4-Un.*8`da<hep7RFOUe8pD(N.4W;L(F,[e=pA8/*U_*aA3e+JU0gCY0a0l>F,+S7C@Z;(JlB65
%L^#oV\.kEtWi=[.NNgm#.(Lb@ei0IB&js_*Pm8"8dq*TkV5M598IG-CR]"P4]SEbgDUWO&dT]_TE\i7h[H7RshH-M>W/Um_m&^X9
%2$aOH`sq#r@T'B5YodS_CG6Ji(g1nT5/h"Dd\._T.?<^<nj8opc3okF.6?&+^`leu:l_PmS]R9'%Cq=GQ&<!S=QnH))AKm%.$>nf
%?7,3JeV2XDEK?^1&l`2npc%PGbb[m9:n77=b8sT&<[FNQ$)3hL/N#N4!u`opj!&D9Vg>K2F>5'70XP=V[SK8kJp^@Ebm_uK6Cbsd
%5#@R4:c?VfIQtO5r<Z8W;KcN*rL<=l,.7m@Rg7][Q43`sC&PdmUWE`SS`%M$Mq=*g)9tk!-npp#o`?_:]/Yp;;$\QR"oC$dOI;m!
%TgEF9Fk)Tb^Sqc9>f$0o>2jVU6QH_WPh0;1Rq[NEBa-N^WWXi.%!U+l7jJ2IK)?HqmA?eGRk[/9CkE4+9)pQH+Xk]uDG[/3=7K',
%NRI:uMV3jM>YI/I9s^<']hW[8CK_<W9!kc:AX?oO7[>:[#n/A<g,CqX#L-4*jXMnD6H]GW);IN]B(cFLJTIc"Yq:Y*+fe@2kRLCs
%Fh7Oe<npaalD5@OS+(l8he<98PFomli8Un;0r?nZ-HPfo31j$Ln69kadmfL91cIK<"inUtP%T\?2YfN45ce?PcV2UaeDE>UXgUdO
%"f5JA[F>ZJH8Tdj2s3V=E6l=B9u_)!cOrjW8pEM*T=+P`\P#3N0#e>$a8)@7#j&R5M'i'6FJo'>B6HS;#$2`=:(2UO<fk<VH.n6h
%=:89*PFr(.QpuAk%O,Y8RGM69D7H]']KG34kh!<^9K%N#/(gggedHC0(F(9d&D.2S7NeJ;LKL*V,>i:R"dqni<a?rGGT$D7,eYcM
%"YGU$akJX-.Xe\k-sVOcVTJJVNNuT5/IC4PAi!l)<+D5^'Z>7)<ifOU_c]6<[M&N1U`aje1L$O0N:j&UW56!\MIbS%'p,Fs>[]L@
%U;0>K)rj,UE!!B^^H.c)2b;08'>:06j0c,L&uD+lKT-5`Wo'u&$$#\EFa5m38eZja\7i%mRVWGR?Hetfb=2#q`Sm-eb(&/9'-]-E
%XEM?K.'>>gY"m_,I$W^^,lK^PqB;iU,8W9E,^t&+*VQbtK0@V>[mTC:%5'%=Lc5^aHpUj@*-QDoG'hYcK5@L=XcO&l25n<qQ<bP?
%Cs\([=+eTU=V+gt/N<oW2Riu.S=;!=6KI-"6!Yqq'+D>)"7VOK`diYcd'<G;4#eGaTZt0KLM9Kj?)GHd%mSPWC=!u)/9A"`jU4\Q
%DH&Qa?WBa&9i(N(kOZ-GHSas=lOYimJok'gC_NXk?_Y[UTm&?RnOKYRHD!Od^I,5[b+Q&8Mit!W8F4km(P$-^>It*u>B':gr^97B
%da+NZl8E<kG=0&r>BN,gqseP*9nkI`XCJ:KZU&/+[QC[%)eHN2<)Y!-!S?52@Y6W_\BW:/(JGB<BA.-2d$,T\Aq.V*B0kDI-s5EA
%Do+tIZJVKaK@'&>5;0JT_J?b*mE][_DsRM3otE_oAC%I*rSm%LWuC?@q6KtQ3l"<_VXF1(*f:+TCb<DZ2TY)J_&*7[\@P)3l:uim
%Y.8<[*.-M>h'$"jTd;c-VW%MW7s/3+CMR.d>j_^Mqfom-YG_p/#4s?*&&9o^pG;e]E_G(i?Mclg5g4)I%G_hD_XB]qTZ-#%/Zt!@
%+*&d\DjL&NMAGTIlaGH(<?>DuF0Y8.D-lDLTUWpoK%ja]Fk^A0]@Y$Yqm`cdA(8MIKDHj1X6ii25NdOqea<S^0^WJ[*ShL96]K[:
%"bP,UeD&MkYZ99/Fa]'hY^.VQX>\qk<A*[Dg7</O06?:&Fg[9^k@u*hSa5S.hQ6G%a)(u%U-A8ie0jKcm:.X7kPR!;g@0*D>O0#W
%L@.\r1%Y&>6%[\bg`;+>E9,brI>gMNNOOh*LO*4YF0Y7a.eUuL)0E4;?>s+bYARQ\21&Wp]nbA=4[s;L2lKO"[amX)pG;e[COPqX
%pu+$4Z6]60Zgg[ul<t$,qo"p^'R[;O?%W[>#bB>dma%&cU^*V?Qo[8p0eLHaqmlL_)i/rFa1'`.1oA!!U_IJLBa*YCY>6m&E^qed
%?ficE`hcdTr[MnZ,*Pin'Pn&3'>Huf9H-sE[`(qr6:\'d<m(._FZgLH#i>A0fbX#kCFD8t:[pANKPq"r'Q\Z]8F%8PN=U7tY]"V5
%d6mOQIHh'M1sZmiemXuB-V&[gMubqH^#Uq.oV,G4<=U(11-e.!1`gA+9nXe08KFd\#;@PAS)=?H>@,oj(j(h]1qBt6Jsa"?"C"%:
%$4#j=atf\qcY31*#brGm-^]]QTs[dG)/T:%AK^r$&4$<1IWE6.c'dP@k:`Ha]KG!'?h4ga@cOcsd(gkO/c=#SPr$=<ib<f[lrL2C
%'EFRW'Yr9/hV^h@n7O#CTj]#aBnWG.LRm5$4!D>T3PGZS!$21#2-r^A3cQ@l7kT&/>%##P4+qM[S=3k)\J39[`tF%q1,'j"4blkA
%GOu]UnDu`<1-&1r%<+3sCuB:B]W%is_.H%WLBb^S*pPFXp'JG-'/eF=[t;\fLa.rA:'$rD)+qE_(04)4LAYHYi)II&OPPL[_ATE,
%>e+'4#s<D<:cY-Zg;UB9C;LL'k3&/*X2+ul@kA[*$DD).^fWZSnj4;GhA]l)(:2Yc#0^1G%V0mN/OF_*Kt]<?Bq=/pl3<stXg.N\
%-Z[G=.Pnp]`0\d=<5W>^4t1T/92J$Y]f#=tL^J=_POMjfm'["AH*j9[l@!WGqO2?&1EmS__@a0G<.$`_B<SX?l,GLZ,(UQkPBp6=
%#f79Aq&Xi3*nLCL"@7oA1T3[_FbOS^STCMC:SQh6Kj2!E'"(q!kQ^BXFdrFL!=Q2_.Fh>i@W7\=<(MWE2.Q0[W-qmMFuO0RX5=l[
%B[oA\=i"QX]X3QM]<T5,H6F0<?pc@:6h:]'h,t/XCo,it+*d;`Ii5g(jphWM,l&,O&iS^(%"SIJG_lfD7;s4,L*=A&@+$Z*2[F^^
%0IlQbfEs54T![D,?NkWAe:Tl'5Cc/*b?IT_QI_>Y2$!uJop"AE!V>R]>Xt>+J1!0^VU?K1U(#+r4!1j67::pZT4*:cG_aH/']I'.
%2rj*qN&6M:p'MeNd,hFW)SS:qh)ieNl-RVk^&<"JKE'uHRYp>[QtsVZBN'onTU-!$L?klg@RpOqQjPd9'*9"IY7((A0q&NiOR1C9
%/IICiOI9`W)\P&KGrNa?_=r=h8<e*9/Yk[d?%XOL;FEH5[V<"Oi(-DA%nA\k"kEu6Hdas>kr2YUCt.ENUP\J=q^bp>7tTYL#Ejj3
%(Gl7ZK'!d%,KO9o/kK28HCXhS71:nL%<7DJ+UkW8X1rV';!9%-*8k5#-cZ83i]:IjKOkabf5-6HhAubbSA;p>o<6:m->uo`btqL%
%WW8_'2;%7Rkhu4oC7*&l^rcC<Omg`f[GamVW$%bqAqIf2BbZWM26pKU_/1(tld9gFAV1(5;$`639F\K55ADFRb<`s+,ss'@9FEs\
%D8ksfilBAum/.A9E8]d1,$X][J,"f6IsLkAT0+mk27@!kpaA*ePAAJ%gZ7@T"j;b7NI/<oXdb"q4P4utHVg^FMOYPM%-3Gn`GSYm
%@XhmDA3#7HX(a;u7&E(E&;R((Eu.J2jGobTHP!Z4.]a(7"GAq&lEWIPcDBc4b!d8.8]mGQ`'H1**e@7q]-$@^2k<h0EkbU[?iK9b
%CIoQa__+#`W!o1eY.?kLO+q71N<3(t(#Z2`(=P>*;N-sgrW%[1o&qfQ+'@_nk;[p['q,494gR?1=KO)'3IBN&9#9U/r(@04%$I2+
%Scr^pJ*IZ;i8\@/CuGjq-WZc9;9kMMKe]&^Y:=tu_>0BV`OT4B.*NE>1#l69D<J*#Qg>_mY_&_r;H.'e%"?A2?1=]kjWmejRpYgO
%I5(oU:`-A)D1LHm+NA34dn)3'd8!e=]Dt;?FLBL^h`3T8^4<Na-,*N\H<^[s#r3fSNM%8W!:c53X[Kf=!]&Js)Xl\#od&Ft!m%F[
%+6M!oa?Vj3"-ShRI>cMa6'^UD:m1!#g?>9H==%qWm%*""j,$)1HI4ek71RM1]02V+N9VC:2F\)\Z8C7[_!>9($2U;!fW3$a:Y1%9
%6M^&)h\PBq-ccaiWbWA'*`0+u/#4_@(]gh(R)%&ogO.40JJ_e&HDtSL13i)UoQDbC9o"F@TT^#W3CMicF'+fuF?@B7]J/mWQuK>I
%!H(G;eqiT_*uqn$R3j2'$#kuFr$*JN1H`P!7]mZoEJW6mcu&:"X;p.6[taEn1#u=U&R<30TOD=%/dP]f`M[[h8G%tYV\sCW;;9Ht
%iLNTC8!c`RD_o%30\eESkp$<>L+NB+=&7Ds6Z[/bG;60t14)[nqA8T=a^`6j-^.*S1Q6-Hm+f/iZJRJCZfl"VgcD5PN0"tjD#qck
%M*(KuZ=eo-J`Ji4XnMZ<>:<C$TG9T8`h&opS\U]"6ci,3K<no>j[7t8#l,er&sS:Z&1<s]N::S`,s)FN25+q;97.GBjVT%)7e,+H
%Zqerqf%;H7";q/6LG0q/KJk['E.G?p>iFN^KIJ3H&*OETP?KYP5'B'd.S99&9@mYVH-X')Ck7@)XFdcDi;UME_D;Wd9ojkap5_WD
%1a72j4;WhI4:4B\XPEj]cH1Z$n>&Fk,3;48\iqNcNT/R1](t^I2AqMd@8_^Eh?!<PpIB!]_N@,$mJao8e:iR;'1k\2*5>`5nU;fQ
%h+2tjeMs;kZC<pT)WIDL'[Y8s]+8s`0Nb>EjtqoE4!D[k":PQFO.bLi[X+J4/2q^GiV9i$hc>B@Ip:58qF5;JCk#@WJq&W4Kb&LB
%3JNY;<'$m"81dN=58br3E/(NdU=hiHa:*XJ%+<C[Xe$&<D_X7SXuO\j_e\SL.;kT^:,.>@(!^46__JigQ`[dk-<`G$YjO3L/YSE2
%c8")G3EcUX;,@C6<S+mpWYrQ0qf5t`C=4M=JJkdXp">93MVTcHP6thc_j]kJaoc>"J_:C-gOacp>0C]fqmq>%Qes<&PMhK!a\h>!
%M%4[.kt*1RR,FF1UY`'^V.65@'ms!:V;7W/Wf_rLi[eEgro@`gN_\,0A$pTM\Q"2RG%_q$r*dFD](,Ech4(s4c*-Bq!E46tdb0cn
%*Hj]C@ThWSeo;uH6ZVM5qQ4eWbLs]n$^(U:d-T"V=g1aWf%?!X80irkD8iGCE+MbIc&gkU%Z:L;;m&@@<VH'Xd@5DZE(LVT'"dld
%j^F<=,eldH3ecoiSrtp&E)nOHThDZ\FB@/EI@E0:[&1.pf<SN%A)[%k'=(8g2Z(s<WR^:a$U#Ug`06HIMHR\9eob^!Ft`N)<sZLP
%]hA(<^b4!f=)3<*;%3"Kh%0@ji:MFRLKA,@\Mh%F&d5[=NX>Rk@>/"NCK/e,";cIL"F15=kpH"!,Y(dh?23EOetX?9JSOLWS)'8e
%c.Y:rnN'DYaZ9p_:Q@KU$O+!4@+*X,8&4mR0Ol$NU>%4K63.smX*n3a6Sr;GIO^`<Jd&t7>#3Z%V)u)-Y<P26Yn*ZsPdG<E^Q-*T
%p0t.j#rZ6YjF/C\iYc1#S]h>FW0:MJ-s4Yi0T2(\XWH$cV[)U8LXn'u[#m%9?n's+ap;fOiG/aUYtY?emm\]C0[+4H@Qk[;>JFt!
%2g*q5HJouSg8U6!8%&MNQuEIN7!)8B95kP&Z$[mY*"biM8ZoCf+ccfE;%OG&e]A5Sl6*[o21+c*6m#u^G37M+pSHd\r%(G:+:b%(
%=f/W-A=,;Be`BjJ9LhBc[T2,a-%iAfmUm5[`DULP!TM0rL8Ifgm>^*9rR`F?LM?mQls11kPBH.f\H20ZS'%n9qBTXbe$k1s_bKGl
%l/%u\Z33#(@i!RrSL'R2L]!gM@(n5F]gJceE-Ke!fqF3lXSed-j1m\i);'s_Y,X=E@$R$UeAmrVQ`@$0LK;6;'R[4?b#+X[9&;Dj
%rE3B5pH@/\*%Zrh2?bp,m:n)uPU@bJK/1mI;MPI1"V3G'<tEdATK;=SDOS8/ZjsMh]%Cc'#@';8PQU!Fi&9RMjq>ZK'YX.u6?'4I
%Dta%Tb=R:\@Z'm5DHa_iCgR#d]R&i^U=(>#7A*G2d*<-;E<B#IP$YE6NK57J$@m9P9mo*/qIf;@,2kf8n5#6!.n#0H=R9GiSg4KA
%]BQUS3aLKghP-2h#3kjOj88rCH2>HFaTH4taKV<kSTLN4o,8JjOk#`'3_fHF]/Qe)`bl/(m%bgBOnU;HY2%AM/>uEGJOaA'(,OHR
%X,_eN;2*5,Cnma`kqXoOq@)?YSp)6ZB<3m8Bo39>e.#G\L)-L38:Qq?+QJIId>rFVq2?I@Qdle2RP]b7MjM[Ir38@6c96H&L0hAd
%=4B&eUB`TJ:C_@=CH*HQ<#mG)O)jO7d*&`.[[Un'on&?QC?u8<BlRY0g<p3T14lP@21!UL";3Cg2o36c6]-aY0:/TD6a[pGUSlm)
%C-@0<QV>)T0.Dq<,\]CQJn%o$Eic,\)ULe`;T+T/@^>YS7gc7IB\=<J>G'GCX`E%]Kk'3H1"0J6\DnIS;">k@b;bP[I&?;t_()8#
%i:J:a+a)"+8e0Xj6/%/TMQul;iT6`e2Z5HH&`pO[F7Tc_FD[$tS5tt3'Y;qgMa<u*kG]A`934CLYTR6&&dV24]Y;Wd%u,Ga08L!K
%5%YJE=+2nYRlPpPi20l1UMN0tGE8?^R#3dg:q&Ut,F3Sn2H5bXM,dWRKtFd>,>iQ:aFc!COqY.JBHq$J=$\i.jQa':4#S5Q5dZ.!
%d4tRRkhg!-]NOhB[q=I"M^"VdkI!%;m!Y3REt%p[27.oAR6sB*Tnk+fT`F?Q+<W@?FLDP0e`4>bn!.APX.23sSmA`mX6nWB+%saO
%6a@@Mkdedc&%b2u/nDMe@J4G,2RPtGQ:+4+oR\Z@_,GL8hd2bb?1mV9=-L`A7#0#Ej,t";UEm9mD[oeEp>Ebn.G3H?;M08<h6af=
%;JNY;&MLkHQEm]9%+VGIH<D'ZcIR`=]6-3rfT'\"$ec#YhLsG4b[&u:fh:@%'(oZO;[UU^`,/!>(R/dF>PH.+'l']g-J#jM#`rdW
%EP(7.pOd'b^@8\f=,56/Bp1pj$ViFi&2a8U+<SB$R6a_!Y(<aSequ\^OkqE%Z%gT,gn#k1S"Lm1s%/`3"TX;_OY3$J-8S)Gfi.-T
%#bD6L!Y_d#nZ>dNE"lC_INgVT>R=iJZ!ce"_][ARSKD@-K1pqQMI@C](JtnS)XkXY;&r(9PMt*6F^QH`X^[!gB+DiK*ZK*-gN;>s
%L,9C&oS>k=4g&[#%M6,6rl>qBSY+=4LL)^Fb?11^&qd0&'LridIq8'jp2V0J/8!0'>EnUW7`B+[FGj.b=Tku=.to1#ABf./6<9aI
%JIZSA'U96rN@tj-jphFTWP?_^ZO$kUeqYA=&r?%Y33(d1e=aY6$j^+7T\L$Dd,'ClX%#PjVI)@Q9e=7/ZFFMtL-SZar5-Zn]*1qh
%/@]k$mKQ[Y1F(r/l.`(39(oB'Ijd:NJ#f\VOc+sE.<DMb#Fi=n4"O2lQA2]D#:i;W>%B09fr>s&]S)tb/1_iT+JRqcoZ<(:XM]UO
%Wt=)d:uUNS.4W<dg'%L.IaH"jZ"dAS.PAN^o]"F5`)Yc$Ai#j>@J4e2S/]<:Y5o&AK\`]M9*7s1_;E[jgAS'VZ>e1C;2=?,KKDM2
%'Y81H4#36al4m(r/,?PNMa6i*A[H1\anF1#c#1l0,:7bMOrk*laUVH]BQk7oj9ZI`6"I&@kr9m-M<b1$$86!FdBY\9n9*3[K0PT-
%q@f2GUSQLT"WJc5aP]7*R0T2^#,opL8=P!8\WHa;Ve'@<eePn;0qs$(d+f08ZURt5!&G,[KNX'lda]KBI5>aWcCJR"L=`5Q6=B5]
%]KhWob;mfl>6s\n<"E(Hpr>l.+_1!1\3ro"KXLsdRmAI7N=[!H6&4.?W)fW\DHj=<VF^\8\M4O_J#5!Bg&*D4`>_:6/TVii)ni,!
%kXo&ETAujeku=lYof'q]m8SI.k/W3#$/\M#-6R$DECrca(u_2E/FV>^]r[/^J^6TGph`\;Ho/^I!JsC@9SM!VY_b[l4hmkgfoQeb
%VC1tlSiJ=e5r9d>KM,ISGB7Ern2^M*KUmspbqF,4"3%3L#q2[dpZX%qh&WGi,^NL:TV_JLae0>RBbh6==QqAO9!_t1rQClSEja3R
%:lNG]eWkOdrgO+;'>.H9Hi3FdV^;2HfGGMt><ZZ<N!SpTJH3PD/2AD#;O-XlW*MH!\9uC<AHetJ9NH+-YDksA[af:X1.n+KhjB>e
%(f]'mlt58Y7/mldLjpYJ==H2Y=M]G#Zu6gd=k+8ap<r:d*S%ES$fa1pX08&JR'H48,(?,VCh'LOoO3iJRe'Xc68)Xq31fQ<X%s8[
%I@JJ`(dO>bHH3<?9Sp!TW@oJ*LK_<Bk-8``$U1NWD"VXGXbLA0U>F)p6)aIQGKW!L6T/.?+0dfdV8bKUfqX-0Wk5Y8(9<1oY0m$D
%O?=7GK%7o36t-VY(hNFo+d5Q4<o^j`F;b4i8hX5)`AZa=.c\nD>()l_CIQ)l>X%3?F_bR"f4UZ.6VU?/!RZ9jW&QV,3]Lkq#mkp$
%F'"oRj-OrHk-Wf?Pgr;tje2S.SQtF=6Gtq?\m8!q\h+&]+gR5QWIn3T4l+\c%=-FbgT9*Gc;R.74gfj#l&MrefMt.g*89n@,-->p
%%k7R=F:aU8Y^8YV[UGb3XA'(Oe*Pg/[Lf:I_F9smXG%:gH]2l9W&6(q7i6t9YN?3Tb'DKAXbUpajbc,Bdl)L'jr:B>Z\p,.I__=[
%=id<l*=OqcP[u<^P(t=c$VeA#PbsLP@+"E4<KR&&es<?EbU*Ku)Z@Zl8B"6m+pGh3QA5hrb`"l(Q5hmK%SE\i;M$]]*h'si@\Pu;
%D#1%H1a1On=^)]*3GE<[/0dQ<f>m[clsB0W$gI"`O2(4D+@<B@-]f3'+8o$MXM;P\!*]</l)d"[4D>mn6:NjL-'k=`#0OarX4m>T
%J@/6UFOTG4+&\>%#^'ssqk.D[OpU8;W[sM?.N1^I1\eH.>+1lS2]\ZVAru,35/#ICES`PL(;pD`Mioda/Bh!76+t^9BrGbj=jM>f
%+J_Hsr!4#[Xp'P@1\%bUoQ&d%m!3ng=iubo<knI8/2Z*KKpRm'duG_]&I=(`)54"<Up.m8*Qq,#$7L6J%M]sR5om+krDQekgbemD
%=!*$m#1EZ1pX)db-r";.+Nij\J7qF8qq'1(WnM$/&o4N!a5s0((i'f@\7tXU0,\$I9]=7G2`@ZsoQ2NIDp=m(*_d<kQQ(UXD?miR
%aO*M#.JRG=Q(tY_FPl:@+&aqe)s"4p`<VZk>_@Y(=98iI$VL/OGRMWe-D(AjfT1VfX-E2IlB5c?VVQ/Q/iWqIS+.@cFeUVQ[+Utk
%1mm^ea7(0KI`qD7OQAp8K&\7-nhT?HLaeGRgO00]W8-cPh[FIBZE1n5Y".8;4Pboc[L??lYn?"]*!F_(Nuec_kr]CEqJaAh>#Y6B
%gc,$ElrW[QS[:3lWrc7O:3$4B-:9?%c-X\u%B.;5-N'CY59=%0q3US`&`fh1K%tIL:4^hr?1^pNZ>9Vr$&F[@R]mm$cMJ*$gXV<X
%Qt7d-K"5V>R(=kNLI3,5[3%!+6k<-&?!RQg/4hhER7f6V-%26,7`h`n:Cl0,M]FniRkcaHea*AWpA>VB[IE9DfUl2]_\Valbke?,
%_T_qKO0Qsldo&fe84JY1D=d!XZep#@VX-%=5?3'S$WMDgJC:8&WT^IfZ-mrLE(&6/K1%ME1Ln,m2cf.d=]t#[AX\^M<o;hOY""X^
%P)^Sq6:VG"`GGj,gQdqgL*e'iE/7#`d1/a?-HrJtoR]Mq1<jZg[Df'@<o7:<VS)aAm+E2Irg9tGE\lYYVJ7Wtp!hlD<V"'^\`b>&
%lt+670Y@Vtp55WnO+Z!Y]<;=I2Z%@3L4gl'h^$-Trl[Ri88_2`UDMQ)m3tGr<=]AKjU8W#C,R*d.D8uMc+Zu'Z4Z4Qkh><+g_4\4
%K5O:"US%:66G^O-7\A.3NsEu5+c$.&djifqUU<HC[A6KIknGEWnAVfB?\<Yk5##uHo3n=]b.)[U68Vh'9cb9Jc3eV='=c.=+rkl\
%a/I!h9tnqHe-VL:,4N#$rF"OB%"NJ<jqD%jVWGmT*8CS+$o@VeG8fr>gf7hQ_\mCf.kh[=?EbmSGR/2dU7)$IZYuVgR8)Q,%K7g$
%[5tWSaCi@Xgh)c^b!;&u3Mae8LK8%k&-=nYF=Z"Wi&pV-]6VNkP<u1Bc-";laRn1=4as.P5@,8(m`I.A"%9Hq-KVeA1,]`=cQXMn
%47STQ0EG,VrII=qahIG".9aUaRs)P$h*^6>8JZ8ocdS4BgV,8:$;#VqCO3IHi*1k.aN7&mBPWo,1N_W!J?"g`&_0$-B_?4cZL$\G
%5M_#3)We=$dBmffa\f&u^,,uJ-H*h7KYhH`+/QF#JpVY5ks;r=I*$]'7TX(S#Aj5YGi-@Hl5Pr3#g2;Rd"W#c.#thW-20Z)_5]N[
%#Or:6lKI'2q\J?'14;!/W0ZGJ+);nJmAf@4E5JQ^Kh=:e<+E.NoBaNUC6gaY"bRPS>)1Y]G]2=7VM"b>\=G:Tl5,6Ts0^NAi6+$Y
%=d2(++FHLJ2ano*S-apkVXL:H+NV?mhs`]V"sGVS%gYLWYY=KQ=-3CBUW)r)j#L!+&.Go"bladr@"10XK68jW$GhB)WH_'`d#G8T
%8;bru9/1CWB0<h;,$V3jCs6u`lR#OULp>%q".tD6i_tMc*%)mUHV0k2P1\R7b@`tF5/@)JTJ^(u%PTDl#b_hT]>[Q4]5@DWW(g6]
%ItcaB>"Jgf_:<#f#ic/Nd:c]0k18LI&]mi#.?[sZod*_>'$N8O=?qOk%sTSVc7N`&<VT=XR??@,BHi+IEW?CZB4'W7TG1$7gl-dl
%X#X]FBCn\_OKN2GL=9m:K^36Re"[&'#Li?_(Zf_sZG*]K08ROdT)S+q^N""B\>i66eQo?lV,0].rn.uNFS,l,a$T@s%8'd)HYpYg
%JqQYV5NpkW>uID_#E9_??A;HC_1jo(;)BWs1-I.5$X]8D=jf]mFFVj`TI!'PaW+%O$ZN,dQ\3EWluC18EqVrGafNGJo"^b^q2W=*
%`IMhY+^TBbp_*f8\^^.=5$<PuB$ZDIm'0b/UaVt#H:!Krj7RJ&'[*;M_]R*d8@bjQc>7;q7.LL<dXs'%,N<C1c\2sg#dpho,qt7[
%/"cIZ97oeaX^oQ]%?B[%c#p84K#7[R_tbXX5l_@@%W1(:R-cS$XNI+7(rSRa1HFR8Ej9gAaDN5aiM$%lfs6r=Rj=\(3$t)SWWs;o
%57FN)nENW/acgCX[;j=Ea_c3PYul-)7@T]Sc^:u"_H@G6%OdV'g3#ek"dGq*gKhF2qR<:0lZ8W<\2YAK`<^7;<a@;cE;o8?+;6C7
%jj<KX_"HguF+g)+C9qmtgBB9#IhTWq\qE2K17i"Y85/,:`7"1m4C6&O$;WO`kdVMg!_s9!Fs'^,[0_/pgP?th5\MAT"FDquU0W@A
%RaK[jj<;%n44D)%DP\=?1JXsCk%n1<agP-sK-;sSSH36Zf%Z09)pfpnObhE[n;n?q>%gORS0DC/T]&]e#3DVEFN['B1,_<2Uhk\H
%T=qEt;L5-O"uL#T"V3iaj8tmtflq&*,rCUTm`Yu-O2Gd^m\L?l2O7t4cGFGBT_9_B7Sl34.0QC_fbXp%0rN9j68hkj@bQ%'#AD1-
%FaR9'Z6!k]W?uDD:E!2IRc@c_o5&J<V\_2I_1X(ss*bY%N^h$=(-7Bha9_]0k]#=YLkDX4>D54V':">C?3j[a3T`/d3]EXSGhTe$
%;NR5(pXF.0Vj_FDdG?b._+.>RCJK3&f_J[?@/%,4Pt-!=53Pg",'=cF/32EIP$53a'<k#R=Jc4&g8n]373-q(3KS&c%luP!QDXkR
%D+.B[>$<)Bd9,.[jCSUA60M&H3<RLlWA!tI[=T?Ws)&ke)."RTW\534SUY:pQEIloWbRu4E5u9.<"?+i-ug_`BL-K!]S',E4PjR;
%+?2[?FYYtLrJduSiG7u-V`E9LPi*Q'TiPD<Y82)DBQ=e7=HL_8%+dtI\r>@;"l'9M>aT)a,;.\hOZ0.dXJ:o\0eB1Xd,]d%,9[VU
%?Ed5+/SN*?G3EVjeN&QQ+dF(Vc^_r[@E&sV6EY%eQ9m"HhHCmFcQ!Yn8PnG2!L0Z-TuQNX%\pF7:,IKIO2fW"SlAu7`EjbM/3PH0
%m`o$>akVtB=Ipa^B,+F;m3s$6l!IJ<.[6(o<Q0iLI6h$J!kB+o5?EW3Yhl&^RLM*Q<BQZVl:A:['+#hn<FJGKY.-480mOq-kkC<9
%5Ys"\6<nB]=fOiTlB)E7^OTgd7R3+s@<F!h,p?!,@4H^h!fc?ue&?)F&T7,j35:,E1XE%lqXghrMROM2d<9Qe;:dS[cQUdO)!Vll
%[1K'PVj!7Pm@dek,[IXLaIrrd;mMe\>-^`Q98#t;D2ropf.\jm,k*f,+PJ=Y[<ojqr#VD/6TCB<*,SUX;]#uZE>Kk^l-R8"e=QUN
%@2?nGe$LHh98+p\O.h:^rQC:lWt<'WJ_O*!BgR5A5r?_VV(bY.bodkral(:7ADm:n@Le[+P>Ie"^J'HX@;$I8QU3nD;D(<*fp3Ya
%1uQlM*7$+.L`eK9IB3a8_IT'mpF^aFHH8CigSNOgaiO@g3[",u.38Up.Sd3qdHAVh_>q/b4c+suR-75,ZU71W]LS(tT$UlUOI%ee
%c++Ep60E2qX/><a3bgJ`%-DY5klc7G5lOqgW,7MbT"*e^G9p+(LV+>VB<X]3JM@%[r/`3[#g't1X_>B(/P8'ELGhZoW:m)=-nE,1
%C1b+)LUT(N<u"+Ere\bf@eXd5dH\lfgS%]Krbdgi14Gd^VaJi.8gZnRY$Ibo`.YLn**"h,2\YD:\@B'r.ZmM&E3$AF%-TnsM".*;
%>/%,9ic@,tOAKY^OT;"aA10a(KoA:Kcr2JUS%jr?b6h.mJ6nA\$3Y$<i79EqEhmfE>riks"9!I1,IH5u;1RhGT1+mtf5'#BH]4Pu
%rES?GY91'g+Xf__bs=*;nh.\M+"o$!#`r)<[NlmXCFE(P,Djr@o8Z]7lGk;Hp+74E5E@!5Y1M%+\+UY-:)r`U3TA*C2W?Zbp(SC6
%(+3uRQ+`>\a*`eo]V(ge</-^bUK\1G2iNbu%t)7#&#4nao]$*DCq&b7,Gnaq%>;cRXZT`2`S>cu,#_Ak7aT0<;+=dZ)R;<q#Xj8k
%n('MQa69.*aq:I8RJeUi()=4c.<Gna(*)PY/"04TPbWt'.'`h>5m@m'EEL%-?p2<#>7\Q`=)TuSN,).KJ0bgoKX@_Hb)gb?+0T??
%:d/!j)BPTKSJ-1Tp))UiHT`P3@7U4i&*jl+qu9q$a$9RPs8;YIJ,f%7+$M76n,DVprqPN'qpQYdpST,5oXB>Aa+*p&s82?N&-)8t
%\3>E?5O55F5Q9ofJ,-kZr21X/roJY.o=k=B8&kjapNQZ4?iJO3rltHJR,^L5~>
%AI9_PrivateDataEnd
